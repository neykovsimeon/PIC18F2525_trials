

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Jun 29 15:23:39 2019

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 1.42
    36                           ; Generated 13/04/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F2525 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  00B55C                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _button_enable
    75  00B55C  01                 	db	1
    76                           
    77                           ;initializer for _selected
    78  00B55D  01                 	db	1
    79                           
    80                           	psect	mediumconst
    81  00BEA4                     __pmediumconst:
    82                           	opt stack 0
    83  00BEA4  00                 	db	0
    84  00BEA5                     _my_menu:
    85                           	opt stack 0
    86  00BEA5  2D                 	db	low _menu_000
    87  00BEA6  BF                 	db	high _menu_000
    88  00BEA7  0A                 	db	10
    89  00BEA8  00                 	db	0
    90  00BEA9  00                 	db	0
    91  00BEAA  00                 	db	0
    92  00BEAB  00                 	db	0
    93  00BEAC  00                 	db	0
    94  00BEAD  C5                 	db	low _menu_001
    95  00BEAE  BF                 	db	high _menu_001
    96  00BEAF  0A                 	db	10
    97  00BEB0  01                 	db	1
    98  00BEB1  02                 	db	2
    99  00BEB2  01                 	db	1
   100  00BEB3  00                 	db	0
   101  00BEB4  00                 	db	0
   102  00BEB5  BC                 	db	low _menu_002
   103  00BEB6  BF                 	db	high _menu_002
   104  00BEB7  0A                 	db	10
   105  00BEB8  01                 	db	1
   106  00BEB9  03                 	db	3
   107  00BEBA  0B                 	db	11
   108  00BEBB  00                 	db	0
   109  00BEBC  00                 	db	0
   110  00BEBD  B3                 	db	low _menu_003
   111  00BEBE  BF                 	db	high _menu_003
   112  00BEBF  0A                 	db	10
   113  00BEC0  02                 	db	2
   114  00BEC1  04                 	db	4
   115  00BEC2  03                 	db	3
   116  00BEC3  00                 	db	0
   117  00BEC4  00                 	db	0
   118  00BEC5  AA                 	db	low _menu_004
   119  00BEC6  BF                 	db	high _menu_004
   120  00BEC7  0A                 	db	10
   121  00BEC8  03                 	db	3
   122  00BEC9  05                 	db	5
   123  00BECA  04                 	db	4
   124  00BECB  00                 	db	0
   125  00BECC  00                 	db	0
   126  00BECD  A1                 	db	low _menu_005
   127  00BECE  BF                 	db	high _menu_005
   128  00BECF  0A                 	db	10
   129  00BED0  04                 	db	4
   130  00BED1  06                 	db	6
   131  00BED2  05                 	db	5
   132  00BED3  00                 	db	0
   133  00BED4  00                 	db	0
   134  00BED5  98                 	db	low _menu_006
   135  00BED6  BF                 	db	high _menu_006
   136  00BED7  0A                 	db	10
   137  00BED8  05                 	db	5
   138  00BED9  07                 	db	7
   139  00BEDA  06                 	db	6
   140  00BEDB  00                 	db	0
   141  00BEDC  00                 	db	0
   142  00BEDD  8F                 	db	low _menu_007
   143  00BEDE  BF                 	db	high _menu_007
   144  00BEDF  0A                 	db	10
   145  00BEE0  06                 	db	6
   146  00BEE1  08                 	db	8
   147  00BEE2  07                 	db	7
   148  00BEE3  00                 	db	0
   149  00BEE4  00                 	db	0
   150  00BEE5  86                 	db	low _menu_008
   151  00BEE6  BF                 	db	high _menu_008
   152  00BEE7  0A                 	db	10
   153  00BEE8  07                 	db	7
   154  00BEE9  09                 	db	9
   155  00BEEA  08                 	db	8
   156  00BEEB  00                 	db	0
   157  00BEEC  00                 	db	0
   158  00BEED  D6                 	db	low _menu_009
   159  00BEEE  BF                 	db	high _menu_009
   160  00BEEF  0A                 	db	10
   161  00BEF0  08                 	db	8
   162  00BEF1  09                 	db	9
   163  00BEF2  09                 	db	9
   164  00BEF3  1E                 	db	low _start
   165  00BEF4  B6                 	db	high _start
   166  00BEF5  7A                 	db	low _menu_010
   167  00BEF6  BF                 	db	high _menu_010
   168  00BEF7  07                 	db	7
   169  00BEF8  00                 	db	0
   170  00BEF9  00                 	db	0
   171  00BEFA  00                 	db	0
   172  00BEFB  00                 	db	0
   173  00BEFC  00                 	db	0
   174  00BEFD  6E                 	db	low _menu_011
   175  00BEFE  BF                 	db	high _menu_011
   176  00BEFF  07                 	db	7
   177  00BF00  01                 	db	1
   178  00BF01  0C                 	db	12
   179  00BF02  0B                 	db	11
   180  00BF03  00                 	db	0
   181  00BF04  00                 	db	0
   182  00BF05  62                 	db	low _menu_012
   183  00BF06  BF                 	db	high _menu_012
   184  00BF07  07                 	db	7
   185  00BF08  0B                 	db	11
   186  00BF09  0D                 	db	13
   187  00BF0A  0C                 	db	12
   188  00BF0B  00                 	db	0
   189  00BF0C  00                 	db	0
   190  00BF0D  56                 	db	low _menu_013
   191  00BF0E  BF                 	db	high _menu_013
   192  00BF0F  07                 	db	7
   193  00BF10  0C                 	db	12
   194  00BF11  0E                 	db	14
   195  00BF12  0D                 	db	13
   196  00BF13  00                 	db	0
   197  00BF14  00                 	db	0
   198  00BF15  4A                 	db	low _menu_014
   199  00BF16  BF                 	db	high _menu_014
   200  00BF17  07                 	db	7
   201  00BF18  0D                 	db	13
   202  00BF19  0F                 	db	15
   203  00BF1A  0E                 	db	14
   204  00BF1B  00                 	db	0
   205  00BF1C  00                 	db	0
   206  00BF1D  3E                 	db	low _menu_015
   207  00BF1E  BF                 	db	high _menu_015
   208  00BF1F  07                 	db	7
   209  00BF20  0E                 	db	14
   210  00BF21  10                 	db	16
   211  00BF22  0F                 	db	15
   212  00BF23  00                 	db	0
   213  00BF24  00                 	db	0
   214  00BF25  CE                 	db	low _menu_016
   215  00BF26  BF                 	db	high _menu_016
   216  00BF27  07                 	db	7
   217  00BF28  0F                 	db	15
   218  00BF29  10                 	db	16
   219  00BF2A  01                 	db	1
   220  00BF2B  00                 	db	0
   221  00BF2C  00                 	db	0
   222  00BF2D                     __end_of_my_menu:
   223                           	opt stack 0
   224  00BF2D                     _menu_000:
   225                           	opt stack 0
   226  00BF2D  2D                 	db	45
   227  00BF2E  2D                 	db	45
   228  00BF2F  20                 	db	32
   229  00BF30  4D                 	db	77
   230  00BF31  61                 	db	97
   231  00BF32  69                 	db	105
   232  00BF33  6E                 	db	110
   233  00BF34  20                 	db	32
   234  00BF35  20                 	db	32
   235  00BF36  4D                 	db	77
   236  00BF37  65                 	db	101
   237  00BF38  6E                 	db	110
   238  00BF39  75                 	db	117
   239  00BF3A  20                 	db	32
   240  00BF3B  2D                 	db	45
   241  00BF3C  2D                 	db	45
   242  00BF3D  00                 	db	0
   243  00BF3E                     __end_of_menu_000:
   244                           	opt stack 0
   245  00BF3E                     _menu_015:
   246                           	opt stack 0
   247  00BF3E  20                 	db	32
   248  00BF3F  53                 	db	83
   249  00BF40  75                 	db	117
   250  00BF41  62                 	db	98
   251  00BF42  4F                 	db	79
   252  00BF43  70                 	db	112
   253  00BF44  74                 	db	116
   254  00BF45  69                 	db	105
   255  00BF46  6F                 	db	111
   256  00BF47  6E                 	db	110
   257  00BF48  35                 	db	53
   258  00BF49  00                 	db	0
   259  00BF4A                     __end_of_menu_015:
   260                           	opt stack 0
   261  00BF4A                     _menu_014:
   262                           	opt stack 0
   263  00BF4A  20                 	db	32
   264  00BF4B  53                 	db	83
   265  00BF4C  75                 	db	117
   266  00BF4D  62                 	db	98
   267  00BF4E  4F                 	db	79
   268  00BF4F  70                 	db	112
   269  00BF50  74                 	db	116
   270  00BF51  69                 	db	105
   271  00BF52  6F                 	db	111
   272  00BF53  6E                 	db	110
   273  00BF54  34                 	db	52
   274  00BF55  00                 	db	0
   275  00BF56                     __end_of_menu_014:
   276                           	opt stack 0
   277  00BF56                     _menu_013:
   278                           	opt stack 0
   279  00BF56  20                 	db	32
   280  00BF57  53                 	db	83
   281  00BF58  75                 	db	117
   282  00BF59  62                 	db	98
   283  00BF5A  4F                 	db	79
   284  00BF5B  70                 	db	112
   285  00BF5C  74                 	db	116
   286  00BF5D  69                 	db	105
   287  00BF5E  6F                 	db	111
   288  00BF5F  6E                 	db	110
   289  00BF60  33                 	db	51
   290  00BF61  00                 	db	0
   291  00BF62                     __end_of_menu_013:
   292                           	opt stack 0
   293  00BF62                     _menu_012:
   294                           	opt stack 0
   295  00BF62  20                 	db	32
   296  00BF63  53                 	db	83
   297  00BF64  75                 	db	117
   298  00BF65  62                 	db	98
   299  00BF66  4F                 	db	79
   300  00BF67  70                 	db	112
   301  00BF68  74                 	db	116
   302  00BF69  69                 	db	105
   303  00BF6A  6F                 	db	111
   304  00BF6B  6E                 	db	110
   305  00BF6C  32                 	db	50
   306  00BF6D  00                 	db	0
   307  00BF6E                     __end_of_menu_012:
   308                           	opt stack 0
   309  00BF6E                     _menu_011:
   310                           	opt stack 0
   311  00BF6E  20                 	db	32
   312  00BF6F  53                 	db	83
   313  00BF70  75                 	db	117
   314  00BF71  62                 	db	98
   315  00BF72  4F                 	db	79
   316  00BF73  70                 	db	112
   317  00BF74  74                 	db	116
   318  00BF75  69                 	db	105
   319  00BF76  6F                 	db	111
   320  00BF77  6E                 	db	110
   321  00BF78  31                 	db	49
   322  00BF79  00                 	db	0
   323  00BF7A                     __end_of_menu_011:
   324                           	opt stack 0
   325  00BF7A                     _menu_010:
   326                           	opt stack 0
   327  00BF7A  20                 	db	32
   328  00BF7B  5B                 	db	91
   329  00BF7C  53                 	db	83
   330  00BF7D  75                 	db	117
   331  00BF7E  62                 	db	98
   332  00BF7F  20                 	db	32
   333  00BF80  4D                 	db	77
   334  00BF81  65                 	db	101
   335  00BF82  6E                 	db	110
   336  00BF83  75                 	db	117
   337  00BF84  5D                 	db	93
   338  00BF85  00                 	db	0
   339  00BF86                     __end_of_menu_010:
   340                           	opt stack 0
   341  00BF86                     _menu_008:
   342                           	opt stack 0
   343  00BF86  20                 	db	32
   344  00BF87  4F                 	db	79
   345  00BF88  70                 	db	112
   346  00BF89  74                 	db	116
   347  00BF8A  69                 	db	105
   348  00BF8B  6F                 	db	111
   349  00BF8C  6E                 	db	110
   350  00BF8D  38                 	db	56
   351  00BF8E  00                 	db	0
   352  00BF8F                     __end_of_menu_008:
   353                           	opt stack 0
   354  00BF8F                     _menu_007:
   355                           	opt stack 0
   356  00BF8F  20                 	db	32
   357  00BF90  4F                 	db	79
   358  00BF91  70                 	db	112
   359  00BF92  74                 	db	116
   360  00BF93  69                 	db	105
   361  00BF94  6F                 	db	111
   362  00BF95  6E                 	db	110
   363  00BF96  37                 	db	55
   364  00BF97  00                 	db	0
   365  00BF98                     __end_of_menu_007:
   366                           	opt stack 0
   367  00BF98                     _menu_006:
   368                           	opt stack 0
   369  00BF98  20                 	db	32
   370  00BF99  4F                 	db	79
   371  00BF9A  70                 	db	112
   372  00BF9B  74                 	db	116
   373  00BF9C  69                 	db	105
   374  00BF9D  6F                 	db	111
   375  00BF9E  6E                 	db	110
   376  00BF9F  36                 	db	54
   377  00BFA0  00                 	db	0
   378  00BFA1                     __end_of_menu_006:
   379                           	opt stack 0
   380  00BFA1                     _menu_005:
   381                           	opt stack 0
   382  00BFA1  20                 	db	32
   383  00BFA2  4F                 	db	79
   384  00BFA3  70                 	db	112
   385  00BFA4  74                 	db	116
   386  00BFA5  69                 	db	105
   387  00BFA6  6F                 	db	111
   388  00BFA7  6E                 	db	110
   389  00BFA8  35                 	db	53
   390  00BFA9  00                 	db	0
   391  00BFAA                     __end_of_menu_005:
   392                           	opt stack 0
   393  00BFAA                     _menu_004:
   394                           	opt stack 0
   395  00BFAA  20                 	db	32
   396  00BFAB  4F                 	db	79
   397  00BFAC  70                 	db	112
   398  00BFAD  74                 	db	116
   399  00BFAE  69                 	db	105
   400  00BFAF  6F                 	db	111
   401  00BFB0  6E                 	db	110
   402  00BFB1  34                 	db	52
   403  00BFB2  00                 	db	0
   404  00BFB3                     __end_of_menu_004:
   405                           	opt stack 0
   406  00BFB3                     _menu_003:
   407                           	opt stack 0
   408  00BFB3  20                 	db	32
   409  00BFB4  4F                 	db	79
   410  00BFB5  70                 	db	112
   411  00BFB6  74                 	db	116
   412  00BFB7  69                 	db	105
   413  00BFB8  6F                 	db	111
   414  00BFB9  6E                 	db	110
   415  00BFBA  33                 	db	51
   416  00BFBB  00                 	db	0
   417  00BFBC                     __end_of_menu_003:
   418                           	opt stack 0
   419  00BFBC                     _menu_002:
   420                           	opt stack 0
   421  00BFBC  20                 	db	32
   422  00BFBD  4F                 	db	79
   423  00BFBE  70                 	db	112
   424  00BFBF  74                 	db	116
   425  00BFC0  69                 	db	105
   426  00BFC1  6F                 	db	111
   427  00BFC2  6E                 	db	110
   428  00BFC3  32                 	db	50
   429  00BFC4  00                 	db	0
   430  00BFC5                     __end_of_menu_002:
   431                           	opt stack 0
   432  00BFC5                     _menu_001:
   433                           	opt stack 0
   434  00BFC5  20                 	db	32
   435  00BFC6  4F                 	db	79
   436  00BFC7  70                 	db	112
   437  00BFC8  74                 	db	116
   438  00BFC9  69                 	db	105
   439  00BFCA  6F                 	db	111
   440  00BFCB  6E                 	db	110
   441  00BFCC  31                 	db	49
   442  00BFCD  00                 	db	0
   443  00BFCE                     __end_of_menu_001:
   444                           	opt stack 0
   445  00BFCE                     _menu_016:
   446                           	opt stack 0
   447  00BFCE  20                 	db	32
   448  00BFCF  52                 	db	82
   449  00BFD0  45                 	db	69
   450  00BFD1  54                 	db	84
   451  00BFD2  55                 	db	85
   452  00BFD3  52                 	db	82
   453  00BFD4  4E                 	db	78
   454  00BFD5  00                 	db	0
   455  00BFD6                     __end_of_menu_016:
   456                           	opt stack 0
   457  00BFD6                     _menu_009:
   458                           	opt stack 0
   459  00BFD6  20                 	db	32
   460  00BFD7  53                 	db	83
   461  00BFD8  54                 	db	84
   462  00BFD9  41                 	db	65
   463  00BFDA  52                 	db	82
   464  00BFDB  54                 	db	84
   465  00BFDC  00                 	db	0
   466  00BFDD                     __end_of_menu_009:
   467                           	opt stack 0
   468  0000                     _TRISCbits	set	3988
   469  0000                     _TRISB	set	3987
   470  0000                     _ADCON1	set	4033
   471  0000                     _CMCON	set	4020
   472  0000                     _OSCCON	set	4051
   473  0000                     _TRISAbits	set	3986
   474  0000                     _PORTB	set	3969
   475  0000                     _LATCbits	set	3979
   476  0000                     _RA6	set	31750
   477  0000                     _RA5	set	31749
   478  0000                     _RE3	set	31779
   479  00BFDD                     STR_1:
   480  00BFDD  21                 	db	33
   481  00BFDE  54                 	db	84	;'T'
   482  00BFDF  68                 	db	104	;'h'
   483  00BFE0  69                 	db	105	;'i'
   484  00BFE1  73                 	db	115	;'s'
   485  00BFE2  20                 	db	32
   486  00BFE3  69                 	db	105	;'i'
   487  00BFE4  73                 	db	115	;'s'
   488  00BFE5  20                 	db	32
   489  00BFE6  53                 	db	83	;'S'
   490  00BFE7  50                 	db	80	;'P'
   491  00BFE8  41                 	db	65	;'A'
   492  00BFE9  52                 	db	82	;'R'
   493  00BFEA  54                 	db	84	;'T'
   494  00BFEB  41                 	db	65	;'A'
   495  00BFEC  21                 	db	33
   496  00BFED  00                 	db	0
   497  00BFEE                     STR_2:
   498  00BFEE  42                 	db	66	;'B'
   499  00BFEF  61                 	db	97	;'a'
   500  00BFF0  73                 	db	115	;'s'
   501  00BFF1  69                 	db	105	;'i'
   502  00BFF2  20                 	db	32
   503  00BFF3  4D                 	db	77	;'M'
   504  00BFF4  61                 	db	97	;'a'
   505  00BFF5  6D                 	db	109	;'m'
   506  00BFF6  61                 	db	97	;'a'
   507  00BFF7  74                 	db	116	;'t'
   508  00BFF8  61                 	db	97	;'a'
   509  00BFF9  00                 	db	0
   510  00BFFA                     STR_3:
   511  00BFFA  76                 	db	118	;'v'
   512  00BFFB  33                 	db	51	;'3'
   513  00BFFC  2E                 	db	46
   514  00BFFD  30                 	db	48	;'0'
   515  00BFFE  00                 	db	0
   516                           
   517                           ; #config settings
   518  00BFFF  00                 	db	0	; dummy byte at the end
   519  0000                     
   520                           	psect	cinit
   521  00B5F0                     __pcinit:
   522                           	opt stack 0
   523  00B5F0                     start_initialization:
   524                           	opt stack 0
   525  00B5F0                     __initialization:
   526                           	opt stack 0
   527                           
   528                           ; Initialize objects allocated to COMRAM (2 bytes)
   529                           ; load TBLPTR registers with __pidataCOMRAM
   530  00B5F0  0E5C               	movlw	low __pidataCOMRAM
   531  00B5F2  6EF6               	movwf	tblptrl,c
   532  00B5F4  0EB5               	movlw	high __pidataCOMRAM
   533  00B5F6  6EF7               	movwf	tblptrh,c
   534  00B5F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   535  00B5FA  6EF8               	movwf	tblptru,c
   536  00B5FC  0009               	tblrd		*+	;fetch initializer
   537  00B5FE  CFF5 F021          	movff	tablat,__pdataCOMRAM
   538  00B602  0009               	tblrd		*+	;fetch initializer
   539  00B604  CFF5 F022          	movff	tablat,__pdataCOMRAM+1
   540                           
   541                           ; Clear objects allocated to COMRAM (6 bytes)
   542  00B608  6A20               	clrf	(__pbssCOMRAM+5)& (0+255),c
   543  00B60A  6A1F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   544  00B60C  6A1E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   545  00B60E  6A1D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   546  00B610  6A1C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   547  00B612  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   548  00B614                     end_of_initialization:
   549                           	opt stack 0
   550  00B614                     __end_of__initialization:
   551                           	opt stack 0
   552  00B614  0E00               	movlw	low (__Lmediumconst shr (0+16))
   553  00B616  6EF8               	movwf	tblptru,c
   554  00B618  0100               	movlb	0
   555  00B61A  EFF0  F05C         	goto	_main	;jump to C main() function
   556                           tblptru	equ	0xFF8
   557                           tblptrh	equ	0xFF7
   558                           tblptrl	equ	0xFF6
   559                           tablat	equ	0xFF5
   560                           
   561                           	psect	bssCOMRAM
   562  00001B                     __pbssCOMRAM:
   563                           	opt stack 0
   564  00001B                     _return_default_display_counter:
   565                           	opt stack 0
   566  00001B                     	ds	2
   567  00001D                     _button_delay_counter:
   568                           	opt stack 0
   569  00001D                     	ds	2
   570  00001F                     _return_default_display_counter_enable:
   571                           	opt stack 0
   572  00001F                     	ds	1
   573  000020                     _button_delay_counter_enable:
   574                           	opt stack 0
   575  000020                     	ds	1
   576                           tblptru	equ	0xFF8
   577                           tblptrh	equ	0xFF7
   578                           tblptrl	equ	0xFF6
   579                           tablat	equ	0xFF5
   580                           
   581                           	psect	dataCOMRAM
   582  000021                     __pdataCOMRAM:
   583                           	opt stack 0
   584  000021                     _button_enable:
   585                           	opt stack 0
   586  000021                     	ds	1
   587  000022                     _selected:
   588                           	opt stack 0
   589  000022                     	ds	1
   590                           tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           
   595                           	psect	cstackCOMRAM
   596  000001                     __pcstackCOMRAM:
   597                           	opt stack 0
   598  000001                     ??_Delay1Sec:
   599  000001                     ??_Delay10KTCYx:
   600  000001                     ??_SetDDRamAddr:
   601  000001                     ?_strlen:
   602                           	opt stack 0
   603  000001                     WriteCmdXLCD@cmd:
   604                           	opt stack 0
   605  000001                     WriteDataXLCD@data:
   606                           	opt stack 0
   607  000001                     Delay1KTCYx@unit:
   608                           	opt stack 0
   609  000001                     strlen@s:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x0
   613  000001                     	ds	1
   614  000002                     Delay10KTCYx@unit:
   615                           	opt stack 0
   616  000002                     putrsXLCD@buffer:
   617                           	opt stack 0
   618  000002                     Delay1Sec@cntDelay:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0x1
   622  000002                     	ds	1
   623  000003                     ??_strlen:
   624                           
   625                           ; 1 bytes @ 0x2
   626  000003                     	ds	1
   627  000004                     ??_start:
   628  000004                     SetDDRamAddr@DDaddr:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x3
   632  000004                     	ds	1
   633  000005                     OpenXLCD@lcdtype:
   634                           	opt stack 0
   635  000005                     gotoxy@y_pos:
   636                           	opt stack 0
   637  000005                     strlen@cp:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x4
   641  000005                     	ds	1
   642  000006                     gotoxy@ddramaddress:
   643                           	opt stack 0
   644                           
   645                           ; 1 bytes @ 0x5
   646  000006                     	ds	1
   647  000007                     gotoxy@x_pos:
   648                           	opt stack 0
   649  000007                     LCDWriteStringROM@y:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x6
   653  000007                     	ds	1
   654  000008                     LCDWriteStringROM@lcd_menu_items:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x7
   658  000008                     	ds	2
   659  00000A                     LCDWriteStringROM@add_line:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x9
   663  00000A                     	ds	1
   664  00000B                     LCDWriteStringROM@add_char:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xA
   668  00000B                     	ds	1
   669  00000C                     LCDWriteStringROM@lcd_i:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0xB
   673  00000C                     	ds	1
   674  00000D                     LCDWriteStringROM@lcd_offset:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0xC
   678  00000D                     	ds	1
   679  00000E                     LCDWriteStringROM@x:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0xD
   683  00000E                     	ds	1
   684  00000F                     ??_show_menu:
   685                           
   686                           ; 1 bytes @ 0xE
   687  00000F                     	ds	7
   688  000016                     show_menu@temp:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x15
   692  000016                     	ds	1
   693  000017                     show_menu@line_cnt:
   694                           	opt stack 0
   695                           
   696                           ; 1 bytes @ 0x16
   697  000017                     	ds	1
   698  000018                     show_menu@till:
   699                           	opt stack 0
   700                           
   701                           ; 1 bytes @ 0x17
   702  000018                     	ds	1
   703  000019                     show_menu@from:
   704                           	opt stack 0
   705                           
   706                           ; 1 bytes @ 0x18
   707  000019                     	ds	1
   708  00001A                     ??_main:
   709                           
   710                           ; 1 bytes @ 0x19
   711  00001A                     	ds	1
   712                           tblptru	equ	0xFF8
   713                           tblptrh	equ	0xFF7
   714                           tblptrl	equ	0xFF6
   715                           tablat	equ	0xFF5
   716                           
   717 ;;
   718 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   719 ;;
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 80 in file "lcd_trials_4bits.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;Total ram usage:        1 bytes
   741 ;; Hardware stack levels required when called:    4
   742 ;; This function calls:
   743 ;;		Absolute function
   744 ;;		_Delay1Sec
   745 ;;		_clear_display
   746 ;;		_gotoxy
   747 ;;		_init_GPIO_DIR
   748 ;;		_init_XLCD
   749 ;;		_putrsXLCD
   750 ;;		_show_menu
   751 ;;		_start
   752 ;; This function is called by:
   753 ;;		Startup code after reset
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text0
   758  00B9E0                     __ptext0:
   759                           	opt stack 0
   760  00B9E0                     _main:
   761                           	opt stack 27
   762                           
   763                           ;lcd_trials_4bits.c: 82: OSCCON = 0x76;
   764                           
   765                           ;incstack = 0
   766  00B9E0  0E76               	movlw	118
   767  00B9E2  6ED3               	movwf	4051,c	;volatile
   768                           
   769                           ;lcd_trials_4bits.c: 83: CMCON = 0x07;
   770  00B9E4  0E07               	movlw	7
   771  00B9E6  6EB4               	movwf	4020,c	;volatile
   772                           
   773                           ;lcd_trials_4bits.c: 84: ADCON1 = 0x0F;
   774  00B9E8  0E0F               	movlw	15
   775  00B9EA  6EC1               	movwf	4033,c	;volatile
   776                           
   777                           ;lcd_trials_4bits.c: 85: selected = 1;
   778  00B9EC  0E01               	movlw	1
   779  00B9EE  6E22               	movwf	_selected,c
   780                           
   781                           ;lcd_trials_4bits.c: 88: init_GPIO_DIR ();
   782  00B9F0  ECAF  F05A         	call	_init_GPIO_DIR	;wreg free
   783                           
   784                           ;lcd_trials_4bits.c: 89: init_XLCD();
   785  00B9F4  EC41  F05B         	call	_init_XLCD	;wreg free
   786                           
   787                           ;lcd_trials_4bits.c: 92: gotoxy(0, 0);
   788  00B9F8  0E00               	movlw	0
   789  00B9FA  6E05               	movwf	gotoxy@y_pos,c
   790  00B9FC  0E00               	movlw	0
   791  00B9FE  EC00  F05C         	call	_gotoxy
   792                           
   793                           ;lcd_trials_4bits.c: 93: putrsXLCD("Basi Mamata");
   794  00BA02  0EEE               	movlw	low STR_2
   795  00BA04  6E02               	movwf	putrsXLCD@buffer,c
   796  00BA06  0EBF               	movlw	high STR_2
   797  00BA08  6E03               	movwf	putrsXLCD@buffer+1,c
   798  00BA0A  EC27  F05B         	call	_putrsXLCD	;wreg free
   799                           
   800                           ;lcd_trials_4bits.c: 94: gotoxy(12, 2);
   801  00BA0E  0E02               	movlw	2
   802  00BA10  6E05               	movwf	gotoxy@y_pos,c
   803  00BA12  0E0C               	movlw	12
   804  00BA14  EC00  F05C         	call	_gotoxy
   805                           
   806                           ;lcd_trials_4bits.c: 95: putrsXLCD("v3.0");
   807  00BA18  0EFA               	movlw	low STR_3
   808  00BA1A  6E02               	movwf	putrsXLCD@buffer,c
   809  00BA1C  0EBF               	movlw	high STR_3
   810  00BA1E  6E03               	movwf	putrsXLCD@buffer+1,c
   811  00BA20  EC27  F05B         	call	_putrsXLCD	;wreg free
   812                           
   813                           ;lcd_trials_4bits.c: 96: Delay1Sec();
   814  00BA24  ECE1  F05A         	call	_Delay1Sec	;wreg free
   815                           
   816                           ;lcd_trials_4bits.c: 97: Delay1Sec();
   817  00BA28  ECE1  F05A         	call	_Delay1Sec	;wreg free
   818                           
   819                           ;lcd_trials_4bits.c: 98: clear_display();
   820  00BA2C  ECBE  F05A         	call	_clear_display	;wreg free
   821  00BA30                     l2062:
   822                           
   823                           ;lcd_trials_4bits.c: 101: show_menu();
   824  00BA30  ECC6  F05D         	call	_show_menu	;wreg free
   825                           
   826                           ;lcd_trials_4bits.c: 103: if (button_enable == 1){
   827  00BA34  0421               	decf	_button_enable,w,c
   828  00BA36  A4D8               	btfss	status,2,c
   829  00BA38  D089               	goto	l2088
   830                           
   831                           ;lcd_trials_4bits.c: 104: if (RE3 == 0){
   832  00BA3A  B684               	btfsc	3972,3,c	;volatile
   833  00BA3C  D049               	goto	l2076
   834                           
   835                           ;lcd_trials_4bits.c: 105: button_enable = 0;
   836  00BA3E  0E00               	movlw	0
   837  00BA40  6E21               	movwf	_button_enable,c
   838                           
   839                           ;lcd_trials_4bits.c: 106: button_delay_counter_enable = 1;
   840  00BA42  0E01               	movlw	1
   841  00BA44  6E20               	movwf	_button_delay_counter_enable,c
   842                           
   843                           ;lcd_trials_4bits.c: 107: button_delay_counter = 0;
   844  00BA46  0E00               	movlw	0
   845  00BA48  6E1E               	movwf	_button_delay_counter+1,c
   846  00BA4A  0E00               	movlw	0
   847  00BA4C  6E1D               	movwf	_button_delay_counter,c
   848                           
   849                           ;lcd_trials_4bits.c: 108: return_default_display_counter_enable = 1;
   850  00BA4E  0E01               	movlw	1
   851  00BA50  6E1F               	movwf	_return_default_display_counter_enable,c
   852                           
   853                           ;lcd_trials_4bits.c: 109: return_default_display_counter = 0;
   854  00BA52  0E00               	movlw	0
   855  00BA54  6E1C               	movwf	_return_default_display_counter+1,c
   856  00BA56  0E00               	movlw	0
   857  00BA58  6E1B               	movwf	_return_default_display_counter,c
   858                           
   859                           ;lcd_trials_4bits.c: 110: if (my_menu[selected].fp != 0) my_menu[selected].fp();
   860  00BA5A  5022               	movf	_selected,w,c
   861  00BA5C  0D08               	mullw	8
   862  00BA5E  0E06               	movlw	6
   863  00BA60  26F3               	addwf	prodl,f,c
   864  00BA62  0E00               	movlw	0
   865  00BA64  22F4               	addwfc	prodh,f,c
   866  00BA66  0EA5               	movlw	low _my_menu
   867  00BA68  24F3               	addwf	prodl,w,c
   868  00BA6A  6EF6               	movwf	tblptrl,c
   869  00BA6C  0EBE               	movlw	high _my_menu
   870  00BA6E  20F4               	addwfc	prodh,w,c
   871  00BA70  6EF7               	movwf	tblptrh,c
   872  00BA72                     	if	0	;There are less than 3 active tblptr bytes
   873  00BA72                     	endif
   874  00BA72  0009               	tblrd		*+
   875  00BA74  50F5               	movf	tablat,w,c
   876  00BA76  0009               	tblrd		*+
   877  00BA78  10F5               	iorwf	tablat,w,c
   878  00BA7A  B4D8               	btfsc	status,2,c
   879  00BA7C  D01A               	goto	l2074
   880  00BA7E  5022               	movf	_selected,w,c
   881  00BA80  0D08               	mullw	8
   882  00BA82  0E06               	movlw	6
   883  00BA84  26F3               	addwf	prodl,f,c
   884  00BA86  0E00               	movlw	0
   885  00BA88  22F4               	addwfc	prodh,f,c
   886  00BA8A  0EA5               	movlw	low _my_menu
   887  00BA8C  24F3               	addwf	prodl,w,c
   888  00BA8E  6EF6               	movwf	tblptrl,c
   889  00BA90  0EBE               	movlw	high _my_menu
   890  00BA92  20F4               	addwfc	prodh,w,c
   891  00BA94  6EF7               	movwf	tblptrh,c
   892  00BA96                     	if	0	;There are less than 3 active tblptr bytes
   893  00BA96                     	endif
   894  00BA96  D801               	call	u1108
   895  00BA98  D00C               	goto	l2074
   896  00BA9A                     u1108:
   897  00BA9A  0005               	push	
   898  00BA9C  6EFA               	movwf	pclath,c
   899  00BA9E  0009               	tblrd		*+
   900  00BAA0  50F5               	movf	tablat,w,c
   901  00BAA2  6EFD               	movwf	tosl,c
   902  00BAA4  0009               	tblrd		*+
   903  00BAA6  50F5               	movf	tablat,w,c
   904  00BAA8  6EFE               	movwf	tosh,c
   905  00BAAA  50F8               	movf	tblptru,w,c
   906  00BAAC  6EFF               	movwf	tosu,c
   907  00BAAE  50FA               	movf	pclath,w,c
   908  00BAB0  0012               	return		;indir
   909  00BAB2                     l2074:
   910                           
   911                           ;lcd_trials_4bits.c: 111: selected = my_menu[selected].enter;
   912  00BAB2  5022               	movf	_selected,w,c
   913  00BAB4  0D08               	mullw	8
   914  00BAB6  0E05               	movlw	5
   915  00BAB8  26F3               	addwf	prodl,f,c
   916  00BABA  0E00               	movlw	0
   917  00BABC  22F4               	addwfc	prodh,f,c
   918  00BABE  0EA5               	movlw	low _my_menu
   919  00BAC0  24F3               	addwf	prodl,w,c
   920  00BAC2  6EF6               	movwf	tblptrl,c
   921  00BAC4  0EBE               	movlw	high _my_menu
   922  00BAC6  20F4               	addwfc	prodh,w,c
   923  00BAC8  6EF7               	movwf	tblptrh,c
   924  00BACA                     	if	0	;There are less than 3 active tblptr bytes
   925  00BACA                     	endif
   926  00BACA  0008               	tblrd		*
   927  00BACC  CFF5 F022          	movff	tablat,_selected
   928  00BAD0                     l2076:
   929                           
   930                           ;lcd_trials_4bits.c: 112: }
   931                           ;lcd_trials_4bits.c: 113: if (RA5 == 0) {
   932  00BAD0  BA80               	btfsc	3968,5,c	;volatile
   933  00BAD2  D01D               	goto	l2082
   934                           
   935                           ;lcd_trials_4bits.c: 114: button_enable = 0;
   936  00BAD4  0E00               	movlw	0
   937  00BAD6  6E21               	movwf	_button_enable,c
   938                           
   939                           ;lcd_trials_4bits.c: 115: button_delay_counter_enable = 1;
   940  00BAD8  0E01               	movlw	1
   941  00BADA  6E20               	movwf	_button_delay_counter_enable,c
   942                           
   943                           ;lcd_trials_4bits.c: 116: button_delay_counter = 0;
   944  00BADC  0E00               	movlw	0
   945  00BADE  6E1E               	movwf	_button_delay_counter+1,c
   946  00BAE0  0E00               	movlw	0
   947  00BAE2  6E1D               	movwf	_button_delay_counter,c
   948                           
   949                           ;lcd_trials_4bits.c: 117: return_default_display_counter_enable = 1;
   950  00BAE4  0E01               	movlw	1
   951  00BAE6  6E1F               	movwf	_return_default_display_counter_enable,c
   952                           
   953                           ;lcd_trials_4bits.c: 118: return_default_display_counter = 0;
   954  00BAE8  0E00               	movlw	0
   955  00BAEA  6E1C               	movwf	_return_default_display_counter+1,c
   956  00BAEC  0E00               	movlw	0
   957  00BAEE  6E1B               	movwf	_return_default_display_counter,c
   958                           
   959                           ;lcd_trials_4bits.c: 119: selected = my_menu[selected].up;
   960  00BAF0  5022               	movf	_selected,w,c
   961  00BAF2  0D08               	mullw	8
   962  00BAF4  0E03               	movlw	3
   963  00BAF6  26F3               	addwf	prodl,f,c
   964  00BAF8  0E00               	movlw	0
   965  00BAFA  22F4               	addwfc	prodh,f,c
   966  00BAFC  0EA5               	movlw	low _my_menu
   967  00BAFE  24F3               	addwf	prodl,w,c
   968  00BB00  6EF6               	movwf	tblptrl,c
   969  00BB02  0EBE               	movlw	high _my_menu
   970  00BB04  20F4               	addwfc	prodh,w,c
   971  00BB06  6EF7               	movwf	tblptrh,c
   972  00BB08                     	if	0	;There are less than 3 active tblptr bytes
   973  00BB08                     	endif
   974  00BB08  0008               	tblrd		*
   975  00BB0A  CFF5 F022          	movff	tablat,_selected
   976  00BB0E                     l2082:
   977                           
   978                           ;lcd_trials_4bits.c: 120: }
   979                           ;lcd_trials_4bits.c: 121: if (RA6 == 0) {
   980  00BB0E  BC80               	btfsc	3968,6,c	;volatile
   981  00BB10  D01D               	goto	l2088
   982                           
   983                           ;lcd_trials_4bits.c: 122: button_enable = 0;
   984  00BB12  0E00               	movlw	0
   985  00BB14  6E21               	movwf	_button_enable,c
   986                           
   987                           ;lcd_trials_4bits.c: 123: button_delay_counter_enable = 1;
   988  00BB16  0E01               	movlw	1
   989  00BB18  6E20               	movwf	_button_delay_counter_enable,c
   990                           
   991                           ;lcd_trials_4bits.c: 124: button_delay_counter = 0;
   992  00BB1A  0E00               	movlw	0
   993  00BB1C  6E1E               	movwf	_button_delay_counter+1,c
   994  00BB1E  0E00               	movlw	0
   995  00BB20  6E1D               	movwf	_button_delay_counter,c
   996                           
   997                           ;lcd_trials_4bits.c: 125: return_default_display_counter_enable = 1;
   998  00BB22  0E01               	movlw	1
   999  00BB24  6E1F               	movwf	_return_default_display_counter_enable,c
  1000                           
  1001                           ;lcd_trials_4bits.c: 126: return_default_display_counter = 0;
  1002  00BB26  0E00               	movlw	0
  1003  00BB28  6E1C               	movwf	_return_default_display_counter+1,c
  1004  00BB2A  0E00               	movlw	0
  1005  00BB2C  6E1B               	movwf	_return_default_display_counter,c
  1006                           
  1007                           ;lcd_trials_4bits.c: 127: selected = my_menu[selected].down;
  1008  00BB2E  5022               	movf	_selected,w,c
  1009  00BB30  0D08               	mullw	8
  1010  00BB32  0E04               	movlw	4
  1011  00BB34  26F3               	addwf	prodl,f,c
  1012  00BB36  0E00               	movlw	0
  1013  00BB38  22F4               	addwfc	prodh,f,c
  1014  00BB3A  0EA5               	movlw	low _my_menu
  1015  00BB3C  24F3               	addwf	prodl,w,c
  1016  00BB3E  6EF6               	movwf	tblptrl,c
  1017  00BB40  0EBE               	movlw	high _my_menu
  1018  00BB42  20F4               	addwfc	prodh,w,c
  1019  00BB44  6EF7               	movwf	tblptrh,c
  1020  00BB46                     	if	0	;There are less than 3 active tblptr bytes
  1021  00BB46                     	endif
  1022  00BB46  0008               	tblrd		*
  1023  00BB48  CFF5 F022          	movff	tablat,_selected
  1024  00BB4C                     l2088:
  1025                           
  1026                           ;lcd_trials_4bits.c: 128: }
  1027                           ;lcd_trials_4bits.c: 130: }
  1028                           ;lcd_trials_4bits.c: 133: if (button_delay_counter_enable == 1) {
  1029  00BB4C  0420               	decf	_button_delay_counter_enable,w,c
  1030  00BB4E  A4D8               	btfss	status,2,c
  1031  00BB50  D014               	goto	l2094
  1032                           
  1033                           ;lcd_trials_4bits.c: 134: button_delay_counter = button_delay_counter +1;
  1034  00BB52  0E01               	movlw	1
  1035  00BB54  241D               	addwf	_button_delay_counter,w,c
  1036  00BB56  6E1D               	movwf	_button_delay_counter,c
  1037  00BB58  0E00               	movlw	0
  1038  00BB5A  201E               	addwfc	_button_delay_counter+1,w,c
  1039  00BB5C  6E1E               	movwf	_button_delay_counter+1,c
  1040                           
  1041                           ;lcd_trials_4bits.c: 135: if (button_delay_counter > 10){
  1042  00BB5E  501E               	movf	_button_delay_counter+1,w,c
  1043  00BB60  E104               	bnz	u1140
  1044  00BB62  0E0B               	movlw	11
  1045  00BB64  5C1D               	subwf	_button_delay_counter,w,c
  1046  00BB66  A0D8               	btfss	status,0,c
  1047  00BB68  D008               	goto	l2094
  1048  00BB6A                     u1140:
  1049                           
  1050                           ;lcd_trials_4bits.c: 136: button_delay_counter = 0;
  1051  00BB6A  0E00               	movlw	0
  1052  00BB6C  6E1E               	movwf	_button_delay_counter+1,c
  1053  00BB6E  0E00               	movlw	0
  1054  00BB70  6E1D               	movwf	_button_delay_counter,c
  1055                           
  1056                           ;lcd_trials_4bits.c: 137: button_enable = 1;
  1057  00BB72  0E01               	movlw	1
  1058  00BB74  6E21               	movwf	_button_enable,c
  1059                           
  1060                           ;lcd_trials_4bits.c: 138: button_delay_counter_enable = 0;
  1061  00BB76  0E00               	movlw	0
  1062  00BB78  6E20               	movwf	_button_delay_counter_enable,c
  1063  00BB7A                     l2094:
  1064                           
  1065                           ;lcd_trials_4bits.c: 140: }
  1066                           ;lcd_trials_4bits.c: 141: }
  1067                           ;lcd_trials_4bits.c: 144: _delay((unsigned long)((25)*(8000000/4000.0)));
  1068  00BB7A  0E41               	movlw	65
  1069  00BB7C  6E1A               	movwf	??_main& (0+255),c
  1070  00BB7E  0EEE               	movlw	238
  1071  00BB80                     u1197:
  1072  00BB80  2EE8               	decfsz	wreg,f,c
  1073  00BB82  D7FE               	bra	u1197
  1074  00BB84  2E1A               	decfsz	??_main& (0+255),f,c
  1075  00BB86  D7FC               	bra	u1197
  1076  00BB88  D000               	nop2	
  1077  00BB8A  D752               	goto	l2062
  1078  00BB8C                     __end_of_main:
  1079                           	opt stack 0
  1080                           tosu	equ	0xFFF
  1081                           tosh	equ	0xFFE
  1082                           tosl	equ	0xFFD
  1083                           pclath	equ	0xFFA
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           prodh	equ	0xFF4
  1089                           prodl	equ	0xFF3
  1090                           wreg	equ	0xFE8
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function _start *****************
  1094 ;; Defined at:
  1095 ;;		line 37 in file "lcd_trials_4bits.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    3
  1116 ;; This function calls:
  1117 ;;		_Delay1Sec
  1118 ;;		_clear_display
  1119 ;;		_putrsXLCD
  1120 ;; This function is called by:
  1121 ;;		_main
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text1
  1126  00B61E                     __ptext1:
  1127                           	opt stack 0
  1128  00B61E                     _start:
  1129                           	opt stack 27
  1130                           
  1131                           ;lcd_trials_4bits.c: 38: clear_display();
  1132                           
  1133                           ;incstack = 0
  1134  00B61E  ECBE  F05A         	call	_clear_display	;wreg free
  1135                           
  1136                           ;lcd_trials_4bits.c: 39: putrsXLCD("!This is SPARTA!");
  1137  00B622  0EDD               	movlw	low STR_1
  1138  00B624  6E02               	movwf	putrsXLCD@buffer,c
  1139  00B626  0EBF               	movlw	high STR_1
  1140  00B628  6E03               	movwf	putrsXLCD@buffer+1,c
  1141  00B62A  EC27  F05B         	call	_putrsXLCD	;wreg free
  1142                           
  1143                           ;lcd_trials_4bits.c: 40: Delay1Sec();
  1144  00B62E  ECE1  F05A         	call	_Delay1Sec	;wreg free
  1145                           
  1146                           ;lcd_trials_4bits.c: 41: selected = 1;
  1147  00B632  0E01               	movlw	1
  1148  00B634  6E22               	movwf	_selected,c
  1149  00B636                     l60:
  1150  00B636  B684               	btfsc	3972,3,c	;volatile
  1151  00B638  D7FE               	goto	l60
  1152                           
  1153                           ;lcd_trials_4bits.c: 43: _delay((unsigned long)((50)*(8000000/4000.0)));
  1154  00B63A  0E82               	movlw	130
  1155  00B63C  6E04               	movwf	??_start& (0+255),c
  1156  00B63E  0EDE               	movlw	222
  1157  00B640                     u1207:
  1158  00B640  2EE8               	decfsz	wreg,f,c
  1159  00B642  D7FE               	bra	u1207
  1160  00B644  2E04               	decfsz	??_start& (0+255),f,c
  1161  00B646  D7FC               	bra	u1207
  1162                           
  1163                           ;lcd_trials_4bits.c: 44: Delay1Sec();
  1164  00B648  ECE1  F05A         	call	_Delay1Sec	;wreg free
  1165  00B64C  0012               	return	
  1166  00B64E                     __end_of_start:
  1167                           	opt stack 0
  1168                           tosu	equ	0xFFF
  1169                           tosh	equ	0xFFE
  1170                           tosl	equ	0xFFD
  1171                           pclath	equ	0xFFA
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           prodh	equ	0xFF4
  1177                           prodl	equ	0xFF3
  1178                           wreg	equ	0xFE8
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function _putrsXLCD *****************
  1182 ;; Defined at:
  1183 ;;		line 16 in file "putrxlcd.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  buffer          2    1[COMRAM] PTR const unsigned char 
  1186 ;;		 -> STR_3(5), STR_2(12), STR_1(17), 
  1187 ;; Auto vars:     Size  Location     Type
  1188 ;;		None
  1189 ;; Return value:  Size  Location     Type
  1190 ;;                  1    wreg      void 
  1191 ;; Registers used:
  1192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1193 ;; Tracked objects:
  1194 ;;		On entry : 0/0
  1195 ;;		On exit  : 0/0
  1196 ;;		Unchanged: 0/0
  1197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;Total ram usage:        2 bytes
  1203 ;; Hardware stack levels used:    1
  1204 ;; Hardware stack levels required when called:    2
  1205 ;; This function calls:
  1206 ;;		_BusyXLCD
  1207 ;;		_WriteDataXLCD
  1208 ;; This function is called by:
  1209 ;;		_start
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text2
  1215  00B64E                     __ptext2:
  1216                           	opt stack 0
  1217  00B64E                     _putrsXLCD:
  1218                           	opt stack 27
  1219                           
  1220                           ;putrxlcd.c: 18: while(*buffer)
  1221                           
  1222                           ;incstack = 0
  1223  00B64E  D00F               	goto	l1768
  1224  00B650                     l1762:
  1225  00B650  EC5D  F05B         	call	_BusyXLCD	;wreg free
  1226  00B654  0900               	iorlw	0
  1227  00B656  A4D8               	btfss	status,2,c
  1228  00B658  D7FB               	goto	l1762
  1229                           
  1230                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
  1231  00B65A  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1232  00B65E  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1233  00B662                     	if	0	;tblptru may be non-zero
  1234  00B662                     	endif
  1235  00B662                     	if	0	;tblptru may be non-zero
  1236  00B662                     	endif
  1237  00B662  0008               	tblrd		*
  1238  00B664  50F5               	movf	tablat,w,c
  1239  00B666  EC99  F05B         	call	_WriteDataXLCD
  1240                           
  1241                           ;putrxlcd.c: 22: buffer++;
  1242  00B66A  4A02               	infsnz	putrsXLCD@buffer,f,c
  1243  00B66C  2A03               	incf	putrsXLCD@buffer+1,f,c
  1244  00B66E                     l1768:
  1245  00B66E  C002  FFF6         	movff	putrsXLCD@buffer,tblptrl
  1246  00B672  C003  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  1247  00B676                     	if	0	;tblptru may be non-zero
  1248  00B676                     	endif
  1249  00B676                     	if	0	;tblptru may be non-zero
  1250  00B676                     	endif
  1251  00B676  0008               	tblrd		*
  1252  00B678  50F5               	movf	tablat,w,c
  1253  00B67A  0900               	iorlw	0
  1254  00B67C  B4D8               	btfsc	status,2,c
  1255  00B67E  0012               	return	
  1256  00B680  D7E7               	goto	l1762
  1257  00B682                     __end_of_putrsXLCD:
  1258                           	opt stack 0
  1259                           tosu	equ	0xFFF
  1260                           tosh	equ	0xFFE
  1261                           tosl	equ	0xFFD
  1262                           pclath	equ	0xFFA
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           wreg	equ	0xFE8
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _clear_display *****************
  1273 ;; Defined at:
  1274 ;;		line 63 in file "lcd_menu.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    2
  1295 ;; This function calls:
  1296 ;;		_BusyXLCD
  1297 ;;		_WriteCmdXLCD
  1298 ;; This function is called by:
  1299 ;;		_start
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text3
  1305  00B57C                     __ptext3:
  1306                           	opt stack 0
  1307  00B57C                     _clear_display:
  1308                           	opt stack 27
  1309  00B57C                     l1756:
  1310  00B57C  EC5D  F05B         	call	_BusyXLCD	;wreg free
  1311  00B580  0900               	iorlw	0
  1312  00B582  A4D8               	btfss	status,2,c
  1313  00B584  D7FB               	goto	l1756
  1314                           
  1315                           ;lcd_menu.c: 65: WriteCmdXLCD(0x01);
  1316  00B586  0E01               	movlw	1
  1317  00B588  EC7A  F05B         	call	_WriteCmdXLCD
  1318  00B58C  0012               	return		;funcret
  1319  00B58E                     __end_of_clear_display:
  1320                           	opt stack 0
  1321                           tosu	equ	0xFFF
  1322                           tosh	equ	0xFFE
  1323                           tosl	equ	0xFFD
  1324                           pclath	equ	0xFFA
  1325                           tblptru	equ	0xFF8
  1326                           tblptrh	equ	0xFF7
  1327                           tblptrl	equ	0xFF6
  1328                           tablat	equ	0xFF5
  1329                           prodh	equ	0xFF4
  1330                           prodl	equ	0xFF3
  1331                           wreg	equ	0xFE8
  1332                           status	equ	0xFD8
  1333                           
  1334 ;; *************** function _Delay1Sec *****************
  1335 ;; Defined at:
  1336 ;;		line 86 in file "lcd_menu.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  cntDelay        2    1[COMRAM] int 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;Total ram usage:        3 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; This function calls:
  1357 ;;		Nothing
  1358 ;; This function is called by:
  1359 ;;		_start
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text4
  1365  00B5C2                     __ptext4:
  1366                           	opt stack 0
  1367  00B5C2                     _Delay1Sec:
  1368                           	opt stack 29
  1369                           
  1370                           ;lcd_menu.c: 87: for (int cntDelay = 0; cntDelay < 20; cntDelay ++) _delay((unsigned lon
      +                          g)((50)*(8000000/4000.0)));
  1371                           
  1372                           ;incstack = 0
  1373  00B5C2  0E00               	movlw	0
  1374  00B5C4  6E03               	movwf	Delay1Sec@cntDelay+1,c
  1375  00B5C6  0E00               	movlw	0
  1376  00B5C8  6E02               	movwf	Delay1Sec@cntDelay,c
  1377  00B5CA                     l1772:
  1378  00B5CA  BE03               	btfsc	Delay1Sec@cntDelay+1,7,c
  1379  00B5CC  D006               	goto	l1776
  1380  00B5CE  5003               	movf	Delay1Sec@cntDelay+1,w,c
  1381  00B5D0  E10E               	bnz	l305
  1382  00B5D2  0E14               	movlw	20
  1383  00B5D4  5C02               	subwf	Delay1Sec@cntDelay,w,c
  1384  00B5D6  B0D8               	btfsc	status,0,c
  1385  00B5D8  0012               	return	
  1386  00B5DA                     l1776:
  1387  00B5DA  0E82               	movlw	130
  1388  00B5DC  6E01               	movwf	??_Delay1Sec& (0+255),c
  1389  00B5DE  0EDE               	movlw	222
  1390  00B5E0                     u1217:
  1391  00B5E0  2EE8               	decfsz	wreg,f,c
  1392  00B5E2  D7FE               	bra	u1217
  1393  00B5E4  2E01               	decfsz	??_Delay1Sec& (0+255),f,c
  1394  00B5E6  D7FC               	bra	u1217
  1395  00B5E8  4A02               	infsnz	Delay1Sec@cntDelay,f,c
  1396  00B5EA  2A03               	incf	Delay1Sec@cntDelay+1,f,c
  1397  00B5EC  D7EE               	goto	l1772
  1398  00B5EE                     l305:
  1399  00B5EE  0012               	return		;funcret
  1400  00B5F0                     __end_of_Delay1Sec:
  1401                           	opt stack 0
  1402                           tosu	equ	0xFFF
  1403                           tosh	equ	0xFFE
  1404                           tosl	equ	0xFFD
  1405                           pclath	equ	0xFFA
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           wreg	equ	0xFE8
  1413                           status	equ	0xFD8
  1414                           
  1415 ;; *************** function _show_menu *****************
  1416 ;; Defined at:
  1417 ;;		line 178 in file "lcd_menu.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  from            1   24[COMRAM] unsigned char 
  1422 ;;  till            1   23[COMRAM] unsigned char 
  1423 ;;  line_cnt        1   22[COMRAM] unsigned char 
  1424 ;;  temp            1   21[COMRAM] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;Total ram usage:       11 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    3
  1441 ;; This function calls:
  1442 ;;		_BusyXLCD
  1443 ;;		_LCDWriteStringROM
  1444 ;;		_WriteDataXLCD
  1445 ;;		_gotoxy
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text5
  1452  00BB8C                     __ptext5:
  1453                           	opt stack 0
  1454  00BB8C                     _show_menu:
  1455                           	opt stack 27
  1456                           
  1457                           ;lcd_menu.c: 179: unsigned char line_cnt = 0;
  1458                           
  1459                           ;incstack = 0
  1460  00BB8C  0E00               	movlw	0
  1461  00BB8E  6E17               	movwf	show_menu@line_cnt,c
  1462                           
  1463                           ;lcd_menu.c: 180: unsigned char from = 0;
  1464  00BB90  0E00               	movlw	0
  1465  00BB92  6E19               	movwf	show_menu@from,c
  1466                           
  1467                           ;lcd_menu.c: 181: unsigned char till = 0;
  1468  00BB94  0E00               	movlw	0
  1469  00BB96  6E18               	movwf	show_menu@till,c
  1470                           
  1471                           ;lcd_menu.c: 182: unsigned char temp = 0;
  1472  00BB98  0E00               	movlw	0
  1473  00BB9A  6E16               	movwf	show_menu@temp,c
  1474                           
  1475                           ;lcd_menu.c: 185: while (till <= selected){
  1476  00BB9C  D00F               	goto	l1948
  1477  00BB9E                     l1946:
  1478                           
  1479                           ;lcd_menu.c: 186: till += my_menu[till].num_menupoints;
  1480  00BB9E  5018               	movf	show_menu@till,w,c
  1481  00BBA0  0D08               	mullw	8
  1482  00BBA2  0E02               	movlw	2
  1483  00BBA4  26F3               	addwf	prodl,f,c
  1484  00BBA6  0E00               	movlw	0
  1485  00BBA8  22F4               	addwfc	prodh,f,c
  1486  00BBAA  0EA5               	movlw	low _my_menu
  1487  00BBAC  24F3               	addwf	prodl,w,c
  1488  00BBAE  6EF6               	movwf	tblptrl,c
  1489  00BBB0  0EBE               	movlw	high _my_menu
  1490  00BBB2  20F4               	addwfc	prodh,w,c
  1491  00BBB4  6EF7               	movwf	tblptrh,c
  1492  00BBB6                     	if	0	;There are less than 3 active tblptr bytes
  1493  00BBB6                     	endif
  1494  00BBB6  0008               	tblrd		*
  1495  00BBB8  50F5               	movf	tablat,w,c
  1496  00BBBA  2618               	addwf	show_menu@till,f,c
  1497  00BBBC                     l1948:
  1498  00BBBC  5018               	movf	show_menu@till,w,c
  1499  00BBBE  5C22               	subwf	_selected,w,c
  1500  00BBC0  B0D8               	btfsc	status,0,c
  1501  00BBC2  D7ED               	goto	l1946
  1502                           
  1503                           ;lcd_menu.c: 187: }
  1504                           ;lcd_menu.c: 188: from = till - my_menu[selected].num_menupoints;
  1505  00BBC4  5022               	movf	_selected,w,c
  1506  00BBC6  0D08               	mullw	8
  1507  00BBC8  0E02               	movlw	2
  1508  00BBCA  26F3               	addwf	prodl,f,c
  1509  00BBCC  0E00               	movlw	0
  1510  00BBCE  22F4               	addwfc	prodh,f,c
  1511  00BBD0  0EA5               	movlw	low _my_menu
  1512  00BBD2  24F3               	addwf	prodl,w,c
  1513  00BBD4  6EF6               	movwf	tblptrl,c
  1514  00BBD6  0EBE               	movlw	high _my_menu
  1515  00BBD8  20F4               	addwfc	prodh,w,c
  1516  00BBDA  6EF7               	movwf	tblptrh,c
  1517  00BBDC                     	if	0	;There are less than 3 active tblptr bytes
  1518  00BBDC                     	endif
  1519  00BBDC  0008               	tblrd		*
  1520  00BBDE  50F5               	movf	tablat,w,c
  1521  00BBE0  0800               	sublw	0
  1522  00BBE2  2418               	addwf	show_menu@till,w,c
  1523  00BBE4  6E19               	movwf	show_menu@from,c
  1524                           
  1525                           ;lcd_menu.c: 189: till--;
  1526  00BBE6  0618               	decf	show_menu@till,f,c
  1527                           
  1528                           ;lcd_menu.c: 190: temp = from;
  1529  00BBE8  C019  F016         	movff	show_menu@from,show_menu@temp
  1530                           
  1531                           ;lcd_menu.c: 192: if ((selected >= (from +2)) && (selected <= (till - 1))) {
  1532  00BBEC  5019               	movf	show_menu@from,w,c
  1533  00BBEE  6E0F               	movwf	??_show_menu& (0+255),c
  1534  00BBF0  6A10               	clrf	(??_show_menu+1)& (0+255),c
  1535  00BBF2  0E02               	movlw	2
  1536  00BBF4  260F               	addwf	??_show_menu,f,c
  1537  00BBF6  0E00               	movlw	0
  1538  00BBF8  2210               	addwfc	??_show_menu+1,f,c
  1539  00BBFA  5022               	movf	_selected,w,c
  1540  00BBFC  6E11               	movwf	(??_show_menu+2)& (0+255),c
  1541  00BBFE  6A12               	clrf	(??_show_menu+3)& (0+255),c
  1542  00BC00  500F               	movf	??_show_menu,w,c
  1543  00BC02  5C11               	subwf	??_show_menu+2,w,c
  1544  00BC04  5012               	movf	??_show_menu+3,w,c
  1545  00BC06  0A80               	xorlw	128
  1546  00BC08  6E13               	movwf	(??_show_menu+4)& (0+255),c
  1547  00BC0A  5010               	movf	??_show_menu+1,w,c
  1548  00BC0C  0A80               	xorlw	128
  1549  00BC0E  5813               	subwfb	(??_show_menu+4)& (0+255),w,c
  1550  00BC10  A0D8               	btfss	status,0,c
  1551  00BC12  D07F               	goto	l1988
  1552  00BC14  5022               	movf	_selected,w,c
  1553  00BC16  6E0F               	movwf	??_show_menu& (0+255),c
  1554  00BC18  6A10               	clrf	(??_show_menu+1)& (0+255),c
  1555  00BC1A  0EFF               	movlw	255
  1556  00BC1C  6E11               	movwf	(??_show_menu+2)& (0+255),c
  1557  00BC1E  0EFF               	movlw	255
  1558  00BC20  6E12               	movwf	(??_show_menu+3)& (0+255),c
  1559  00BC22  5018               	movf	show_menu@till,w,c
  1560  00BC24  6E13               	movwf	(??_show_menu+4)& (0+255),c
  1561  00BC26  6A14               	clrf	(??_show_menu+5)& (0+255),c
  1562  00BC28  5011               	movf	??_show_menu+2,w,c
  1563  00BC2A  2613               	addwf	??_show_menu+4,f,c
  1564  00BC2C  5012               	movf	??_show_menu+3,w,c
  1565  00BC2E  2214               	addwfc	??_show_menu+5,f,c
  1566  00BC30  500F               	movf	??_show_menu,w,c
  1567  00BC32  5C13               	subwf	??_show_menu+4,w,c
  1568  00BC34  5014               	movf	??_show_menu+5,w,c
  1569  00BC36  0A80               	xorlw	128
  1570  00BC38  6E15               	movwf	(??_show_menu+6)& (0+255),c
  1571  00BC3A  5010               	movf	??_show_menu+1,w,c
  1572  00BC3C  0A80               	xorlw	128
  1573  00BC3E  5815               	subwfb	(??_show_menu+6)& (0+255),w,c
  1574  00BC40  A0D8               	btfss	status,0,c
  1575  00BC42  D067               	goto	l1988
  1576                           
  1577                           ;lcd_menu.c: 193: from = selected - 2;
  1578  00BC44  5022               	movf	_selected,w,c
  1579  00BC46  0FFE               	addlw	254
  1580  00BC48  6E19               	movwf	show_menu@from,c
  1581                           
  1582                           ;lcd_menu.c: 195: if (1) {
  1583  00BC4A  5019               	movf	show_menu@from,w,c
  1584  00BC4C  0F03               	addlw	3
  1585  00BC4E  6E18               	movwf	show_menu@till,c
  1586                           
  1587                           ;lcd_menu.c: 196: LCDWriteStringROM(0, 0, my_menu[temp].text, 1, ' ');
  1588  00BC50  0E00               	movlw	0
  1589  00BC52  6E07               	movwf	LCDWriteStringROM@y,c
  1590  00BC54  5016               	movf	show_menu@temp,w,c
  1591  00BC56  0D08               	mullw	8
  1592  00BC58  0EA5               	movlw	low _my_menu
  1593  00BC5A  24F3               	addwf	prodl,w,c
  1594  00BC5C  6EF6               	movwf	tblptrl,c
  1595  00BC5E  0EBE               	movlw	high _my_menu
  1596  00BC60  20F4               	addwfc	prodh,w,c
  1597  00BC62  6EF7               	movwf	tblptrh,c
  1598  00BC64                     	if	0	;There are less than 3 active tblptr bytes
  1599  00BC64                     	endif
  1600  00BC64  0009               	tblrd		*+
  1601  00BC66  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1602  00BC6A  000A               	tblrd		*-
  1603  00BC6C  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1604  00BC70  0E01               	movlw	1
  1605  00BC72  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1606  00BC74  0E20               	movlw	32
  1607  00BC76  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1608  00BC78  0E00               	movlw	0
  1609  00BC7A  EC84  F05C         	call	_LCDWriteStringROM
  1610                           
  1611                           ;lcd_menu.c: 197: line_cnt = 1;
  1612  00BC7E  0E01               	movlw	1
  1613  00BC80  6E17               	movwf	show_menu@line_cnt,c
  1614  00BC82  D034               	goto	l1978
  1615  00BC84                     l1968:
  1616                           
  1617                           ;lcd_menu.c: 201: if (from == selected) {
  1618  00BC84  5022               	movf	_selected,w,c
  1619  00BC86  1819               	xorwf	show_menu@from,w,c
  1620  00BC88  A4D8               	btfss	status,2,c
  1621  00BC8A  D018               	goto	l1974
  1622                           
  1623                           ;lcd_menu.c: 202: LCDWriteStringROM(0, line_cnt, my_menu[from].text, 1, '<');
  1624  00BC8C  C017  F007         	movff	show_menu@line_cnt,LCDWriteStringROM@y
  1625  00BC90  5019               	movf	show_menu@from,w,c
  1626  00BC92  0D08               	mullw	8
  1627  00BC94  0EA5               	movlw	low _my_menu
  1628  00BC96  24F3               	addwf	prodl,w,c
  1629  00BC98  6EF6               	movwf	tblptrl,c
  1630  00BC9A  0EBE               	movlw	high _my_menu
  1631  00BC9C  20F4               	addwfc	prodh,w,c
  1632  00BC9E  6EF7               	movwf	tblptrh,c
  1633  00BCA0                     	if	0	;There are less than 3 active tblptr bytes
  1634  00BCA0                     	endif
  1635  00BCA0  0009               	tblrd		*+
  1636  00BCA2  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1637  00BCA6  000A               	tblrd		*-
  1638  00BCA8  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1639  00BCAC  0E01               	movlw	1
  1640  00BCAE  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1641  00BCB0  0E3C               	movlw	60
  1642  00BCB2  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1643  00BCB4  0E00               	movlw	0
  1644  00BCB6  EC84  F05C         	call	_LCDWriteStringROM
  1645  00BCBA  D017               	goto	l1976
  1646  00BCBC                     l1974:
  1647                           
  1648                           ;lcd_menu.c: 205: LCDWriteStringROM(0, line_cnt, my_menu[from].text, 1, ' ');
  1649  00BCBC  C017  F007         	movff	show_menu@line_cnt,LCDWriteStringROM@y
  1650  00BCC0  5019               	movf	show_menu@from,w,c
  1651  00BCC2  0D08               	mullw	8
  1652  00BCC4  0EA5               	movlw	low _my_menu
  1653  00BCC6  24F3               	addwf	prodl,w,c
  1654  00BCC8  6EF6               	movwf	tblptrl,c
  1655  00BCCA  0EBE               	movlw	high _my_menu
  1656  00BCCC  20F4               	addwfc	prodh,w,c
  1657  00BCCE  6EF7               	movwf	tblptrh,c
  1658  00BCD0                     	if	0	;There are less than 3 active tblptr bytes
  1659  00BCD0                     	endif
  1660  00BCD0  0009               	tblrd		*+
  1661  00BCD2  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1662  00BCD6  000A               	tblrd		*-
  1663  00BCD8  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1664  00BCDC  0E01               	movlw	1
  1665  00BCDE  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1666  00BCE0  0E20               	movlw	32
  1667  00BCE2  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1668  00BCE4  0E00               	movlw	0
  1669  00BCE6  EC84  F05C         	call	_LCDWriteStringROM
  1670  00BCEA                     l1976:
  1671                           
  1672                           ;lcd_menu.c: 206: line_cnt++;
  1673  00BCEA  2A17               	incf	show_menu@line_cnt,f,c
  1674  00BCEC                     l1978:
  1675  00BCEC  2A19               	incf	show_menu@from,f,c
  1676  00BCEE  5019               	movf	show_menu@from,w,c
  1677  00BCF0  5C18               	subwf	show_menu@till,w,c
  1678  00BCF2  B0D8               	btfsc	status,0,c
  1679  00BCF4  D7C7               	goto	l1968
  1680                           
  1681                           ;lcd_menu.c: 207: }
  1682                           ;lcd_menu.c: 208: }
  1683                           ;lcd_menu.c: 210: gotoxy(0, 2);
  1684  00BCF6  0E02               	movlw	2
  1685  00BCF8  6E05               	movwf	gotoxy@y_pos,c
  1686  00BCFA  0E00               	movlw	0
  1687  00BCFC  EC00  F05C         	call	_gotoxy
  1688  00BD00                     l1984:
  1689  00BD00  EC5D  F05B         	call	_BusyXLCD	;wreg free
  1690  00BD04  0900               	iorlw	0
  1691  00BD06  A4D8               	btfss	status,2,c
  1692  00BD08  D7FB               	goto	l1984
  1693                           
  1694                           ;lcd_menu.c: 212: WriteDataXLCD('>');
  1695  00BD0A  0E3E               	movlw	62
  1696  00BD0C  EC99  F05B         	call	_WriteDataXLCD
  1697                           
  1698                           ;lcd_menu.c: 213: } else {
  1699  00BD10  0012               	return	
  1700  00BD12                     l1988:
  1701                           
  1702                           ;lcd_menu.c: 214: if (selected < (from +2)) {
  1703  00BD12  5019               	movf	show_menu@from,w,c
  1704  00BD14  6E0F               	movwf	??_show_menu& (0+255),c
  1705  00BD16  6A10               	clrf	(??_show_menu+1)& (0+255),c
  1706  00BD18  0E02               	movlw	2
  1707  00BD1A  260F               	addwf	??_show_menu,f,c
  1708  00BD1C  0E00               	movlw	0
  1709  00BD1E  2210               	addwfc	??_show_menu+1,f,c
  1710  00BD20  5022               	movf	_selected,w,c
  1711  00BD22  6E11               	movwf	(??_show_menu+2)& (0+255),c
  1712  00BD24  6A12               	clrf	(??_show_menu+3)& (0+255),c
  1713  00BD26  500F               	movf	??_show_menu,w,c
  1714  00BD28  5C11               	subwf	??_show_menu+2,w,c
  1715  00BD2A  5012               	movf	??_show_menu+3,w,c
  1716  00BD2C  0A80               	xorlw	128
  1717  00BD2E  6E13               	movwf	(??_show_menu+4)& (0+255),c
  1718  00BD30  5010               	movf	??_show_menu+1,w,c
  1719  00BD32  0A80               	xorlw	128
  1720  00BD34  5813               	subwfb	(??_show_menu+4)& (0+255),w,c
  1721  00BD36  B0D8               	btfsc	status,0,c
  1722  00BD38  D04D               	goto	l2012
  1723                           
  1724                           ;lcd_menu.c: 215: till = from + (4 - 1);
  1725  00BD3A  5019               	movf	show_menu@from,w,c
  1726  00BD3C  0F03               	addlw	3
  1727  00BD3E  6E18               	movwf	show_menu@till,c
  1728  00BD40  D035               	goto	l2004
  1729  00BD42                     l1992:
  1730                           
  1731                           ;lcd_menu.c: 217: if (from == selected) {
  1732  00BD42  5022               	movf	_selected,w,c
  1733  00BD44  1819               	xorwf	show_menu@from,w,c
  1734  00BD46  A4D8               	btfss	status,2,c
  1735  00BD48  D018               	goto	l1998
  1736                           
  1737                           ;lcd_menu.c: 218: LCDWriteStringROM(0, line_cnt, my_menu[from].text, 1, '<');
  1738  00BD4A  C017  F007         	movff	show_menu@line_cnt,LCDWriteStringROM@y
  1739  00BD4E  5019               	movf	show_menu@from,w,c
  1740  00BD50  0D08               	mullw	8
  1741  00BD52  0EA5               	movlw	low _my_menu
  1742  00BD54  24F3               	addwf	prodl,w,c
  1743  00BD56  6EF6               	movwf	tblptrl,c
  1744  00BD58  0EBE               	movlw	high _my_menu
  1745  00BD5A  20F4               	addwfc	prodh,w,c
  1746  00BD5C  6EF7               	movwf	tblptrh,c
  1747  00BD5E                     	if	0	;There are less than 3 active tblptr bytes
  1748  00BD5E                     	endif
  1749  00BD5E  0009               	tblrd		*+
  1750  00BD60  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1751  00BD64  000A               	tblrd		*-
  1752  00BD66  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1753  00BD6A  0E01               	movlw	1
  1754  00BD6C  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1755  00BD6E  0E3C               	movlw	60
  1756  00BD70  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1757  00BD72  0E00               	movlw	0
  1758  00BD74  EC84  F05C         	call	_LCDWriteStringROM
  1759  00BD78  D017               	goto	l2000
  1760  00BD7A                     l1998:
  1761                           
  1762                           ;lcd_menu.c: 221: LCDWriteStringROM(0, line_cnt, my_menu[from].text, 1, ' ');
  1763  00BD7A  C017  F007         	movff	show_menu@line_cnt,LCDWriteStringROM@y
  1764  00BD7E  5019               	movf	show_menu@from,w,c
  1765  00BD80  0D08               	mullw	8
  1766  00BD82  0EA5               	movlw	low _my_menu
  1767  00BD84  24F3               	addwf	prodl,w,c
  1768  00BD86  6EF6               	movwf	tblptrl,c
  1769  00BD88  0EBE               	movlw	high _my_menu
  1770  00BD8A  20F4               	addwfc	prodh,w,c
  1771  00BD8C  6EF7               	movwf	tblptrh,c
  1772  00BD8E                     	if	0	;There are less than 3 active tblptr bytes
  1773  00BD8E                     	endif
  1774  00BD8E  0009               	tblrd		*+
  1775  00BD90  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1776  00BD94  000A               	tblrd		*-
  1777  00BD96  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1778  00BD9A  0E01               	movlw	1
  1779  00BD9C  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1780  00BD9E  0E20               	movlw	32
  1781  00BDA0  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1782  00BDA2  0E00               	movlw	0
  1783  00BDA4  EC84  F05C         	call	_LCDWriteStringROM
  1784  00BDA8                     l2000:
  1785                           
  1786                           ;lcd_menu.c: 222: line_cnt++;
  1787  00BDA8  2A17               	incf	show_menu@line_cnt,f,c
  1788  00BDAA  2A19               	incf	show_menu@from,f,c
  1789  00BDAC                     l2004:
  1790  00BDAC  5019               	movf	show_menu@from,w,c
  1791  00BDAE  5C18               	subwf	show_menu@till,w,c
  1792  00BDB0  B0D8               	btfsc	status,0,c
  1793  00BDB2  D7C7               	goto	l1992
  1794                           
  1795                           ;lcd_menu.c: 223: }
  1796                           ;lcd_menu.c: 224: }
  1797                           ;lcd_menu.c: 225: gotoxy(0,selected - temp);
  1798  00BDB4  5016               	movf	show_menu@temp,w,c
  1799  00BDB6  0800               	sublw	0
  1800  00BDB8  2422               	addwf	_selected,w,c
  1801  00BDBA  6E05               	movwf	gotoxy@y_pos,c
  1802  00BDBC  0E00               	movlw	0
  1803  00BDBE  EC00  F05C         	call	_gotoxy
  1804  00BDC2                     l2008:
  1805  00BDC2  EC5D  F05B         	call	_BusyXLCD	;wreg free
  1806  00BDC6  0900               	iorlw	0
  1807  00BDC8  A4D8               	btfss	status,2,c
  1808  00BDCA  D7FB               	goto	l2008
  1809                           
  1810                           ;lcd_menu.c: 227: WriteDataXLCD('>');
  1811  00BDCC  0E3E               	movlw	62
  1812  00BDCE  EC99  F05B         	call	_WriteDataXLCD
  1813                           
  1814                           ;lcd_menu.c: 228: } else {
  1815  00BDD2  0012               	return	
  1816  00BDD4                     l2012:
  1817                           
  1818                           ;lcd_menu.c: 229: if (selected == till) {
  1819  00BDD4  5018               	movf	show_menu@till,w,c
  1820  00BDD6  1822               	xorwf	_selected,w,c
  1821  00BDD8  A4D8               	btfss	status,2,c
  1822  00BDDA  0012               	return	
  1823                           
  1824                           ;lcd_menu.c: 231: if (1) {
  1825  00BDDC  5018               	movf	show_menu@till,w,c
  1826  00BDDE  0FFD               	addlw	253
  1827  00BDE0  6E19               	movwf	show_menu@from,c
  1828                           
  1829                           ;lcd_menu.c: 232: LCDWriteStringROM(0, 0, my_menu[temp].text, 1, ' ');
  1830  00BDE2  0E00               	movlw	0
  1831  00BDE4  6E07               	movwf	LCDWriteStringROM@y,c
  1832  00BDE6  5016               	movf	show_menu@temp,w,c
  1833  00BDE8  0D08               	mullw	8
  1834  00BDEA  0EA5               	movlw	low _my_menu
  1835  00BDEC  24F3               	addwf	prodl,w,c
  1836  00BDEE  6EF6               	movwf	tblptrl,c
  1837  00BDF0  0EBE               	movlw	high _my_menu
  1838  00BDF2  20F4               	addwfc	prodh,w,c
  1839  00BDF4  6EF7               	movwf	tblptrh,c
  1840  00BDF6                     	if	0	;There are less than 3 active tblptr bytes
  1841  00BDF6                     	endif
  1842  00BDF6  0009               	tblrd		*+
  1843  00BDF8  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1844  00BDFC  000A               	tblrd		*-
  1845  00BDFE  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1846  00BE02  0E01               	movlw	1
  1847  00BE04  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1848  00BE06  0E20               	movlw	32
  1849  00BE08  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1850  00BE0A  0E00               	movlw	0
  1851  00BE0C  EC84  F05C         	call	_LCDWriteStringROM
  1852                           
  1853                           ;lcd_menu.c: 233: line_cnt = 1;
  1854  00BE10  0E01               	movlw	1
  1855  00BE12  6E17               	movwf	show_menu@line_cnt,c
  1856  00BE14  D034               	goto	l2032
  1857  00BE16                     l2022:
  1858                           
  1859                           ;lcd_menu.c: 237: if (from == selected) {
  1860  00BE16  5022               	movf	_selected,w,c
  1861  00BE18  1819               	xorwf	show_menu@from,w,c
  1862  00BE1A  A4D8               	btfss	status,2,c
  1863  00BE1C  D018               	goto	l2028
  1864                           
  1865                           ;lcd_menu.c: 238: LCDWriteStringROM(0, line_cnt, my_menu[from].text, 1, '<');
  1866  00BE1E  C017  F007         	movff	show_menu@line_cnt,LCDWriteStringROM@y
  1867  00BE22  5019               	movf	show_menu@from,w,c
  1868  00BE24  0D08               	mullw	8
  1869  00BE26  0EA5               	movlw	low _my_menu
  1870  00BE28  24F3               	addwf	prodl,w,c
  1871  00BE2A  6EF6               	movwf	tblptrl,c
  1872  00BE2C  0EBE               	movlw	high _my_menu
  1873  00BE2E  20F4               	addwfc	prodh,w,c
  1874  00BE30  6EF7               	movwf	tblptrh,c
  1875  00BE32                     	if	0	;There are less than 3 active tblptr bytes
  1876  00BE32                     	endif
  1877  00BE32  0009               	tblrd		*+
  1878  00BE34  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1879  00BE38  000A               	tblrd		*-
  1880  00BE3A  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1881  00BE3E  0E01               	movlw	1
  1882  00BE40  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1883  00BE42  0E3C               	movlw	60
  1884  00BE44  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1885  00BE46  0E00               	movlw	0
  1886  00BE48  EC84  F05C         	call	_LCDWriteStringROM
  1887  00BE4C  D017               	goto	l2030
  1888  00BE4E                     l2028:
  1889                           
  1890                           ;lcd_menu.c: 241: LCDWriteStringROM(0, line_cnt, my_menu[from].text, 1, ' ');
  1891  00BE4E  C017  F007         	movff	show_menu@line_cnt,LCDWriteStringROM@y
  1892  00BE52  5019               	movf	show_menu@from,w,c
  1893  00BE54  0D08               	mullw	8
  1894  00BE56  0EA5               	movlw	low _my_menu
  1895  00BE58  24F3               	addwf	prodl,w,c
  1896  00BE5A  6EF6               	movwf	tblptrl,c
  1897  00BE5C  0EBE               	movlw	high _my_menu
  1898  00BE5E  20F4               	addwfc	prodh,w,c
  1899  00BE60  6EF7               	movwf	tblptrh,c
  1900  00BE62                     	if	0	;There are less than 3 active tblptr bytes
  1901  00BE62                     	endif
  1902  00BE62  0009               	tblrd		*+
  1903  00BE64  CFF5 F008          	movff	tablat,LCDWriteStringROM@lcd_menu_items
  1904  00BE68  000A               	tblrd		*-
  1905  00BE6A  CFF5 F009          	movff	tablat,LCDWriteStringROM@lcd_menu_items+1
  1906  00BE6E  0E01               	movlw	1
  1907  00BE70  6E0A               	movwf	LCDWriteStringROM@add_line,c
  1908  00BE72  0E20               	movlw	32
  1909  00BE74  6E0B               	movwf	LCDWriteStringROM@add_char,c
  1910  00BE76  0E00               	movlw	0
  1911  00BE78  EC84  F05C         	call	_LCDWriteStringROM
  1912  00BE7C                     l2030:
  1913                           
  1914                           ;lcd_menu.c: 242: line_cnt++;
  1915  00BE7C  2A17               	incf	show_menu@line_cnt,f,c
  1916  00BE7E                     l2032:
  1917  00BE7E  2A19               	incf	show_menu@from,f,c
  1918  00BE80  5019               	movf	show_menu@from,w,c
  1919  00BE82  5C18               	subwf	show_menu@till,w,c
  1920  00BE84  B0D8               	btfsc	status,0,c
  1921  00BE86  D7C7               	goto	l2022
  1922                           
  1923                           ;lcd_menu.c: 243: }
  1924                           ;lcd_menu.c: 244: }
  1925                           ;lcd_menu.c: 245: gotoxy(0,(4 - 1));
  1926  00BE88  0E03               	movlw	3
  1927  00BE8A  6E05               	movwf	gotoxy@y_pos,c
  1928  00BE8C  0E00               	movlw	0
  1929  00BE8E  EC00  F05C         	call	_gotoxy
  1930  00BE92                     l2038:
  1931  00BE92  EC5D  F05B         	call	_BusyXLCD	;wreg free
  1932  00BE96  0900               	iorlw	0
  1933  00BE98  A4D8               	btfss	status,2,c
  1934  00BE9A  D7FB               	goto	l2038
  1935                           
  1936                           ;lcd_menu.c: 247: WriteDataXLCD('>');
  1937  00BE9C  0E3E               	movlw	62
  1938  00BE9E  EC99  F05B         	call	_WriteDataXLCD
  1939  00BEA2  0012               	return	
  1940  00BEA4                     __end_of_show_menu:
  1941                           	opt stack 0
  1942                           tosu	equ	0xFFF
  1943                           tosh	equ	0xFFE
  1944                           tosl	equ	0xFFD
  1945                           pclath	equ	0xFFA
  1946                           tblptru	equ	0xFF8
  1947                           tblptrh	equ	0xFF7
  1948                           tblptrl	equ	0xFF6
  1949                           tablat	equ	0xFF5
  1950                           prodh	equ	0xFF4
  1951                           prodl	equ	0xFF3
  1952                           wreg	equ	0xFE8
  1953                           status	equ	0xFD8
  1954                           
  1955 ;; *************** function _gotoxy *****************
  1956 ;; Defined at:
  1957 ;;		line 98 in file "lcd_menu.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  x_pos           1    wreg     unsigned char 
  1960 ;;  y_pos           1    4[COMRAM] unsigned char 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  x_pos           1    6[COMRAM] unsigned char 
  1963 ;;  ddramaddress    1    5[COMRAM] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1973 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1974 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1976 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;Total ram usage:        3 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    2
  1980 ;; This function calls:
  1981 ;;		_BusyXLCD
  1982 ;;		_SetDDRamAddr
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;;		_show_menu
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text6
  1990  00B800                     __ptext6:
  1991                           	opt stack 0
  1992  00B800                     _gotoxy:
  1993                           	opt stack 27
  1994                           
  1995                           ;incstack = 0
  1996                           ;gotoxy@x_pos stored from wreg
  1997  00B800  6E07               	movwf	gotoxy@x_pos,c
  1998                           
  1999                           ;lcd_menu.c: 99: unsigned char ddramaddress = 0;
  2000  00B802  0E00               	movlw	0
  2001  00B804  6E06               	movwf	gotoxy@ddramaddress,c
  2002                           
  2003                           ;lcd_menu.c: 101: if (x_pos > (16 - 1)) x_pos = 0;
  2004  00B806  0E0F               	movlw	15
  2005  00B808  6407               	cpfsgt	gotoxy@x_pos,c
  2006  00B80A  D002               	goto	l1840
  2007  00B80C  0E00               	movlw	0
  2008  00B80E  6E07               	movwf	gotoxy@x_pos,c
  2009  00B810                     l1840:
  2010                           
  2011                           ;lcd_menu.c: 102: if (y_pos > (4 - 1)) y_pos = 0;
  2012  00B810  0E03               	movlw	3
  2013  00B812  6405               	cpfsgt	gotoxy@y_pos,c
  2014  00B814  D010               	goto	l1852
  2015  00B816  0E00               	movlw	0
  2016  00B818  6E05               	movwf	gotoxy@y_pos,c
  2017                           
  2018                           ;lcd_menu.c: 103: switch ( y_pos ) {
  2019  00B81A  D00D               	goto	l1852
  2020  00B81C                     l1844:
  2021                           
  2022                           ;lcd_menu.c: 109: ddramaddress = (0x40 + x_pos);
  2023  00B81C  5007               	movf	gotoxy@x_pos,w,c
  2024  00B81E  0F40               	addlw	64
  2025  00B820  D005               	goto	L2
  2026  00B822                     l1846:
  2027                           
  2028                           ;lcd_menu.c: 113: ddramaddress = (0x10 + x_pos);
  2029  00B822  5007               	movf	gotoxy@x_pos,w,c
  2030  00B824  0F10               	addlw	16
  2031  00B826  D002               	goto	L2
  2032  00B828                     l1848:
  2033                           
  2034                           ;lcd_menu.c: 117: ddramaddress = (0x50 + x_pos);
  2035  00B828  5007               	movf	gotoxy@x_pos,w,c
  2036  00B82A  0F50               	addlw	80
  2037  00B82C                     L2:
  2038  00B82C  6E06               	movwf	gotoxy@ddramaddress,c
  2039                           
  2040                           ;lcd_menu.c: 118: break;
  2041  00B82E  D011               	goto	l1854
  2042  00B830                     l326:
  2043                           
  2044                           ;lcd_menu.c: 121: ddramaddress = (0x00 + x_pos);
  2045  00B830  C007  F006         	movff	gotoxy@x_pos,gotoxy@ddramaddress
  2046                           
  2047                           ;lcd_menu.c: 123: }
  2048                           ;lcd_menu.c: 124: }
  2049                           
  2050                           ;lcd_menu.c: 122: break;
  2051  00B834  D00E               	goto	l1854
  2052  00B836                     l1852:
  2053  00B836  5005               	movf	gotoxy@y_pos,w,c
  2054                           
  2055                           ; Switch size 1, requested type "space"
  2056                           ; Number of cases is 4, Range of values is 0 to 3
  2057                           ; switch strategies available:
  2058                           ; Name         Instructions Cycles
  2059                           ; simple_byte           13     7 (average)
  2060                           ;	Chosen strategy is simple_byte
  2061  00B838  0A00               	xorlw	0	; case 0
  2062  00B83A  B4D8               	btfsc	status,2,c
  2063  00B83C  D7F9               	goto	l326
  2064  00B83E  0A01               	xorlw	1	; case 1
  2065  00B840  B4D8               	btfsc	status,2,c
  2066  00B842  D7EC               	goto	l1844
  2067  00B844  0A03               	xorlw	3	; case 2
  2068  00B846  B4D8               	btfsc	status,2,c
  2069  00B848  D7EC               	goto	l1846
  2070  00B84A  0A01               	xorlw	1	; case 3
  2071  00B84C  B4D8               	btfsc	status,2,c
  2072  00B84E  D7EC               	goto	l1848
  2073  00B850  D7EF               	goto	l326
  2074  00B852                     l1854:
  2075  00B852  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2076  00B856  0900               	iorlw	0
  2077  00B858  A4D8               	btfss	status,2,c
  2078  00B85A  D7FB               	goto	l1854
  2079                           
  2080                           ;lcd_menu.c: 126: SetDDRamAddr(ddramaddress);
  2081  00B85C  5006               	movf	gotoxy@ddramaddress,w,c
  2082  00B85E  ECD7  F05B         	call	_SetDDRamAddr
  2083  00B862  0012               	return		;funcret
  2084  00B864                     __end_of_gotoxy:
  2085                           	opt stack 0
  2086                           tosu	equ	0xFFF
  2087                           tosh	equ	0xFFE
  2088                           tosl	equ	0xFFD
  2089                           pclath	equ	0xFFA
  2090                           tblptru	equ	0xFF8
  2091                           tblptrh	equ	0xFF7
  2092                           tblptrl	equ	0xFF6
  2093                           tablat	equ	0xFF5
  2094                           prodh	equ	0xFF4
  2095                           prodl	equ	0xFF3
  2096                           wreg	equ	0xFE8
  2097                           status	equ	0xFD8
  2098                           
  2099 ;; *************** function _LCDWriteStringROM *****************
  2100 ;; Defined at:
  2101 ;;		line 129 in file "lcd_menu.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  x               1    wreg     unsigned char 
  2104 ;;  y               1    6[COMRAM] unsigned char 
  2105 ;;  lcd_menu_ite    2    7[COMRAM] PTR const unsigned char 
  2106 ;;		 -> menu_016(8), menu_015(12), menu_014(12), menu_013(12), 
  2107 ;;		 -> menu_012(12), menu_011(12), menu_010(12), menu_009(7), 
  2108 ;;		 -> menu_008(9), menu_007(9), menu_006(9), menu_005(9), 
  2109 ;;		 -> menu_004(9), menu_003(9), menu_002(9), menu_001(9), 
  2110 ;;		 -> menu_000(17), 
  2111 ;;  add_line        1    9[COMRAM] unsigned char 
  2112 ;;  add_char        1   10[COMRAM] unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  x               1   13[COMRAM] unsigned char 
  2115 ;;  lcd_offset      1   12[COMRAM] unsigned char 
  2116 ;;  lcd_i           1   11[COMRAM] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:        8 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    2
  2133 ;; This function calls:
  2134 ;;		_BusyXLCD
  2135 ;;		_SetDDRamAddr
  2136 ;;		_WriteDataXLCD
  2137 ;;		_strlen
  2138 ;; This function is called by:
  2139 ;;		_show_menu
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text7
  2144  00B908                     __ptext7:
  2145                           	opt stack 0
  2146  00B908                     _LCDWriteStringROM:
  2147                           	opt stack 27
  2148                           
  2149                           ;incstack = 0
  2150                           ;LCDWriteStringROM@x stored from wreg
  2151  00B908  6E0E               	movwf	LCDWriteStringROM@x,c
  2152                           
  2153                           ;lcd_menu.c: 130: unsigned char lcd_i;
  2154                           ;lcd_menu.c: 131: unsigned char lcd_offset = 0;
  2155  00B90A  0E00               	movlw	0
  2156  00B90C  6E0D               	movwf	LCDWriteStringROM@lcd_offset,c
  2157                           
  2158                           ;lcd_menu.c: 133: if (x > (16 - 1)) x = 0;
  2159  00B90E  0E0F               	movlw	15
  2160  00B910  640E               	cpfsgt	LCDWriteStringROM@x,c
  2161  00B912  D002               	goto	l1864
  2162  00B914  0E00               	movlw	0
  2163  00B916  6E0E               	movwf	LCDWriteStringROM@x,c
  2164  00B918                     l1864:
  2165                           
  2166                           ;lcd_menu.c: 134: if (y > (4 - 1)) y = 0;
  2167  00B918  0E03               	movlw	3
  2168  00B91A  6407               	cpfsgt	LCDWriteStringROM@y,c
  2169  00B91C  D012               	goto	l1878
  2170  00B91E  0E00               	movlw	0
  2171  00B920  6E07               	movwf	LCDWriteStringROM@y,c
  2172                           
  2173                           ;lcd_menu.c: 135: switch ( y ) {
  2174  00B922  D00F               	goto	l1878
  2175  00B924                     l336:
  2176                           
  2177                           ;lcd_menu.c: 137: lcd_offset = 0x00 + x;
  2178  00B924  C00E  F00D         	movff	LCDWriteStringROM@x,LCDWriteStringROM@lcd_offset
  2179                           
  2180                           ;lcd_menu.c: 138: break;
  2181  00B928  D01A               	goto	l1880
  2182  00B92A                     l1868:
  2183                           
  2184                           ;lcd_menu.c: 141: lcd_offset = 0x40 + x;
  2185  00B92A  500E               	movf	LCDWriteStringROM@x,w,c
  2186  00B92C  0F40               	addlw	64
  2187  00B92E  D007               	goto	L5
  2188  00B930                     l1870:
  2189                           
  2190                           ;lcd_menu.c: 145: lcd_offset = 0x10 + x;
  2191  00B930  500E               	movf	LCDWriteStringROM@x,w,c
  2192  00B932  0F10               	addlw	16
  2193  00B934  D004               	goto	L5
  2194  00B936                     l1872:
  2195                           
  2196                           ;lcd_menu.c: 149: lcd_offset = 0x50 + x;
  2197  00B936  500E               	movf	LCDWriteStringROM@x,w,c
  2198  00B938  0F50               	addlw	80
  2199  00B93A  D001               	goto	L5
  2200  00B93C                     l1874:
  2201                           
  2202                           ;lcd_menu.c: 153: lcd_offset = 0x00;
  2203  00B93C  0E00               	movlw	0
  2204  00B93E                     L5:
  2205  00B93E  6E0D               	movwf	LCDWriteStringROM@lcd_offset,c
  2206                           
  2207                           ;lcd_menu.c: 155: }
  2208                           ;lcd_menu.c: 156: }
  2209                           
  2210                           ;lcd_menu.c: 154: break;
  2211  00B940  D00E               	goto	l1880
  2212  00B942                     l1878:
  2213  00B942  5007               	movf	LCDWriteStringROM@y,w,c
  2214                           
  2215                           ; Switch size 1, requested type "space"
  2216                           ; Number of cases is 4, Range of values is 0 to 3
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte           13     7 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221  00B944  0A00               	xorlw	0	; case 0
  2222  00B946  B4D8               	btfsc	status,2,c
  2223  00B948  D7ED               	goto	l336
  2224  00B94A  0A01               	xorlw	1	; case 1
  2225  00B94C  B4D8               	btfsc	status,2,c
  2226  00B94E  D7ED               	goto	l1868
  2227  00B950  0A03               	xorlw	3	; case 2
  2228  00B952  B4D8               	btfsc	status,2,c
  2229  00B954  D7ED               	goto	l1870
  2230  00B956  0A01               	xorlw	1	; case 3
  2231  00B958  B4D8               	btfsc	status,2,c
  2232  00B95A  D7ED               	goto	l1872
  2233  00B95C  D7EF               	goto	l1874
  2234  00B95E                     l1880:
  2235  00B95E  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2236  00B962  0900               	iorlw	0
  2237  00B964  A4D8               	btfss	status,2,c
  2238  00B966  D7FB               	goto	l1880
  2239                           
  2240                           ;lcd_menu.c: 158: SetDDRamAddr(lcd_offset);
  2241  00B968  500D               	movf	LCDWriteStringROM@lcd_offset,w,c
  2242  00B96A  ECD7  F05B         	call	_SetDDRamAddr
  2243                           
  2244                           ;lcd_menu.c: 159: lcd_offset = strlen(lcd_menu_items);
  2245  00B96E  C008  F001         	movff	LCDWriteStringROM@lcd_menu_items,strlen@s
  2246  00B972  C009  F002         	movff	LCDWriteStringROM@lcd_menu_items+1,strlen@s+1
  2247  00B976  ECB8  F05B         	call	_strlen	;wreg free
  2248  00B97A  5001               	movf	?_strlen,w,c
  2249  00B97C  6E0D               	movwf	LCDWriteStringROM@lcd_offset,c
  2250                           
  2251                           ;lcd_menu.c: 163: if (lcd_offset > 16) lcd_offset = 16;
  2252  00B97E  0E10               	movlw	16
  2253  00B980  640D               	cpfsgt	LCDWriteStringROM@lcd_offset,c
  2254  00B982  D002               	goto	l1890
  2255  00B984  0E10               	movlw	16
  2256  00B986  6E0D               	movwf	LCDWriteStringROM@lcd_offset,c
  2257  00B988                     l1890:
  2258                           
  2259                           ;lcd_menu.c: 164: for (lcd_i = lcd_offset; lcd_i; lcd_i--){
  2260  00B988  C00D  F00C         	movff	LCDWriteStringROM@lcd_offset,LCDWriteStringROM@lcd_i
  2261  00B98C  D010               	goto	l1900
  2262  00B98E                     l1892:
  2263  00B98E  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2264  00B992  0900               	iorlw	0
  2265  00B994  A4D8               	btfss	status,2,c
  2266  00B996  D7FB               	goto	l1892
  2267                           
  2268                           ;lcd_menu.c: 166: WriteDataXLCD(*lcd_menu_items);
  2269  00B998  C008  FFF6         	movff	LCDWriteStringROM@lcd_menu_items,tblptrl
  2270  00B99C  C009  FFF7         	movff	LCDWriteStringROM@lcd_menu_items+1,tblptrh
  2271  00B9A0                     	if	0	;tblptru may be non-zero
  2272  00B9A0                     	endif
  2273  00B9A0                     	if	0	;tblptru may be non-zero
  2274  00B9A0                     	endif
  2275  00B9A0  0008               	tblrd		*
  2276  00B9A2  50F5               	movf	tablat,w,c
  2277  00B9A4  EC99  F05B         	call	_WriteDataXLCD
  2278                           
  2279                           ;lcd_menu.c: 167: lcd_menu_items++;
  2280  00B9A8  4A08               	infsnz	LCDWriteStringROM@lcd_menu_items,f,c
  2281  00B9AA  2A09               	incf	LCDWriteStringROM@lcd_menu_items+1,f,c
  2282  00B9AC  060C               	decf	LCDWriteStringROM@lcd_i,f,c
  2283  00B9AE                     l1900:
  2284  00B9AE  500C               	movf	LCDWriteStringROM@lcd_i,w,c
  2285  00B9B0  A4D8               	btfss	status,2,c
  2286  00B9B2  D7ED               	goto	l1892
  2287                           
  2288                           ;lcd_menu.c: 168: }
  2289                           ;lcd_menu.c: 169: if (add_line){
  2290  00B9B4  500A               	movf	LCDWriteStringROM@add_line,w,c
  2291  00B9B6  B4D8               	btfsc	status,2,c
  2292  00B9B8  0012               	return	
  2293                           
  2294                           ;lcd_menu.c: 170: for (lcd_i = 16 - lcd_offset - x; lcd_i; lcd_i--) {
  2295  00B9BA  500D               	movf	LCDWriteStringROM@lcd_offset,w,c
  2296  00B9BC  240E               	addwf	LCDWriteStringROM@x,w,c
  2297  00B9BE  0800               	sublw	0
  2298  00B9C0  0F10               	addlw	16
  2299  00B9C2  6E0C               	movwf	LCDWriteStringROM@lcd_i,c
  2300  00B9C4  D009               	goto	l1912
  2301  00B9C6                     l1906:
  2302  00B9C6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2303  00B9CA  0900               	iorlw	0
  2304  00B9CC  A4D8               	btfss	status,2,c
  2305  00B9CE  D7FB               	goto	l1906
  2306                           
  2307                           ;lcd_menu.c: 172: WriteDataXLCD(add_char);
  2308  00B9D0  500B               	movf	LCDWriteStringROM@add_char,w,c
  2309  00B9D2  EC99  F05B         	call	_WriteDataXLCD
  2310  00B9D6  060C               	decf	LCDWriteStringROM@lcd_i,f,c
  2311  00B9D8                     l1912:
  2312  00B9D8  500C               	movf	LCDWriteStringROM@lcd_i,w,c
  2313  00B9DA  B4D8               	btfsc	status,2,c
  2314  00B9DC  0012               	return	
  2315  00B9DE  D7F3               	goto	l1906
  2316  00B9E0                     __end_of_LCDWriteStringROM:
  2317                           	opt stack 0
  2318                           tosu	equ	0xFFF
  2319                           tosh	equ	0xFFE
  2320                           tosl	equ	0xFFD
  2321                           pclath	equ	0xFFA
  2322                           tblptru	equ	0xFF8
  2323                           tblptrh	equ	0xFF7
  2324                           tblptrl	equ	0xFF6
  2325                           tablat	equ	0xFF5
  2326                           prodh	equ	0xFF4
  2327                           prodl	equ	0xFF3
  2328                           wreg	equ	0xFE8
  2329                           status	equ	0xFD8
  2330                           
  2331 ;; *************** function _strlen *****************
  2332 ;; Defined at:
  2333 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2336 ;;		 -> menu_016(8), menu_015(12), menu_014(12), menu_013(12), 
  2337 ;;		 -> menu_012(12), menu_011(12), menu_010(12), menu_009(7), 
  2338 ;;		 -> menu_008(9), menu_007(9), menu_006(9), menu_005(9), 
  2339 ;;		 -> menu_004(9), menu_003(9), menu_002(9), menu_001(9), 
  2340 ;;		 -> menu_000(17), 
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  cp              2    4[COMRAM] PTR const unsigned char 
  2343 ;;		 -> menu_016(8), menu_015(12), menu_014(12), menu_013(12), 
  2344 ;;		 -> menu_012(12), menu_011(12), menu_010(12), menu_009(7), 
  2345 ;;		 -> menu_008(9), menu_007(9), menu_006(9), menu_005(9), 
  2346 ;;		 -> menu_004(9), menu_003(9), menu_002(9), menu_001(9), 
  2347 ;;		 -> menu_000(17), 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2    0[COMRAM] unsigned int 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        6 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_LCDWriteStringROM
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text8
  2371  00B770                     __ptext8:
  2372                           	opt stack 0
  2373  00B770                     _strlen:
  2374                           	opt stack 28
  2375                           
  2376                           ;incstack = 0
  2377  00B770  C001  F005         	movff	strlen@s,strlen@cp
  2378  00B774  C002  F006         	movff	strlen@s+1,strlen@cp+1
  2379  00B778  D002               	goto	l1748
  2380  00B77A                     l1746:
  2381  00B77A  4A05               	infsnz	strlen@cp,f,c
  2382  00B77C  2A06               	incf	strlen@cp+1,f,c
  2383  00B77E                     l1748:
  2384  00B77E  C005  FFF6         	movff	strlen@cp,tblptrl
  2385  00B782  C006  FFF7         	movff	strlen@cp+1,tblptrh
  2386  00B786                     	if	0	;tblptru may be non-zero
  2387  00B786                     	endif
  2388  00B786                     	if	0	;tblptru may be non-zero
  2389  00B786                     	endif
  2390  00B786  0008               	tblrd		*
  2391  00B788  50F5               	movf	tablat,w,c
  2392  00B78A  0900               	iorlw	0
  2393  00B78C  A4D8               	btfss	status,2,c
  2394  00B78E  D7F5               	goto	l1746
  2395  00B790  C001  F003         	movff	strlen@s,??_strlen
  2396  00B794  C002  F004         	movff	strlen@s+1,??_strlen+1
  2397  00B798  1E03               	comf	??_strlen,f,c
  2398  00B79A  1E04               	comf	??_strlen+1,f,c
  2399  00B79C  4A03               	infsnz	??_strlen,f,c
  2400  00B79E  2A04               	incf	??_strlen+1,f,c
  2401  00B7A0  5005               	movf	strlen@cp,w,c
  2402  00B7A2  2403               	addwf	??_strlen,w,c
  2403  00B7A4  6E01               	movwf	?_strlen,c
  2404  00B7A6  5006               	movf	strlen@cp+1,w,c
  2405  00B7A8  2004               	addwfc	??_strlen+1,w,c
  2406  00B7AA  6E02               	movwf	?_strlen+1,c
  2407  00B7AC  0012               	return	
  2408  00B7AE                     __end_of_strlen:
  2409                           	opt stack 0
  2410                           tosu	equ	0xFFF
  2411                           tosh	equ	0xFFE
  2412                           tosl	equ	0xFFD
  2413                           pclath	equ	0xFFA
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           wreg	equ	0xFE8
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _WriteDataXLCD *****************
  2424 ;; Defined at:
  2425 ;;		line 16 in file "writdata.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  data            1    wreg     unsigned char 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;  data            1    0[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:        1 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    1
  2446 ;; This function calls:
  2447 ;;		_DelayFor18TCY
  2448 ;; This function is called by:
  2449 ;;		_putrsXLCD
  2450 ;;		_LCDWriteStringROM
  2451 ;;		_show_menu
  2452 ;;		_putsXLCD
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text9
  2457  00B732                     __ptext9:
  2458                           	opt stack 0
  2459  00B732                     _WriteDataXLCD:
  2460                           	opt stack 27
  2461                           
  2462                           ;incstack = 0
  2463                           ;WriteDataXLCD@data stored from wreg
  2464  00B732  6E01               	movwf	WriteDataXLCD@data,c
  2465                           
  2466                           ;writdata.c: 35: TRISB &= 0xf0;
  2467  00B734  0EF0               	movlw	240
  2468  00B736  1693               	andwf	3987,f,c	;volatile
  2469                           
  2470                           ;writdata.c: 36: PORTB &= 0xf0;
  2471  00B738  0EF0               	movlw	240
  2472  00B73A  1681               	andwf	3969,f,c	;volatile
  2473                           
  2474                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
  2475  00B73C  3801               	swapf	WriteDataXLCD@data,w,c
  2476  00B73E  0B0F               	andlw	15
  2477  00B740  0B0F               	andlw	15
  2478  00B742  1281               	iorwf	3969,f,c	;volatile
  2479                           
  2480                           ;writdata.c: 39: LATCbits.LATC0 = 1;
  2481  00B744  808B               	bsf	3979,0,c	;volatile
  2482                           
  2483                           ;writdata.c: 40: LATCbits.LATC2 = 0;
  2484  00B746  948B               	bcf	3979,2,c	;volatile
  2485                           
  2486                           ;writdata.c: 41: DelayFor18TCY();
  2487  00B748  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2488                           
  2489                           ;writdata.c: 42: LATCbits.LATC1 = 1;
  2490  00B74C  828B               	bsf	3979,1,c	;volatile
  2491                           
  2492                           ;writdata.c: 43: DelayFor18TCY();
  2493  00B74E  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2494                           
  2495                           ;writdata.c: 44: LATCbits.LATC1 = 0;
  2496  00B752  928B               	bcf	3979,1,c	;volatile
  2497                           
  2498                           ;writdata.c: 49: PORTB &= 0xf0;
  2499  00B754  0EF0               	movlw	240
  2500  00B756  1681               	andwf	3969,f,c	;volatile
  2501                           
  2502                           ;writdata.c: 50: PORTB |= (data&0x0f);
  2503  00B758  5001               	movf	WriteDataXLCD@data,w,c
  2504  00B75A  0B0F               	andlw	15
  2505  00B75C  1281               	iorwf	3969,f,c	;volatile
  2506                           
  2507                           ;writdata.c: 52: DelayFor18TCY();
  2508  00B75E  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2509                           
  2510                           ;writdata.c: 53: LATCbits.LATC1 = 1;
  2511  00B762  828B               	bsf	3979,1,c	;volatile
  2512                           
  2513                           ;writdata.c: 54: DelayFor18TCY();
  2514  00B764  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2515                           
  2516                           ;writdata.c: 55: LATCbits.LATC1 = 0;
  2517  00B768  928B               	bcf	3979,1,c	;volatile
  2518                           
  2519                           ;writdata.c: 59: TRISB |= 0x0f;
  2520  00B76A  0E0F               	movlw	15
  2521  00B76C  1293               	iorwf	3987,f,c	;volatile
  2522  00B76E  0012               	return	
  2523  00B770                     __end_of_WriteDataXLCD:
  2524                           	opt stack 0
  2525                           tosu	equ	0xFFF
  2526                           tosh	equ	0xFFE
  2527                           tosl	equ	0xFFD
  2528                           pclath	equ	0xFFA
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           prodh	equ	0xFF4
  2534                           prodl	equ	0xFF3
  2535                           wreg	equ	0xFE8
  2536                           status	equ	0xFD8
  2537                           
  2538 ;; *************** function _init_XLCD *****************
  2539 ;; Defined at:
  2540 ;;		line 64 in file "lcd_trials_4bits.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    3
  2561 ;; This function calls:
  2562 ;;		_BusyXLCD
  2563 ;;		_OpenXLCD
  2564 ;;		_WriteCmdXLCD
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text10
  2571  00B682                     __ptext10:
  2572                           	opt stack 0
  2573  00B682                     _init_XLCD:
  2574                           	opt stack 27
  2575                           
  2576                           ;lcd_trials_4bits.c: 65: OpenXLCD(0b00101100 & 0b00111000);
  2577                           
  2578                           ;incstack = 0
  2579  00B682  0E28               	movlw	40
  2580  00B684  EC32  F05C         	call	_OpenXLCD
  2581  00B688                     l1932:
  2582  00B688  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2583  00B68C  0900               	iorlw	0
  2584  00B68E  A4D8               	btfss	status,2,c
  2585  00B690  D7FB               	goto	l1932
  2586                           
  2587                           ;lcd_trials_4bits.c: 72: WriteCmdXLCD(0x06);
  2588  00B692  0E06               	movlw	6
  2589  00B694  EC7A  F05B         	call	_WriteCmdXLCD
  2590  00B698                     l1936:
  2591  00B698  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2592  00B69C  0900               	iorlw	0
  2593  00B69E  A4D8               	btfss	status,2,c
  2594  00B6A0  D7FB               	goto	l1936
  2595                           
  2596                           ;lcd_trials_4bits.c: 75: WriteCmdXLCD(0x0C);
  2597  00B6A2  0E0C               	movlw	12
  2598  00B6A4  EC7A  F05B         	call	_WriteCmdXLCD
  2599  00B6A8                     l1940:
  2600  00B6A8  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2601  00B6AC  0900               	iorlw	0
  2602  00B6AE  A4D8               	btfss	status,2,c
  2603  00B6B0  D7FB               	goto	l1940
  2604                           
  2605                           ;lcd_trials_4bits.c: 77: WriteCmdXLCD(0x01);
  2606  00B6B2  0E01               	movlw	1
  2607  00B6B4  EC7A  F05B         	call	_WriteCmdXLCD
  2608  00B6B8  0012               	return		;funcret
  2609  00B6BA                     __end_of_init_XLCD:
  2610                           	opt stack 0
  2611                           tosu	equ	0xFFF
  2612                           tosh	equ	0xFFE
  2613                           tosl	equ	0xFFD
  2614                           pclath	equ	0xFFA
  2615                           tblptru	equ	0xFF8
  2616                           tblptrh	equ	0xFF7
  2617                           tblptrl	equ	0xFF6
  2618                           tablat	equ	0xFF5
  2619                           prodh	equ	0xFF4
  2620                           prodl	equ	0xFF3
  2621                           wreg	equ	0xFE8
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _OpenXLCD *****************
  2625 ;; Defined at:
  2626 ;;		line 19 in file "openxlcd.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  lcdtype         1    wreg     unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  lcdtype         1    4[COMRAM] unsigned char 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0, cstack
  2635 ;; Tracked objects:
  2636 ;;		On entry : 0/0
  2637 ;;		On exit  : 0/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2644 ;;Total ram usage:        1 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    2
  2647 ;; This function calls:
  2648 ;;		_BusyXLCD
  2649 ;;		_Delay10KTCYx
  2650 ;;		_DelayPORXLCD
  2651 ;;		_SetDDRamAddr
  2652 ;;		_WriteCmdXLCD
  2653 ;; This function is called by:
  2654 ;;		_init_XLCD
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text11
  2659  00B864                     __ptext11:
  2660                           	opt stack 0
  2661  00B864                     _OpenXLCD:
  2662                           	opt stack 27
  2663                           
  2664                           ;incstack = 0
  2665                           ;OpenXLCD@lcdtype stored from wreg
  2666  00B864  6E05               	movwf	OpenXLCD@lcdtype,c
  2667                           
  2668                           ;openxlcd.c: 31: PORTB &= 0xf0;
  2669  00B866  0EF0               	movlw	240
  2670  00B868  1681               	andwf	3969,f,c	;volatile
  2671                           
  2672                           ;openxlcd.c: 32: TRISB &= 0xF0;
  2673  00B86A  0EF0               	movlw	240
  2674  00B86C  1693               	andwf	3987,f,c	;volatile
  2675                           
  2676                           ;openxlcd.c: 35: TRISCbits.RC2 = 0;
  2677  00B86E  9494               	bcf	3988,2,c	;volatile
  2678                           
  2679                           ;openxlcd.c: 36: TRISCbits.RC0 = 0;
  2680  00B870  9094               	bcf	3988,0,c	;volatile
  2681                           
  2682                           ;openxlcd.c: 37: TRISCbits.RC1 = 0;
  2683  00B872  9294               	bcf	3988,1,c	;volatile
  2684                           
  2685                           ;openxlcd.c: 38: LATCbits.LATC2 = 0;
  2686  00B874  948B               	bcf	3979,2,c	;volatile
  2687                           
  2688                           ;openxlcd.c: 39: LATCbits.LATC0 = 0;
  2689  00B876  908B               	bcf	3979,0,c	;volatile
  2690                           
  2691                           ;openxlcd.c: 40: LATCbits.LATC1 = 0;
  2692  00B878  928B               	bcf	3979,1,c	;volatile
  2693                           
  2694                           ;openxlcd.c: 43: DelayPORXLCD();
  2695  00B87A  ECB2  F05A         	call	_DelayPORXLCD	;wreg free
  2696                           
  2697                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  2698  00B87E  0E30               	movlw	48
  2699  00B880  EC7A  F05B         	call	_WriteCmdXLCD
  2700                           
  2701                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  2702  00B884  0E05               	movlw	5
  2703  00B886  ECC7  F05A         	call	_Delay10KTCYx
  2704                           
  2705                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  2706  00B88A  0E30               	movlw	48
  2707  00B88C  EC7A  F05B         	call	_WriteCmdXLCD
  2708                           
  2709                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  2710  00B890  0E01               	movlw	1
  2711  00B892  ECC7  F05A         	call	_Delay10KTCYx
  2712                           
  2713                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  2714  00B896  0E32               	movlw	50
  2715  00B898  EC7A  F05B         	call	_WriteCmdXLCD
  2716  00B89C                     l1806:
  2717  00B89C  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2718  00B8A0  0900               	iorlw	0
  2719  00B8A2  A4D8               	btfss	status,2,c
  2720  00B8A4  D7FB               	goto	l1806
  2721  00B8A6                     l1808:
  2722  00B8A6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2723  00B8AA  0900               	iorlw	0
  2724  00B8AC  A4D8               	btfss	status,2,c
  2725  00B8AE  D7FB               	goto	l1808
  2726                           
  2727                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  2728  00B8B0  5005               	movf	OpenXLCD@lcdtype,w,c
  2729  00B8B2  EC7A  F05B         	call	_WriteCmdXLCD
  2730  00B8B6                     l1812:
  2731  00B8B6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2732  00B8BA  0900               	iorlw	0
  2733  00B8BC  A4D8               	btfss	status,2,c
  2734  00B8BE  D7FB               	goto	l1812
  2735                           
  2736                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  2737  00B8C0  0E08               	movlw	8
  2738  00B8C2  EC7A  F05B         	call	_WriteCmdXLCD
  2739  00B8C6                     l1816:
  2740  00B8C6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2741  00B8CA  0900               	iorlw	0
  2742  00B8CC  A4D8               	btfss	status,2,c
  2743  00B8CE  D7FB               	goto	l1816
  2744                           
  2745                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  2746  00B8D0  0E0F               	movlw	15
  2747  00B8D2  EC7A  F05B         	call	_WriteCmdXLCD
  2748  00B8D6                     l1820:
  2749  00B8D6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2750  00B8DA  0900               	iorlw	0
  2751  00B8DC  A4D8               	btfss	status,2,c
  2752  00B8DE  D7FB               	goto	l1820
  2753                           
  2754                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  2755  00B8E0  0E01               	movlw	1
  2756  00B8E2  EC7A  F05B         	call	_WriteCmdXLCD
  2757  00B8E6                     l1824:
  2758  00B8E6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2759  00B8EA  0900               	iorlw	0
  2760  00B8EC  A4D8               	btfss	status,2,c
  2761  00B8EE  D7FB               	goto	l1824
  2762                           
  2763                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  2764  00B8F0  0E04               	movlw	4
  2765  00B8F2  EC7A  F05B         	call	_WriteCmdXLCD
  2766  00B8F6                     l1828:
  2767  00B8F6  EC5D  F05B         	call	_BusyXLCD	;wreg free
  2768  00B8FA  0900               	iorlw	0
  2769  00B8FC  A4D8               	btfss	status,2,c
  2770  00B8FE  D7FB               	goto	l1828
  2771                           
  2772                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  2773  00B900  0E80               	movlw	128
  2774  00B902  ECD7  F05B         	call	_SetDDRamAddr
  2775  00B906  0012               	return	
  2776  00B908                     __end_of_OpenXLCD:
  2777                           	opt stack 0
  2778                           tosu	equ	0xFFF
  2779                           tosh	equ	0xFFE
  2780                           tosl	equ	0xFFD
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           wreg	equ	0xFE8
  2789                           status	equ	0xFD8
  2790                           
  2791 ;; *************** function _WriteCmdXLCD *****************
  2792 ;; Defined at:
  2793 ;;		line 13 in file "wcmdxlcd.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  cmd             1    wreg     unsigned char 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  cmd             1    0[COMRAM] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;Total ram usage:        1 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    1
  2814 ;; This function calls:
  2815 ;;		_DelayFor18TCY
  2816 ;; This function is called by:
  2817 ;;		_init_XLCD
  2818 ;;		_OpenXLCD
  2819 ;;		_clear_display
  2820 ;;		_LCDWriteCmd
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	text12
  2825  00B6F4                     __ptext12:
  2826                           	opt stack 0
  2827  00B6F4                     _WriteCmdXLCD:
  2828                           	opt stack 27
  2829                           
  2830                           ;incstack = 0
  2831                           ;WriteCmdXLCD@cmd stored from wreg
  2832  00B6F4  6E01               	movwf	WriteCmdXLCD@cmd,c
  2833                           
  2834                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  2835  00B6F6  0EF0               	movlw	240
  2836  00B6F8  1693               	andwf	3987,f,c	;volatile
  2837                           
  2838                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  2839  00B6FA  0EF0               	movlw	240
  2840  00B6FC  1681               	andwf	3969,f,c	;volatile
  2841                           
  2842                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  2843  00B6FE  3801               	swapf	WriteCmdXLCD@cmd,w,c
  2844  00B700  0B0F               	andlw	15
  2845  00B702  0B0F               	andlw	15
  2846  00B704  1281               	iorwf	3969,f,c	;volatile
  2847                           
  2848                           ;wcmdxlcd.c: 36: LATCbits.LATC2 = 0;
  2849  00B706  948B               	bcf	3979,2,c	;volatile
  2850                           
  2851                           ;wcmdxlcd.c: 37: LATCbits.LATC0 = 0;
  2852  00B708  908B               	bcf	3979,0,c	;volatile
  2853                           
  2854                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  2855  00B70A  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2856                           
  2857                           ;wcmdxlcd.c: 39: LATCbits.LATC1 = 1;
  2858  00B70E  828B               	bsf	3979,1,c	;volatile
  2859                           
  2860                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  2861  00B710  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2862                           
  2863                           ;wcmdxlcd.c: 41: LATCbits.LATC1 = 0;
  2864  00B714  928B               	bcf	3979,1,c	;volatile
  2865                           
  2866                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  2867  00B716  0EF0               	movlw	240
  2868  00B718  1681               	andwf	3969,f,c	;volatile
  2869                           
  2870                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  2871  00B71A  5001               	movf	WriteCmdXLCD@cmd,w,c
  2872  00B71C  0B0F               	andlw	15
  2873  00B71E  1281               	iorwf	3969,f,c	;volatile
  2874                           
  2875                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  2876  00B720  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2877                           
  2878                           ;wcmdxlcd.c: 50: LATCbits.LATC1 = 1;
  2879  00B724  828B               	bsf	3979,1,c	;volatile
  2880                           
  2881                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  2882  00B726  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2883                           
  2884                           ;wcmdxlcd.c: 52: LATCbits.LATC1 = 0;
  2885  00B72A  928B               	bcf	3979,1,c	;volatile
  2886                           
  2887                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  2888  00B72C  0E0F               	movlw	15
  2889  00B72E  1293               	iorwf	3987,f,c	;volatile
  2890  00B730  0012               	return	
  2891  00B732                     __end_of_WriteCmdXLCD:
  2892                           	opt stack 0
  2893                           tosu	equ	0xFFF
  2894                           tosh	equ	0xFFE
  2895                           tosl	equ	0xFFD
  2896                           pclath	equ	0xFFA
  2897                           tblptru	equ	0xFF8
  2898                           tblptrh	equ	0xFF7
  2899                           tblptrl	equ	0xFF6
  2900                           tablat	equ	0xFF5
  2901                           prodh	equ	0xFF4
  2902                           prodl	equ	0xFF3
  2903                           wreg	equ	0xFE8
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _SetDDRamAddr *****************
  2907 ;; Defined at:
  2908 ;;		line 13 in file "setddram.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  DDaddr          1    wreg     unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  DDaddr          1    3[COMRAM] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg, status,2, status,0, cstack
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;Total ram usage:        4 bytes
  2927 ;; Hardware stack levels used:    1
  2928 ;; Hardware stack levels required when called:    1
  2929 ;; This function calls:
  2930 ;;		_DelayFor18TCY
  2931 ;; This function is called by:
  2932 ;;		_OpenXLCD
  2933 ;;		_gotoxy
  2934 ;;		_LCDWriteStringROM
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text13
  2939  00B7AE                     __ptext13:
  2940                           	opt stack 0
  2941  00B7AE                     _SetDDRamAddr:
  2942                           	opt stack 27
  2943                           
  2944                           ;incstack = 0
  2945                           ;SetDDRamAddr@DDaddr stored from wreg
  2946  00B7AE  6E04               	movwf	SetDDRamAddr@DDaddr,c
  2947                           
  2948                           ;setddram.c: 32: TRISB &= 0xf0;
  2949  00B7B0  0EF0               	movlw	240
  2950  00B7B2  1693               	andwf	3987,f,c	;volatile
  2951                           
  2952                           ;setddram.c: 33: PORTB &= 0xf0;
  2953  00B7B4  0EF0               	movlw	240
  2954  00B7B6  1681               	andwf	3969,f,c	;volatile
  2955                           
  2956                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
  2957  00B7B8  5004               	movf	SetDDRamAddr@DDaddr,w,c
  2958  00B7BA  6E01               	movwf	??_SetDDRamAddr& (0+255),c
  2959  00B7BC  6A02               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  2960  00B7BE  8E01               	bsf	??_SetDDRamAddr,7,c
  2961  00B7C0  0E04               	movlw	4
  2962  00B7C2  6E03               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  2963  00B7C4                     u635:
  2964  00B7C4  3402               	rlcf	??_SetDDRamAddr+1,w,c
  2965  00B7C6  3202               	rrcf	??_SetDDRamAddr+1,f,c
  2966  00B7C8  3201               	rrcf	??_SetDDRamAddr,f,c
  2967  00B7CA  2E03               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  2968  00B7CC  D7FB               	goto	u635
  2969  00B7CE  5001               	movf	??_SetDDRamAddr,w,c
  2970  00B7D0  0B0F               	andlw	15
  2971  00B7D2  1281               	iorwf	3969,f,c	;volatile
  2972                           
  2973                           ;setddram.c: 36: LATCbits.LATC2 = 0;
  2974  00B7D4  948B               	bcf	3979,2,c	;volatile
  2975                           
  2976                           ;setddram.c: 37: LATCbits.LATC0 = 0;
  2977  00B7D6  908B               	bcf	3979,0,c	;volatile
  2978                           
  2979                           ;setddram.c: 38: DelayFor18TCY();
  2980  00B7D8  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2981                           
  2982                           ;setddram.c: 39: LATCbits.LATC1 = 1;
  2983  00B7DC  828B               	bsf	3979,1,c	;volatile
  2984                           
  2985                           ;setddram.c: 40: DelayFor18TCY();
  2986  00B7DE  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  2987                           
  2988                           ;setddram.c: 41: LATCbits.LATC1 = 0;
  2989  00B7E2  928B               	bcf	3979,1,c	;volatile
  2990                           
  2991                           ;setddram.c: 46: PORTB &= 0xf0;
  2992  00B7E4  0EF0               	movlw	240
  2993  00B7E6  1681               	andwf	3969,f,c	;volatile
  2994                           
  2995                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
  2996  00B7E8  5004               	movf	SetDDRamAddr@DDaddr,w,c
  2997  00B7EA  0B0F               	andlw	15
  2998  00B7EC  1281               	iorwf	3969,f,c	;volatile
  2999                           
  3000                           ;setddram.c: 49: DelayFor18TCY();
  3001  00B7EE  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3002                           
  3003                           ;setddram.c: 50: LATCbits.LATC1 = 1;
  3004  00B7F2  828B               	bsf	3979,1,c	;volatile
  3005                           
  3006                           ;setddram.c: 51: DelayFor18TCY();
  3007  00B7F4  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3008                           
  3009                           ;setddram.c: 52: LATCbits.LATC1 = 0;
  3010  00B7F8  928B               	bcf	3979,1,c	;volatile
  3011                           
  3012                           ;setddram.c: 56: TRISB |= 0x0f;
  3013  00B7FA  0E0F               	movlw	15
  3014  00B7FC  1293               	iorwf	3987,f,c	;volatile
  3015  00B7FE  0012               	return	
  3016  00B800                     __end_of_SetDDRamAddr:
  3017                           	opt stack 0
  3018                           tosu	equ	0xFFF
  3019                           tosh	equ	0xFFE
  3020                           tosl	equ	0xFFD
  3021                           pclath	equ	0xFFA
  3022                           tblptru	equ	0xFF8
  3023                           tblptrh	equ	0xFF7
  3024                           tblptrl	equ	0xFF6
  3025                           tablat	equ	0xFF5
  3026                           prodh	equ	0xFF4
  3027                           prodl	equ	0xFF3
  3028                           wreg	equ	0xFE8
  3029                           status	equ	0xFD8
  3030                           
  3031 ;; *************** function _DelayPORXLCD *****************
  3032 ;; Defined at:
  3033 ;;		line 76 in file "lcd_menu.c"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;		None
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;Total ram usage:        0 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    1
  3054 ;; This function calls:
  3055 ;;		_Delay1KTCYx
  3056 ;; This function is called by:
  3057 ;;		_OpenXLCD
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text14
  3062  00B564                     __ptext14:
  3063                           	opt stack 0
  3064  00B564                     _DelayPORXLCD:
  3065                           	opt stack 27
  3066                           
  3067                           ;lcd_menu.c: 77: Delay1KTCYx(30);
  3068                           
  3069                           ;incstack = 0
  3070  00B564  0E1E               	movlw	30
  3071  00B566  ECB6  F05A         	call	_Delay1KTCYx
  3072  00B56A  0012               	return		;funcret
  3073  00B56C                     __end_of_DelayPORXLCD:
  3074                           	opt stack 0
  3075                           tosu	equ	0xFFF
  3076                           tosh	equ	0xFFE
  3077                           tosl	equ	0xFFD
  3078                           pclath	equ	0xFFA
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           prodh	equ	0xFF4
  3084                           prodl	equ	0xFF3
  3085                           wreg	equ	0xFE8
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _Delay1KTCYx *****************
  3089 ;; Defined at:
  3090 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\d1ktcyx.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  unit            1    wreg     unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  unit            1    0[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        1 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_DelayPORXLCD
  3114 ;;		_DelayXLCD
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text15
  3119  00B56C                     __ptext15:
  3120                           	opt stack 0
  3121  00B56C                     _Delay1KTCYx:
  3122                           	opt stack 27
  3123                           
  3124                           ;incstack = 0
  3125                           ;Delay1KTCYx@unit stored from wreg
  3126  00B56C  6E01               	movwf	Delay1KTCYx@unit,c
  3127  00B56E  0EC8               	movlw	200
  3128  00B570                     u1227:
  3129  00B570  D000               	nop2	
  3130  00B572  2EE8               	decfsz	wreg,f,c
  3131  00B574  D7FD               	bra	u1227
  3132  00B576  2E01               	decfsz	Delay1KTCYx@unit,f,c
  3133  00B578  D7FA               	goto	l1626
  3134  00B57A  0012               	return	
  3135  00B57C                     __end_of_Delay1KTCYx:
  3136                           	opt stack 0
  3137                           tosu	equ	0xFFF
  3138                           tosh	equ	0xFFE
  3139                           tosl	equ	0xFFD
  3140                           pclath	equ	0xFFA
  3141                           tblptru	equ	0xFF8
  3142                           tblptrh	equ	0xFF7
  3143                           tblptrl	equ	0xFF6
  3144                           tablat	equ	0xFF5
  3145                           prodh	equ	0xFF4
  3146                           prodl	equ	0xFF3
  3147                           wreg	equ	0xFE8
  3148                           status	equ	0xFD8
  3149                           
  3150 ;; *************** function _Delay10KTCYx *****************
  3151 ;; Defined at:
  3152 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\d10ktcyx.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  unit            1    wreg     unsigned char 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  unit            1    1[COMRAM] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_OpenXLCD
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text16
  3180  00B58E                     __ptext16:
  3181                           	opt stack 0
  3182  00B58E                     _Delay10KTCYx:
  3183                           	opt stack 28
  3184                           
  3185                           ;incstack = 0
  3186                           ;Delay10KTCYx@unit stored from wreg
  3187  00B58E  6E02               	movwf	Delay10KTCYx@unit,c
  3188  00B590  0E0D               	movlw	13
  3189  00B592  6E01               	movwf	??_Delay10KTCYx& (0+255),c
  3190  00B594  0EFC               	movlw	252
  3191  00B596                     u1237:
  3192  00B596  2EE8               	decfsz	wreg,f,c
  3193  00B598  D7FE               	bra	u1237
  3194  00B59A  2E01               	decfsz	??_Delay10KTCYx& (0+255),f,c
  3195  00B59C  D7FC               	bra	u1237
  3196  00B59E  2E02               	decfsz	Delay10KTCYx@unit,f,c
  3197  00B5A0  D7F7               	goto	l1692
  3198  00B5A2  0012               	return	
  3199  00B5A4                     __end_of_Delay10KTCYx:
  3200                           	opt stack 0
  3201                           tosu	equ	0xFFF
  3202                           tosh	equ	0xFFE
  3203                           tosl	equ	0xFFD
  3204                           pclath	equ	0xFFA
  3205                           tblptru	equ	0xFF8
  3206                           tblptrh	equ	0xFF7
  3207                           tblptrl	equ	0xFF6
  3208                           tablat	equ	0xFF5
  3209                           prodh	equ	0xFF4
  3210                           prodl	equ	0xFF3
  3211                           wreg	equ	0xFE8
  3212                           status	equ	0xFD8
  3213                           
  3214 ;; *************** function _BusyXLCD *****************
  3215 ;; Defined at:
  3216 ;;		line 11 in file "busyxlcd.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      unsigned char 
  3223 ;; Registers used:
  3224 ;;		wreg, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used:    1
  3236 ;; Hardware stack levels required when called:    1
  3237 ;; This function calls:
  3238 ;;		_DelayFor18TCY
  3239 ;; This function is called by:
  3240 ;;		_init_XLCD
  3241 ;;		_OpenXLCD
  3242 ;;		_putrsXLCD
  3243 ;;		_clear_display
  3244 ;;		_gotoxy
  3245 ;;		_LCDWriteStringROM
  3246 ;;		_show_menu
  3247 ;;		_putsXLCD
  3248 ;;		_LCDWriteCmd
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text17
  3253  00B6BA                     __ptext17:
  3254                           	opt stack 0
  3255  00B6BA                     _BusyXLCD:
  3256                           	opt stack 27
  3257                           
  3258                           ;busyxlcd.c: 13: LATCbits.LATC2 = 1;
  3259                           
  3260                           ;incstack = 0
  3261  00B6BA  848B               	bsf	3979,2,c	;volatile
  3262                           
  3263                           ;busyxlcd.c: 14: LATCbits.LATC0 = 0;
  3264  00B6BC  908B               	bcf	3979,0,c	;volatile
  3265                           
  3266                           ;busyxlcd.c: 15: DelayFor18TCY();
  3267  00B6BE  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3268                           
  3269                           ;busyxlcd.c: 16: LATCbits.LATC1 = 1;
  3270  00B6C2  828B               	bsf	3979,1,c	;volatile
  3271                           
  3272                           ;busyxlcd.c: 17: DelayFor18TCY();
  3273  00B6C4  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3274                           
  3275                           ;busyxlcd.c: 35: if(PORTB&0x08)
  3276  00B6C8  A681               	btfss	3969,3,c	;volatile
  3277  00B6CA  D00A               	goto	l9
  3278                           
  3279                           ;busyxlcd.c: 37: {
  3280                           ;busyxlcd.c: 38: LATCbits.LATC1 = 0;
  3281  00B6CC  928B               	bcf	3979,1,c	;volatile
  3282                           
  3283                           ;busyxlcd.c: 39: DelayFor18TCY();
  3284  00B6CE  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3285                           
  3286                           ;busyxlcd.c: 40: LATCbits.LATC1 = 1;
  3287  00B6D2  828B               	bsf	3979,1,c	;volatile
  3288                           
  3289                           ;busyxlcd.c: 41: DelayFor18TCY();
  3290  00B6D4  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3291                           
  3292                           ;busyxlcd.c: 42: LATCbits.LATC1 = 0;
  3293  00B6D8  928B               	bcf	3979,1,c	;volatile
  3294                           
  3295                           ;busyxlcd.c: 43: LATCbits.LATC2 = 0;
  3296  00B6DA  948B               	bcf	3979,2,c	;volatile
  3297                           
  3298                           ;busyxlcd.c: 44: return 1;
  3299  00B6DC  0E01               	movlw	1
  3300                           
  3301                           ;busyxlcd.c: 45: }
  3302  00B6DE  0012               	return	
  3303  00B6E0                     l9:
  3304                           
  3305                           ;busyxlcd.c: 46: else
  3306                           ;busyxlcd.c: 47: {
  3307                           ;busyxlcd.c: 48: LATCbits.LATC1 = 0;
  3308  00B6E0  928B               	bcf	3979,1,c	;volatile
  3309                           
  3310                           ;busyxlcd.c: 49: DelayFor18TCY();
  3311  00B6E2  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3312                           
  3313                           ;busyxlcd.c: 50: LATCbits.LATC1 = 1;
  3314  00B6E6  828B               	bsf	3979,1,c	;volatile
  3315                           
  3316                           ;busyxlcd.c: 51: DelayFor18TCY();
  3317  00B6E8  ECD2  F05A         	call	_DelayFor18TCY	;wreg free
  3318                           
  3319                           ;busyxlcd.c: 52: LATCbits.LATC1 = 0;
  3320  00B6EC  928B               	bcf	3979,1,c	;volatile
  3321                           
  3322                           ;busyxlcd.c: 53: LATCbits.LATC2 = 0;
  3323  00B6EE  948B               	bcf	3979,2,c	;volatile
  3324                           
  3325                           ;busyxlcd.c: 54: return 0;
  3326  00B6F0  0E00               	movlw	0
  3327  00B6F2  0012               	return	
  3328  00B6F4                     __end_of_BusyXLCD:
  3329                           	opt stack 0
  3330                           tosu	equ	0xFFF
  3331                           tosh	equ	0xFFE
  3332                           tosl	equ	0xFFD
  3333                           pclath	equ	0xFFA
  3334                           tblptru	equ	0xFF8
  3335                           tblptrh	equ	0xFF7
  3336                           tblptrl	equ	0xFF6
  3337                           tablat	equ	0xFF5
  3338                           prodh	equ	0xFF4
  3339                           prodl	equ	0xFF3
  3340                           wreg	equ	0xFE8
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _DelayFor18TCY *****************
  3344 ;; Defined at:
  3345 ;;		line 68 in file "lcd_menu.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		None
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; This function calls:
  3366 ;;		Nothing
  3367 ;; This function is called by:
  3368 ;;		_BusyXLCD
  3369 ;;		_WriteCmdXLCD
  3370 ;;		_WriteDataXLCD
  3371 ;;		_SetDDRamAddr
  3372 ;;		_ReadAddrXLCD
  3373 ;;		_ReadDataXLCD
  3374 ;;		_SetCGRamAddr
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text18
  3379  00B5A4                     __ptext18:
  3380                           	opt stack 0
  3381  00B5A4                     _DelayFor18TCY:
  3382                           	opt stack 27
  3383                           
  3384                           ;lcd_menu.c: 69: __nop(); __nop(); __nop(); __nop();
  3385                           
  3386                           ;incstack = 0
  3387  00B5A4  F000               	nop	
  3388  00B5A6  F000               	nop	
  3389  00B5A8  F000               	nop	
  3390  00B5AA  F000               	nop	
  3391                           
  3392                           ;lcd_menu.c: 70: __nop(); __nop(); __nop(); __nop();
  3393  00B5AC  F000               	nop	
  3394  00B5AE  F000               	nop	
  3395  00B5B0  F000               	nop	
  3396  00B5B2  F000               	nop	
  3397                           
  3398                           ;lcd_menu.c: 71: __nop(); __nop(); __nop(); __nop();
  3399  00B5B4  F000               	nop	
  3400  00B5B6  F000               	nop	
  3401  00B5B8  F000               	nop	
  3402  00B5BA  F000               	nop	
  3403                           
  3404                           ;lcd_menu.c: 72: __nop(); __nop();
  3405  00B5BC  F000               	nop	
  3406  00B5BE  F000               	nop	
  3407                           
  3408                           ;lcd_menu.c: 73: return;
  3409  00B5C0  0012               	return		;funcret
  3410  00B5C2                     __end_of_DelayFor18TCY:
  3411                           	opt stack 0
  3412                           tosu	equ	0xFFF
  3413                           tosh	equ	0xFFE
  3414                           tosl	equ	0xFFD
  3415                           pclath	equ	0xFFA
  3416                           tblptru	equ	0xFF8
  3417                           tblptrh	equ	0xFF7
  3418                           tblptrl	equ	0xFF6
  3419                           tablat	equ	0xFF5
  3420                           prodh	equ	0xFF4
  3421                           prodl	equ	0xFF3
  3422                           wreg	equ	0xFE8
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _init_GPIO_DIR *****************
  3426 ;; Defined at:
  3427 ;;		line 48 in file "lcd_trials_4bits.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;                  1    wreg      void 
  3434 ;; Registers used:
  3435 ;;		None
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; This function calls:
  3448 ;;		Nothing
  3449 ;; This function is called by:
  3450 ;;		_main
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           
  3454                           	psect	text19
  3455  00B55E                     __ptext19:
  3456                           	opt stack 0
  3457  00B55E                     _init_GPIO_DIR:
  3458                           	opt stack 30
  3459                           
  3460                           ;lcd_trials_4bits.c: 56: TRISAbits.RA6 = 1;
  3461                           
  3462                           ;incstack = 0
  3463  00B55E  8C92               	bsf	3986,6,c	;volatile
  3464                           
  3465                           ;lcd_trials_4bits.c: 57: TRISAbits.RA5 = 1;
  3466  00B560  8A92               	bsf	3986,5,c	;volatile
  3467  00B562  0012               	return		;funcret
  3468  00B564                     __end_of_init_GPIO_DIR:
  3469                           	opt stack 0
  3470                           tosu	equ	0xFFF
  3471                           tosh	equ	0xFFE
  3472                           tosl	equ	0xFFD
  3473                           pclath	equ	0xFFA
  3474                           tblptru	equ	0xFF8
  3475                           tblptrh	equ	0xFF7
  3476                           tblptrl	equ	0xFF6
  3477                           tablat	equ	0xFF5
  3478                           prodh	equ	0xFF4
  3479                           prodl	equ	0xFF3
  3480                           wreg	equ	0xFE8
  3481                           status	equ	0xFD8
  3482                           tosu	equ	0xFFF
  3483                           tosh	equ	0xFFE
  3484                           tosl	equ	0xFFD
  3485                           pclath	equ	0xFFA
  3486                           tblptru	equ	0xFF8
  3487                           tblptrh	equ	0xFF7
  3488                           tblptrl	equ	0xFF6
  3489                           tablat	equ	0xFF5
  3490                           prodh	equ	0xFF4
  3491                           prodl	equ	0xFF3
  3492                           wreg	equ	0xFE8
  3493                           status	equ	0xFD8
  3494                           
  3495                           	psect	text20
  3496  000000                     __ptext20:
  3497                           	opt stack 0
  3498                           tosu	equ	0xFFF
  3499                           tosh	equ	0xFFE
  3500                           tosl	equ	0xFFD
  3501                           pclath	equ	0xFFA
  3502                           tblptru	equ	0xFF8
  3503                           tblptrh	equ	0xFF7
  3504                           tblptrl	equ	0xFF6
  3505                           tablat	equ	0xFF5
  3506                           prodh	equ	0xFF4
  3507                           prodl	equ	0xFF3
  3508                           wreg	equ	0xFE8
  3509                           status	equ	0xFD8
  3510                           
  3511                           	psect	rparam
  3512  0000                     tosu	equ	0xFFF
  3513                           tosh	equ	0xFFE
  3514                           tosl	equ	0xFFD
  3515                           pclath	equ	0xFFA
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodh	equ	0xFF4
  3521                           prodl	equ	0xFF3
  3522                           wreg	equ	0xFE8
  3523                           status	equ	0xFD8


Data Sizes:
    Strings     34
    Constant    312
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      34
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 17
		 -> menu_016(CODE[8]), menu_015(CODE[12]), menu_014(CODE[12]), menu_013(CODE[12]), 
		 -> menu_012(CODE[12]), menu_011(CODE[12]), menu_010(CODE[12]), menu_009(CODE[7]), 
		 -> menu_008(CODE[9]), menu_007(CODE[9]), menu_006(CODE[9]), menu_005(CODE[9]), 
		 -> menu_004(CODE[9]), menu_003(CODE[9]), menu_002(CODE[9]), menu_001(CODE[9]), 
		 -> menu_000(CODE[17]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 17
		 -> menu_016(CODE[8]), menu_015(CODE[12]), menu_014(CODE[12]), menu_013(CODE[12]), 
		 -> menu_012(CODE[12]), menu_011(CODE[12]), menu_010(CODE[12]), menu_009(CODE[7]), 
		 -> menu_008(CODE[9]), menu_007(CODE[9]), menu_006(CODE[9]), menu_005(CODE[9]), 
		 -> menu_004(CODE[9]), menu_003(CODE[9]), menu_002(CODE[9]), menu_001(CODE[9]), 
		 -> menu_000(CODE[17]), 

    LCDWriteStringROM@lcd_menu_items	PTR const unsigned char  size(2) Largest target is 17
		 -> menu_016(CODE[8]), menu_015(CODE[12]), menu_014(CODE[12]), menu_013(CODE[12]), 
		 -> menu_012(CODE[12]), menu_011(CODE[12]), menu_010(CODE[12]), menu_009(CODE[7]), 
		 -> menu_008(CODE[9]), menu_007(CODE[9]), menu_006(CODE[9]), menu_005(CODE[9]), 
		 -> menu_004(CODE[9]), menu_003(CODE[9]), menu_002(CODE[9]), menu_001(CODE[9]), 
		 -> menu_000(CODE[17]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[5]), STR_2(CODE[12]), STR_1(CODE[17]), 

    S161MenuStructure$fp	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), start(), 

    my_menu.fp	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), start(), 

    S161MenuStructure$text	PTR const unsigned char  size(2) Largest target is 17
		 -> menu_016(CODE[8]), menu_015(CODE[12]), menu_014(CODE[12]), menu_013(CODE[12]), 
		 -> menu_012(CODE[12]), menu_011(CODE[12]), menu_010(CODE[12]), menu_009(CODE[7]), 
		 -> menu_008(CODE[9]), menu_007(CODE[9]), menu_006(CODE[9]), menu_005(CODE[9]), 
		 -> menu_004(CODE[9]), menu_003(CODE[9]), menu_002(CODE[9]), menu_001(CODE[9]), 
		 -> menu_000(CODE[17]), 

    my_menu.text	PTR const unsigned char  size(2) Largest target is 17
		 -> menu_016(CODE[8]), menu_015(CODE[12]), menu_014(CODE[12]), menu_013(CODE[12]), 
		 -> menu_012(CODE[12]), menu_011(CODE[12]), menu_010(CODE[12]), menu_009(CODE[7]), 
		 -> menu_008(CODE[9]), menu_007(CODE[9]), menu_006(CODE[9]), menu_005(CODE[9]), 
		 -> menu_004(CODE[9]), menu_003(CODE[9]), menu_002(CODE[9]), menu_001(CODE[9]), 
		 -> menu_000(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_show_menu
    _start->_Delay1Sec
    _start->_putrsXLCD
    _putrsXLCD->_WriteDataXLCD
    _clear_display->_WriteCmdXLCD
    _show_menu->_LCDWriteStringROM
    _gotoxy->_SetDDRamAddr
    _LCDWriteStringROM->_strlen
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6208
                                             25 COMRAM     1     1      0
                   Absolute function *
                          _Delay1Sec
                      _clear_display
                             _gotoxy
                      _init_GPIO_DIR
                          _init_XLCD
                          _putrsXLCD
                          _show_menu
                              _start *
 ---------------------------------------------------------------------------------
 (1) _start                                                1     1      0     407
                                              3 COMRAM     1     1      0
                          _Delay1Sec
                      _clear_display
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2     317
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _clear_display                                        0     0      0      44
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _Delay1Sec                                            3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show_menu                                           11    11      0    4566
                                             14 COMRAM    11    11      0
                           _BusyXLCD
                  _LCDWriteStringROM
                      _WriteDataXLCD
                             _gotoxy
 ---------------------------------------------------------------------------------
 (2) _gotoxy                                               3     2      1     630
                                              4 COMRAM     3     2      1
                           _BusyXLCD
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (2) _LCDWriteStringROM                                    8     3      5    3097
                                              6 COMRAM     8     3      5
                           _BusyXLCD
                       _SetDDRamAddr
                      _WriteDataXLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     198
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     154
                                              4 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      44
                                              0 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO_DIR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   Absolute function(Fake) *
   _Delay1Sec *
   _clear_display *
     _BusyXLCD
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _gotoxy *
     _BusyXLCD
       _DelayFor18TCY
     _SetDDRamAddr
       _DelayFor18TCY
   _init_GPIO_DIR *
   _init_XLCD *
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _putrsXLCD *
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _show_menu *
     _BusyXLCD
       _DelayFor18TCY
     _LCDWriteStringROM
       _BusyXLCD
         _DelayFor18TCY
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
       _strlen
     _WriteDataXLCD
       _DelayFor18TCY
     _gotoxy
       _BusyXLCD
         _DelayFor18TCY
       _SetDDRamAddr
         _DelayFor18TCY
   _start *
     _Delay1Sec
     _clear_display
       _BusyXLCD
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      22       1       26.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      34        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Jun 29 15:23:39 2019

                                    l9 B6E0                                     l60 B636  
                          __CFG_BORV$3 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                                  l305 B5EE                                    l326 B830  
                                  l336 B924                           __CFG_CPB$OFF 000000  
                                  _RA5 007C05                                    _RA6 007C06  
                                  _RE3 007C23                           __CFG_CPD$OFF 000000  
                                  u635 B7C4                  __size_of_WriteCmdXLCD 003E  
                                  tosl 000FFD                                    wreg 000FE8  
                         __CFG_LVP$OFF 000000                           __CFG_WDT$OFF 000000  
                                 l2000 BDA8                                   l2004 BDAC  
                                 l2012 BDD4                                   l2030 BE7C  
                                 l2022 BE16                                   l2032 BE7E  
                                 l2008 BDC2                                   l2028 BE4E  
                                 l2038 BE92                                   l2062 BA30  
                                 l2082 BB0E                                   l2074 BAB2  
                                 l2076 BAD0                                   l2094 BB7A  
                                 l2088 BB4C                                   l1626 B56E  
                                 l1820 B8D6                                   l1812 B8B6  
                                 l1900 B9AE                                   l1806 B89C  
                                 l1824 B8E6                                   l1816 B8C6  
                                 l1808 B8A6                                   l1912 B9D8  
                                 l1840 B810                                   l1746 B77A  
                                 l1906 B9C6                                   l1762 B650  
                                 l1692 B590                                   l1828 B8F6  
                                 l1940 B6A8                                   l1932 B688  
                                 l1748 B77E                                   l1844 B81C  
                                 l1852 B836                                   l1772 B5CA  
                                 l1756 B57C                                   l1870 B930  
                                 l1846 B822                                   l1854 B852  
                                 l1936 B698                                   l1872 B936  
                                 l1880 B95E                                   l1864 B918  
                                 l1848 B828                                   l1776 B5DA  
                                 l1768 B66E                                   l1890 B988  
                                 l1874 B93C                                   l1946 BB9E  
                                 l1892 B98E                                   l1868 B92A  
                                 l1948 BBBC                                   l1878 B942  
                                 l1974 BCBC                                   l1992 BD42  
                                 l1984 BD00                                   l1976 BCEA  
                                 l1968 BC84                                   l1978 BCEC  
                                 l1988 BD12                                   l1998 BD7A  
                                 STR_1 BFDD                                   STR_2 BFEE  
                                 STR_3 BFFA                                   u1140 BB6A  
                                 u1108 BA9A                                   u1207 B640  
                                 u1217 B5E0                                   u1227 B570  
                                 u1237 B596                                   u1197 BB80  
                                 _main B9E0                 __size_of_WriteDataXLCD 003E  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0000                          __CFG_IESO$OFF 000000  
                         ___param_bank 000000                           _WriteCmdXLCD B6F4  
               __size_of_init_GPIO_DIR 0006                            _Delay1KTCYx B56C  
                        ?_SetDDRamAddr 0001                                  ?_main 0001  
                                _CMCON 000FB4                          show_menu@from 0019  
                        show_menu@temp 0016                          show_menu@till 0018  
                                _PORTB 000F81                                  _TRISB 000F93  
                __size_of_Delay10KTCYx 0016                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000                                  _start B61E  
                       __CFG_BOREN$OFF 000000                                  pclath 000FFA  
                                tablat 000FF5                        __end_of_my_menu BF2D  
                                status 000FD8                         __CFG_MCLRE$OFF 000000  
                      __initialization B5F0                           __end_of_main BB8C  
                     __end_of_BusyXLCD B6F4                     __size_of_Delay1Sec 002E  
                         _Delay10KTCYx B58E                  __size_of_DelayPORXLCD 0008  
                       ??_SetDDRamAddr 0001                       __end_of_OpenXLCD B908  
                               ??_main 001A                          __activetblptr 000002  
                        _WriteDataXLCD B732                                 _ADCON1 000FC1  
                               ?_start 0001                          _init_GPIO_DIR B55E  
                               _OSCCON 000FD3                  __end_of_clear_display B58E  
                         _DelayPORXLCD B564                         __CFG_XINST$OFF 000000  
                       __CFG_STVREN$ON 000000                       __end_of_menu_000 BF3E  
                     __end_of_menu_001 BFCE                       __end_of_menu_002 BFC5  
                     __end_of_menu_010 BF86                       __end_of_menu_003 BFBC  
                     __end_of_menu_011 BF7A                       __end_of_menu_004 BFB3  
                     __end_of_menu_012 BF6E                       __end_of_menu_005 BFAA  
                     __end_of_menu_013 BF62                       __end_of_menu_006 BFA1  
                     __end_of_menu_014 BF56                       __end_of_menu_007 BF98  
                     __end_of_menu_015 BF4A                       __end_of_menu_016 BFD6  
                     __end_of_menu_008 BF8F                       __end_of_menu_009 BFDD  
                               _gotoxy B800                         ?_WriteDataXLCD 0001  
                               _strlen B770                           __pdataCOMRAM 0021  
                         __mediumconst BEA4                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                       ?_init_GPIO_DIR 0001                      __end_of_Delay1Sec B5F0  
                           __accesstop 0080                __end_of__initialization B614  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                       __pcstackCOMRAM 0001                          __end_of_start B64E  
                          gotoxy@x_pos 0007                            gotoxy@y_pos 0005  
                    Delay1Sec@cntDelay 0002                 __size_of_DelayFor18TCY 001E  
                              ??_start 0004                              ?_BusyXLCD 0001  
                      WriteCmdXLCD@cmd 0001                          _button_enable 0021  
                 __end_of_SetDDRamAddr B800                     __size_of_init_XLCD 0038  
                            ?_OpenXLCD 0001                      WriteDataXLCD@data 0001  
                      ??_WriteDataXLCD 0001                           ?_Delay1KTCYx 0001  
                              ?_gotoxy 0005                                ?_strlen 0001  
                   __size_of_show_menu 0318                        ??_init_GPIO_DIR 0001  
                   __size_of_putrsXLCD 0034                             ??_BusyXLCD 0001  
            LCDWriteStringROM@add_char 000B              LCDWriteStringROM@add_line 000A  
                           ??_OpenXLCD 0005                                __Hparam 0000  
                              __Lparam 0000                          _DelayFor18TCY B5A4  
                              __pcinit B5F0                        putrsXLCD@buffer 0002  
                              __ramtop 1000                        __size_of_gotoxy 0064  
                              __ptext0 B9E0                                __ptext1 B61E  
                              __ptext2 B64E                                __ptext3 B57C  
                              __ptext4 B5C2                                __ptext5 BB8C  
                              __ptext6 B800                                __ptext7 B908  
                              __ptext8 B770                                __ptext9 B732  
                    __end_of_init_XLCD B6BA                        __size_of_strlen 003E  
                              _my_menu BEA5                      show_menu@line_cnt 0017  
                 end_of_initialization B614                          __Lmediumconst BEA4  
                    __end_of_show_menu BEA4                         ?_DelayFor18TCY 0001  
                              strlen@s 0001                      __end_of_putrsXLCD B682  
                            _TRISAbits 000F92                              _TRISCbits 000F94  
                __size_of_SetDDRamAddr 0052                              _Delay1Sec B5C2  
                        __pidataCOMRAM B55C                           _SetDDRamAddr B7AE  
                       __end_of_gotoxy B864                   __size_of_Delay1KTCYx 0010  
                   SetDDRamAddr@DDaddr 0004                 __size_of_clear_display 0012  
                       __end_of_strlen B7AE                    start_initialization B5F0  
       _return_default_display_counter 001B                      _LCDWriteStringROM B908  
                           ?_Delay1Sec 0001                       __CFG_OSC$INTIO67 000000  
                    __size_of_BusyXLCD 003A                     ?_LCDWriteStringROM 0007  
                      ??_DelayFor18TCY 0001                      __size_of_OpenXLCD 00A4  
                        ?_WriteCmdXLCD 0001                    ??_LCDWriteStringROM 000C  
                     __CFG_LPT1OSC$OFF 000000                               ??_gotoxy 0006  
      LCDWriteStringROM@lcd_menu_items 0008                               ??_strlen 0003  
                          __pbssCOMRAM 001B            LCDWriteStringROM@lcd_offset 000D  
            __end_of_LCDWriteStringROM B9E0                        Delay1KTCYx@unit 0001  
                 _button_delay_counter 001D                          _clear_display B57C  
                    __CFG_CCP2MX$PORTC 000000                          __pmediumconst BEA4  
                       ??_WriteCmdXLCD 0001  _return_default_display_counter_enable 001F  
                        ?_Delay10KTCYx 0001                  __end_of_WriteDataXLCD B770  
                            _init_XLCD B682                  __end_of_init_GPIO_DIR B564  
                       __size_of_start 0030                            ??_Delay1Sec 0001  
                             _LATCbits 000F8B                         ?_clear_display 0001  
                        ?_DelayPORXLCD 0001                 LCDWriteStringROM@lcd_i 000C  
                      OpenXLCD@lcdtype 0005                       __CFG_WDTPS$32768 000000  
                       ??_Delay10KTCYx 0001                              _show_menu BB8C  
                            _putrsXLCD B64E                       Delay10KTCYx@unit 0002  
                   gotoxy@ddramaddress 0006                             ?_init_XLCD 0001  
           __size_of_LCDWriteStringROM 00D8                               _BusyXLCD B6BA  
                       ??_DelayPORXLCD 0002                               _OpenXLCD B864  
                             __Hrparam 0000                               __Lrparam 0000  
                           ?_show_menu 0001                             ?_putrsXLCD 0002  
                             __ptext10 B682                               __ptext11 B864  
                             __ptext20 0000                               __ptext12 B6F4  
                             __ptext13 B7AE                               __ptext14 B564  
                             __ptext15 B56C                               __ptext16 B58E  
                             __ptext17 B6BA                               __ptext18 B5A4  
                             __ptext19 B55E                   __end_of_WriteCmdXLCD B732  
                      ??_clear_display 0002                               _menu_000 BF2D  
                             _menu_001 BFC5                               _menu_010 BF7A  
                             _menu_002 BFBC                               _menu_011 BF6E  
                             _menu_003 BFB3                               _menu_012 BF62  
                             _menu_004 BFAA                               _menu_013 BF56  
                             _menu_005 BFA1                               _menu_014 BF4A  
                             _menu_006 BF98                               _menu_015 BF3E  
                             _menu_007 BF8F                               _menu_016 BFCE  
                             _menu_008 BF86                               _menu_009 BFD6  
                        __size_of_main 01AC                               _selected 0022  
                        ??_Delay1KTCYx 0001                            ??_init_XLCD 0006  
                 __end_of_Delay10KTCYx B5A4            _button_delay_counter_enable 0020  
                __end_of_DelayFor18TCY B5C2                            ??_show_menu 000F  
                 __end_of_DelayPORXLCD B56C                            ??_putrsXLCD 0004  
                             strlen@cp 0005                    __end_of_Delay1KTCYx B57C  
                   LCDWriteStringROM@x 000E                     LCDWriteStringROM@y 0007  
