

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Oct 22 21:58:09 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F2525
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           ; Version 1.42
    90                           ; Generated 13/04/2017 GMT
    91                           ; 
    92                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC18F2525 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     
   124                           	psect	idataCOMRAM
   125  003F6C                     __pidataCOMRAM:
   126                           	opt stack 0
   127                           
   128                           ;initializer for _step_size
   129  003F6C  0001               	dw	1
   130                           
   131                           ;initializer for _display_brightness
   132  003F6E  005A               	dw	90
   133                           
   134                           ;initializer for _display_contrast
   135  003F70  00C8               	dw	200
   136                           
   137                           ;initializer for _DAC_u
   138  003F72  0002               	dw	2
   139                           
   140                           ;initializer for _DAC_i
   141  003F74  0002               	dw	2
   142                           
   143                           ;initializer for _cmd_dac
   144  003F76  70                 	db	112
   145                           
   146                           	psect	idataBANK0
   147  003F1E                     __pidataBANK0:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _voltage_in
   151  003F1E  00                 	db	0
   152  003F1F  80                 	db	128
   153  003F20  41                 	db	65
   154                           
   155                           ;initializer for _constant_power
   156  003F21  00                 	db	0
   157  003F22  20                 	db	32
   158  003F23  41                 	db	65
   159                           
   160                           ;initializer for _raw_adc_offset_voltage
   161  003F24  C3                 	db	195
   162  003F25  75                 	db	117
   163  003F26  3C                 	db	60
   164                           
   165                           ;initializer for _DAC_vRef
   166  003F27  00                 	db	0
   167  003F28  20                 	db	32
   168  003F29  40                 	db	64
   169                           
   170                           ;initializer for _ADC_vRef
   171  003F2A  00                 	db	0
   172  003F2B  20                 	db	32
   173  003F2C  40                 	db	64
   174                           
   175                           ;initializer for _step_size_mode_enable
   176  003F2D  01                 	db	1
   177                           
   178                           ;initializer for _step_size_mode
   179  003F2E  01                 	db	1
   180                           
   181                           ;initializer for _button_enable
   182  003F2F  01                 	db	1
   183                           
   184                           	psect	mediumconst
   185  00BE54                     __pmediumconst:
   186                           	opt stack 0
   187  00BE54  00                 	db	0
   188  00BE55                     _dpowers:
   189                           	opt stack 0
   190  00BE55  0001               	dw	1
   191  00BE57  0000               	dw	0
   192  00BE59  000A               	dw	10
   193  00BE5B  0000               	dw	0
   194  00BE5D  0064               	dw	100
   195  00BE5F  0000               	dw	0
   196  00BE61  03E8               	dw	1000
   197  00BE63  0000               	dw	0
   198  00BE65  2710               	dw	10000
   199  00BE67  0000               	dw	0
   200  00BE69  86A0               	dw	34464
   201  00BE6B  0001               	dw	1
   202  00BE6D  4240               	dw	16960
   203  00BE6F  000F               	dw	15
   204  00BE71  9680               	dw	38528
   205  00BE73  0098               	dw	152
   206  00BE75  E100               	dw	57600
   207  00BE77  05F5               	dw	1525
   208  00BE79  CA00               	dw	51712
   209  00BE7B  3B9A               	dw	15258
   210  00BE7D                     __end_of_dpowers:
   211                           	opt stack 0
   212  00BE7D                     __powers_:
   213                           	opt stack 0
   214  00BE7D  00                 	db	0
   215  00BE7E  80                 	db	128
   216  00BE7F  3F                 	db	63
   217  00BE80  00                 	db	0
   218  00BE81  20                 	db	32
   219  00BE82  41                 	db	65
   220  00BE83  00                 	db	0
   221  00BE84  C8                 	db	200
   222  00BE85  42                 	db	66
   223  00BE86  00                 	db	0
   224  00BE87  7A                 	db	122
   225  00BE88  44                 	db	68
   226  00BE89  40                 	db	64
   227  00BE8A  1C                 	db	28
   228  00BE8B  46                 	db	70
   229  00BE8C  50                 	db	80
   230  00BE8D  C3                 	db	195
   231  00BE8E  47                 	db	71
   232  00BE8F  24                 	db	36
   233  00BE90  74                 	db	116
   234  00BE91  49                 	db	73
   235  00BE92  97                 	db	151
   236  00BE93  18                 	db	24
   237  00BE94  4B                 	db	75
   238  00BE95  BC                 	db	188
   239  00BE96  BE                 	db	190
   240  00BE97  4C                 	db	76
   241  00BE98  6B                 	db	107
   242  00BE99  6E                 	db	110
   243  00BE9A  4E                 	db	78
   244  00BE9B  03                 	db	3
   245  00BE9C  15                 	db	21
   246  00BE9D  50                 	db	80
   247  00BE9E  79                 	db	121
   248  00BE9F  AD                 	db	173
   249  00BEA0  60                 	db	96
   250  00BEA1  F3                 	db	243
   251  00BEA2  49                 	db	73
   252  00BEA3  71                 	db	113
   253  00BEA4                     __end_of__powers_:
   254                           	opt stack 0
   255  00BEA4                     __npowers_:
   256                           	opt stack 0
   257  00BEA4  00                 	db	0
   258  00BEA5  80                 	db	128
   259  00BEA6  3F                 	db	63
   260  00BEA7  CD                 	db	205
   261  00BEA8  CC                 	db	204
   262  00BEA9  3D                 	db	61
   263  00BEAA  D7                 	db	215
   264  00BEAB  23                 	db	35
   265  00BEAC  3C                 	db	60
   266  00BEAD  12                 	db	18
   267  00BEAE  83                 	db	131
   268  00BEAF  3A                 	db	58
   269  00BEB0  B7                 	db	183
   270  00BEB1  D1                 	db	209
   271  00BEB2  38                 	db	56
   272  00BEB3  C6                 	db	198
   273  00BEB4  27                 	db	39
   274  00BEB5  37                 	db	55
   275  00BEB6  38                 	db	56
   276  00BEB7  86                 	db	134
   277  00BEB8  35                 	db	53
   278  00BEB9  C0                 	db	192
   279  00BEBA  D6                 	db	214
   280  00BEBB  33                 	db	51
   281  00BEBC  CC                 	db	204
   282  00BEBD  2B                 	db	43
   283  00BEBE  32                 	db	50
   284  00BEBF  70                 	db	112
   285  00BEC0  89                 	db	137
   286  00BEC1  30                 	db	48
   287  00BEC2  E7                 	db	231
   288  00BEC3  DB                 	db	219
   289  00BEC4  2E                 	db	46
   290  00BEC5  E5                 	db	229
   291  00BEC6  3C                 	db	60
   292  00BEC7  1E                 	db	30
   293  00BEC8  42                 	db	66
   294  00BEC9  A2                 	db	162
   295  00BECA  0D                 	db	13
   296  00BECB                     __end_of__npowers_:
   297                           	opt stack 0
   298  0000                     _SSPBUF	set	4041
   299  0000                     _SSPCON1bits	set	4038
   300  0000                     _SSPSTATbits	set	4039
   301  0000                     _SSPSTAT	set	4039
   302  0000                     _ADRESL	set	4035
   303  0000                     _ADRESH	set	4036
   304  0000                     _INTCONbits	set	4082
   305  0000                     _PIR1bits	set	3998
   306  0000                     _ADCON1	set	4033
   307  0000                     _ADCON2	set	4032
   308  0000                     _ADCON0	set	4034
   309  0000                     _PIE1bits	set	3997
   310  0000                     _ADCON0bits	set	4034
   311  0000                     _TRISCbits	set	3988
   312  0000                     _TRISB	set	3987
   313  0000                     _PORTB	set	3969
   314  0000                     _LATCbits	set	3979
   315  0000                     _RCONbits	set	4048
   316  0000                     _INTCON2	set	4081
   317  0000                     _CMCON	set	4020
   318  0000                     _OSCCON	set	4051
   319  0000                     _SSPCON1	set	4038
   320  0000                     _LATBbits	set	3978
   321  0000                     _LATAbits	set	3977
   322  0000                     _TRISBbits	set	3987
   323  0000                     _TRISAbits	set	3986
   324  0000                     _RA2	set	31746
   325  0000                     _RA6	set	31750
   326  0000                     _RA5	set	31749
   327  0000                     _RE3	set	31779
   328  0000                     _RBIE	set	32659
   329  0000                     _RA4	set	31748
   330  0000                     _RB7	set	31759
   331  0000                     _RB5	set	31757
   332  0000                     _RBIF	set	32656
   333  0000                     _GIE	set	32663
   334  00BECB                     STR_51:
   335  00BECB  20                 	db	32
   336  00BECC  50                 	db	80	;'P'
   337  00BECD  3D                 	db	61	;'='
   338  00BECE  31                 	db	49	;'1'
   339  00BECF  30                 	db	48	;'0'
   340  00BED0  57                 	db	87	;'W'
   341  00BED1  2C                 	db	44
   342  00BED2  20                 	db	32
   343  00BED3  20                 	db	32
   344  00BED4  55                 	db	85	;'U'
   345  00BED5  69                 	db	105	;'i'
   346  00BED6  6E                 	db	110	;'n'
   347  00BED7  3D                 	db	61	;'='
   348  00BED8  31                 	db	49	;'1'
   349  00BED9  36                 	db	54	;'6'
   350  00BEDA  56                 	db	86	;'V'
   351  00BEDB  20                 	db	32
   352  00BEDC  00                 	db	0
   353  00BEDD                     STR_16:
   354  00BEDD  43                 	db	67	;'C'
   355  00BEDE  4F                 	db	79	;'O'
   356  00BEDF  4E                 	db	78	;'N'
   357  00BEE0  54                 	db	84	;'T'
   358  00BEE1  52                 	db	82	;'R'
   359  00BEE2  41                 	db	65	;'A'
   360  00BEE3  53                 	db	83	;'S'
   361  00BEE4  54                 	db	84	;'T'
   362  00BEE5  20                 	db	32
   363  00BEE6  46                 	db	70	;'F'
   364  00BEE7  49                 	db	73	;'I'
   365  00BEE8  4E                 	db	78	;'N'
   366  00BEE9  45                 	db	69	;'E'
   367  00BEEA  3A                 	db	58	;':'
   368  00BEEB  20                 	db	32
   369  00BEEC  20                 	db	32
   370  00BEED  00                 	db	0
   371  00BEEE                     STR_56:
   372  00BEEE  20                 	db	32
   373  00BEEF  20                 	db	32
   374  00BEF0  50                 	db	80	;'P'
   375  00BEF1  6F                 	db	111	;'o'
   376  00BEF2  77                 	db	119	;'w'
   377  00BEF3  65                 	db	101	;'e'
   378  00BEF4  72                 	db	114	;'r'
   379  00BEF5  20                 	db	32
   380  00BEF6  53                 	db	83	;'S'
   381  00BEF7  75                 	db	117	;'u'
   382  00BEF8  70                 	db	112	;'p'
   383  00BEF9  70                 	db	112	;'p'
   384  00BEFA  6C                 	db	108	;'l'
   385  00BEFB  79                 	db	121	;'y'
   386  00BEFC  20                 	db	32
   387  00BEFD  20                 	db	32
   388  00BEFE  00                 	db	0
   389  00BEFF                     STR_22:
   390  00BEFF  42                 	db	66	;'B'
   391  00BF00  41                 	db	65	;'A'
   392  00BF01  43                 	db	67	;'C'
   393  00BF02  4B                 	db	75	;'K'
   394  00BF03  4C                 	db	76	;'L'
   395  00BF04  49                 	db	73	;'I'
   396  00BF05  47                 	db	71	;'G'
   397  00BF06  48                 	db	72	;'H'
   398  00BF07  54                 	db	84	;'T'
   399  00BF08  20                 	db	32
   400  00BF09  46                 	db	70	;'F'
   401  00BF0A  49                 	db	73	;'I'
   402  00BF0B  4E                 	db	78	;'N'
   403  00BF0C  45                 	db	69	;'E'
   404  00BF0D  3A                 	db	58	;':'
   405  00BF0E  20                 	db	32
   406  00BF0F  00                 	db	0
   407  00BF10                     STR_17:
   408  00BF10  43                 	db	67	;'C'
   409  00BF11  4F                 	db	79	;'O'
   410  00BF12  4E                 	db	78	;'N'
   411  00BF13  54                 	db	84	;'T'
   412  00BF14  52                 	db	82	;'R'
   413  00BF15  41                 	db	65	;'A'
   414  00BF16  53                 	db	83	;'S'
   415  00BF17  54                 	db	84	;'T'
   416  00BF18  20                 	db	32
   417  00BF19  52                 	db	82	;'R'
   418  00BF1A  4F                 	db	79	;'O'
   419  00BF1B  55                 	db	85	;'U'
   420  00BF1C  47                 	db	71	;'G'
   421  00BF1D  48                 	db	72	;'H'
   422  00BF1E  3A                 	db	58	;':'
   423  00BF1F  20                 	db	32
   424  00BF20  00                 	db	0
   425  00BF21                     STR_54:
   426  00BF21  21                 	db	33
   427  00BF22  21                 	db	33
   428  00BF23  20                 	db	32
   429  00BF24  50                 	db	80	;'P'
   430  00BF25  52                 	db	82	;'R'
   431  00BF26  4F                 	db	79	;'O'
   432  00BF27  54                 	db	84	;'T'
   433  00BF28  45                 	db	69	;'E'
   434  00BF29  43                 	db	67	;'C'
   435  00BF2A  54                 	db	84	;'T'
   436  00BF2B  49                 	db	73	;'I'
   437  00BF2C  4F                 	db	79	;'O'
   438  00BF2D  4E                 	db	78	;'N'
   439  00BF2E  20                 	db	32
   440  00BF2F  21                 	db	33
   441  00BF30  21                 	db	33
   442  00BF31  00                 	db	0
   443  00BF32                     STR_55:
   444  00BF32  21                 	db	33
   445  00BF33  43                 	db	67	;'C'
   446  00BF34  48                 	db	72	;'H'
   447  00BF35  45                 	db	69	;'E'
   448  00BF36  43                 	db	67	;'C'
   449  00BF37  4B                 	db	75	;'K'
   450  00BF38  20                 	db	32
   451  00BF39  53                 	db	83	;'S'
   452  00BF3A  45                 	db	69	;'E'
   453  00BF3B  54                 	db	84	;'T'
   454  00BF3C  54                 	db	84	;'T'
   455  00BF3D  49                 	db	73	;'I'
   456  00BF3E  4E                 	db	78	;'N'
   457  00BF3F  47                 	db	71	;'G'
   458  00BF40  53                 	db	83	;'S'
   459  00BF41  21                 	db	33
   460  00BF42  00                 	db	0
   461  00BF43                     STR_23:
   462  00BF43  42                 	db	66	;'B'
   463  00BF44  41                 	db	65	;'A'
   464  00BF45  43                 	db	67	;'C'
   465  00BF46  4B                 	db	75	;'K'
   466  00BF47  4C                 	db	76	;'L'
   467  00BF48  49                 	db	73	;'I'
   468  00BF49  47                 	db	71	;'G'
   469  00BF4A  48                 	db	72	;'H'
   470  00BF4B  54                 	db	84	;'T'
   471  00BF4C  20                 	db	32
   472  00BF4D  52                 	db	82	;'R'
   473  00BF4E  4F                 	db	79	;'O'
   474  00BF4F  55                 	db	85	;'U'
   475  00BF50  47                 	db	71	;'G'
   476  00BF51  48                 	db	72	;'H'
   477  00BF52  3A                 	db	58	;':'
   478  00BF53  00                 	db	0
   479  00BF54                     STR_53:
   480  00BF54  41                 	db	65	;'A'
   481  00BF55  20                 	db	32
   482  00BF56  20                 	db	32
   483  00BF57  20                 	db	32
   484  00BF58  20                 	db	32
   485  00BF59  20                 	db	32
   486  00BF5A  20                 	db	32
   487  00BF5B  20                 	db	32
   488  00BF5C  20                 	db	32
   489  00BF5D  20                 	db	32
   490  00BF5E  20                 	db	32
   491  00BF5F  20                 	db	32
   492  00BF60  00                 	db	0
   493  00BF61                     STR_4:
   494  00BF61  41                 	db	65	;'A'
   495  00BF62  20                 	db	32
   496  00BF63  20                 	db	32
   497  00BF64  20                 	db	32
   498  00BF65  20                 	db	32
   499  00BF66  20                 	db	32
   500  00BF67  20                 	db	32
   501  00BF68  20                 	db	32
   502  00BF69  20                 	db	32
   503  00BF6A  20                 	db	32
   504  00BF6B  20                 	db	32
   505  00BF6C  00                 	db	0
   506  00BF6D                     STR_3:
   507  00BF6D  56                 	db	86	;'V'
   508  00BF6E  20                 	db	32
   509  00BF6F  20                 	db	32
   510  00BF70  20                 	db	32
   511  00BF71  20                 	db	32
   512  00BF72  20                 	db	32
   513  00BF73  20                 	db	32
   514  00BF74  20                 	db	32
   515  00BF75  20                 	db	32
   516  00BF76  20                 	db	32
   517  00BF77  20                 	db	32
   518  00BF78  00                 	db	0
   519  00BF79                     STR_47:
   520  00BF79  41                 	db	65	;'A'
   521  00BF7A  20                 	db	32
   522  00BF7B  20                 	db	32
   523  00BF7C  20                 	db	32
   524  00BF7D  20                 	db	32
   525  00BF7E  20                 	db	32
   526  00BF7F  20                 	db	32
   527  00BF80  20                 	db	32
   528  00BF81  20                 	db	32
   529  00BF82  20                 	db	32
   530  00BF83  00                 	db	0
   531  00BF84                     STR_36:
   532  00BF84  41                 	db	65	;'A'
   533  00BF85  20                 	db	32
   534  00BF86  20                 	db	32
   535  00BF87  20                 	db	32
   536  00BF88  20                 	db	32
   537  00BF89  20                 	db	32
   538  00BF8A  20                 	db	32
   539  00BF8B  20                 	db	32
   540  00BF8C  20                 	db	32
   541  00BF8D  00                 	db	0
   542  00BF8E                     STR_28:
   543  00BF8E  56                 	db	86	;'V'
   544  00BF8F  20                 	db	32
   545  00BF90  20                 	db	32
   546  00BF91  20                 	db	32
   547  00BF92  20                 	db	32
   548  00BF93  20                 	db	32
   549  00BF94  20                 	db	32
   550  00BF95  20                 	db	32
   551  00BF96  20                 	db	32
   552  00BF97  00                 	db	0
   553  00BF98                     STR_18:
   554  00BF98  28                 	db	40
   555  00BF99  31                 	db	49	;'1'
   556  00BF9A  3A                 	db	58	;':'
   557  00BF9B  32                 	db	50	;'2'
   558  00BF9C  35                 	db	53	;'5'
   559  00BF9D  35                 	db	53	;'5'
   560  00BF9E  29                 	db	41
   561  00BF9F  3A                 	db	58	;':'
   562  00BFA0  00                 	db	0
   563  00BFA1                     STR_43:
   564  00BFA1  49                 	db	73	;'I'
   565  00BFA2  6C                 	db	108	;'l'
   566  00BFA3  69                 	db	105	;'i'
   567  00BFA4  6D                 	db	109	;'m'
   568  00BFA5  69                 	db	105	;'i'
   569  00BFA6  74                 	db	116	;'t'
   570  00BFA7  3D                 	db	61	;'='
   571  00BFA8  00                 	db	0
   572  00BFA9                     STR_35:
   573  00BFA9  49                 	db	73	;'I'
   574  00BFAA  70                 	db	112	;'p'
   575  00BFAB  72                 	db	114	;'r'
   576  00BFAC  6F                 	db	111	;'o'
   577  00BFAD  74                 	db	116	;'t'
   578  00BFAE  3D                 	db	61	;'='
   579  00BFAF  00                 	db	0
   580  00BFB0                     STR_52:
   581  00BFB0  49                 	db	73	;'I'
   582  00BFB1  73                 	db	115	;'s'
   583  00BFB2  65                 	db	101	;'e'
   584  00BFB3  74                 	db	116	;'t'
   585  00BFB4  3D                 	db	61	;'='
   586  00BFB5  00                 	db	0
   587  00BFB6                     STR_27:
   588  00BFB6  55                 	db	85	;'U'
   589  00BFB7  73                 	db	115	;'s'
   590  00BFB8  65                 	db	101	;'e'
   591  00BFB9  74                 	db	116	;'t'
   592  00BFBA  3D                 	db	61	;'='
   593  00BFBB  00                 	db	0
   594  00BFBC                     STR_32:
   595  00BFBC  20                 	db	32
   596  00BFBD  46                 	db	70	;'F'
   597  00BFBE  49                 	db	73	;'I'
   598  00BFBF  4E                 	db	78	;'N'
   599  00BFC0  45                 	db	69	;'E'
   600  00BFC1  00                 	db	0
   601  00BFC2                     STR_33:
   602  00BFC2  52                 	db	82	;'R'
   603  00BFC3  4F                 	db	79	;'O'
   604  00BFC4  55                 	db	85	;'U'
   605  00BFC5  47                 	db	71	;'G'
   606  00BFC6  48                 	db	72	;'H'
   607  00BFC7  00                 	db	0
   608  00BFC8                     STR_6:
   609  00BFC8  25                 	db	37
   610  00BFC9  2D                 	db	45
   611  00BFCA  2E                 	db	46
   612  00BFCB  32                 	db	50	;'2'
   613  00BFCC  67                 	db	103	;'g'
   614  00BFCD  00                 	db	0
   615  00BFCE                     STR_50:
   616  00BFCE  25                 	db	37
   617  00BFCF  2D                 	db	45
   618  00BFD0  2E                 	db	46
   619  00BFD1  33                 	db	51	;'3'
   620  00BFD2  67                 	db	103	;'g'
   621  00BFD3  00                 	db	0
   622  00BFD4                     STR_15:
   623  00BFD4  25                 	db	37
   624  00BFD5  33                 	db	51	;'3'
   625  00BFD6  2E                 	db	46
   626  00BFD7  33                 	db	51	;'3'
   627  00BFD8  67                 	db	103	;'g'
   628  00BFD9  00                 	db	0
   629  00BFDA                     STR_57:
   630  00BFDA  76                 	db	118	;'v'
   631  00BFDB  31                 	db	49	;'1'
   632  00BFDC  2E                 	db	46
   633  00BFDD  30                 	db	48	;'0'
   634  00BFDE  00                 	db	0
   635  00BFDF                     STR_38:
   636  00BFDF  49                 	db	73	;'I'
   637  00BFE0  6F                 	db	111	;'o'
   638  00BFE1  20                 	db	32
   639  00BFE2  3D                 	db	61	;'='
   640  00BFE3  00                 	db	0
   641  00BFE4                     STR_14:
   642  00BFE4  25                 	db	37
   643  00BFE5  2D                 	db	45
   644  00BFE6  33                 	db	51	;'3'
   645  00BFE7  75                 	db	117	;'u'
   646  00BFE8  00                 	db	0
   647  00BFE9                     STR_2:
   648  00BFE9  49                 	db	73	;'I'
   649  00BFEA  6F                 	db	111	;'o'
   650  00BFEB  3D                 	db	61	;'='
   651  00BFEC  00                 	db	0
   652  00BFED                     STR_1:
   653  00BFED  55                 	db	85	;'U'
   654  00BFEE  6F                 	db	111	;'o'
   655  00BFEF  3D                 	db	61	;'='
   656  00BFF0  00                 	db	0
   657  00BFF1                     STR_8:
   658  00BFF1  4C                 	db	76	;'L'
   659  00BFF2  49                 	db	73	;'I'
   660  00BFF3  4D                 	db	77	;'M'
   661  00BFF4  00                 	db	0
   662  00BFF5                     STR_5:
   663  00BFF5  50                 	db	80	;'P'
   664  00BFF6  52                 	db	82	;'R'
   665  00BFF7  4F                 	db	79	;'O'
   666  00BFF8  00                 	db	0
   667  00BFF9                     STR_11:
   668  00BFF9  50                 	db	80	;'P'
   669  00BFFA  57                 	db	87	;'W'
   670  00BFFB  52                 	db	82	;'R'
   671  00BFFC  00                 	db	0
   672  00BFFD                     STR_19:
   673  00BFFD  25                 	db	37
   674  00BFFE  00                 	db	0
   675  0000                     
   676                           ; #config settings
   677  00BFFF  00                 	db	0	; dummy byte at the end
   678  0000                     
   679                           	psect	cinit
   680  003756                     __pcinit:
   681                           	opt stack 0
   682  003756                     start_initialization:
   683                           	opt stack 0
   684  003756                     __initialization:
   685                           	opt stack 0
   686                           
   687                           ; Initialize objects allocated to BANK0 (18 bytes)
   688                           ; load TBLPTR registers with __pidataBANK0
   689  003756  0E1E               	movlw	low __pidataBANK0
   690  003758  6EF6               	movwf	tblptrl,c
   691  00375A  0E3F               	movlw	high __pidataBANK0
   692  00375C  6EF7               	movwf	tblptrh,c
   693  00375E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   694  003760  6EF8               	movwf	tblptru,c
   695  003762  EE00  F0E9         	lfsr	0,__pdataBANK0
   696  003766  EE10 F012          	lfsr	1,18
   697  00376A                     copy_data0:
   698  00376A  0009               	tblrd		*+
   699  00376C  CFF5 FFEE          	movff	tablat,postinc0
   700  003770  50E5               	movf	postdec1,w,c
   701  003772  50E1               	movf	fsr1l,w,c
   702  003774  E1FA               	bnz	copy_data0
   703                           
   704                           ; Initialize objects allocated to COMRAM (11 bytes)
   705                           ; load TBLPTR registers with __pidataCOMRAM
   706  003776  0E6C               	movlw	low __pidataCOMRAM
   707  003778  6EF6               	movwf	tblptrl,c
   708  00377A  0E3F               	movlw	high __pidataCOMRAM
   709  00377C  6EF7               	movwf	tblptrh,c
   710  00377E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   711  003780  6EF8               	movwf	tblptru,c
   712  003782  EE00  F05D         	lfsr	0,__pdataCOMRAM
   713  003786  EE10 F00B          	lfsr	1,11
   714  00378A                     copy_data1:
   715  00378A  0009               	tblrd		*+
   716  00378C  CFF5 FFEE          	movff	tablat,postinc0
   717  003790  50E5               	movf	postdec1,w,c
   718  003792  50E1               	movf	fsr1l,w,c
   719  003794  E1FA               	bnz	copy_data1
   720                           
   721                           ; Clear objects allocated to BANK1 (60 bytes)
   722  003796  EE01  F000         	lfsr	0,__pbssBANK1
   723  00379A  0E3C               	movlw	60
   724  00379C                     clear_0:
   725  00379C  6AEE               	clrf	postinc0,c
   726  00379E  06E8               	decf	wreg,f,c
   727  0037A0  E1FD               	bnz	clear_0
   728                           
   729                           ; Clear objects allocated to BANK0 (27 bytes)
   730  0037A2  EE00  F0CE         	lfsr	0,__pbssBANK0
   731  0037A6  0E1B               	movlw	27
   732  0037A8                     clear_1:
   733  0037A8  6AEE               	clrf	postinc0,c
   734  0037AA  06E8               	decf	wreg,f,c
   735  0037AC  E1FD               	bnz	clear_1
   736                           
   737                           ; Clear objects allocated to COMRAM (11 bytes)
   738  0037AE  EE00  F052         	lfsr	0,__pbssCOMRAM
   739  0037B2  0E0B               	movlw	11
   740  0037B4                     clear_2:
   741  0037B4  6AEE               	clrf	postinc0,c
   742  0037B6  06E8               	decf	wreg,f,c
   743  0037B8  E1FD               	bnz	clear_2
   744  0037BA                     end_of_initialization:
   745                           	opt stack 0
   746  0037BA                     __end_of__initialization:
   747                           	opt stack 0
   748  0037BA  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   749  0037BC  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   750  0037BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   751  0037C0  6EF8               	movwf	tblptru,c
   752  0037C2  0100               	movlb	0
   753  0037C4  EF2C  F00A         	goto	_main	;jump to C main() function
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           postinc0	equ	0xFEE
   759                           wreg	equ	0xFE8
   760                           postdec1	equ	0xFE5
   761                           fsr1l	equ	0xFE1
   762                           
   763                           	psect	bssCOMRAM
   764  000052                     __pbssCOMRAM:
   765                           	opt stack 0
   766  000052                     _display_brightness_percent:
   767                           	opt stack 0
   768  000052                     	ds	3
   769  000055                     _rotary_direction:
   770                           	opt stack 0
   771  000055                     	ds	1
   772  000056                     _display_mode:
   773                           	opt stack 0
   774  000056                     	ds	1
   775  000057                     _send_byte:
   776                           	opt stack 0
   777  000057                     	ds	1
   778  000058                     _cmd_dig_pot:
   779                           	opt stack 0
   780  000058                     	ds	1
   781  000059                     _dac_u_low:
   782                           	opt stack 0
   783  000059                     	ds	1
   784  00005A                     _cmd_dac_u_high:
   785                           	opt stack 0
   786  00005A                     	ds	1
   787  00005B                     _dac_i_low:
   788                           	opt stack 0
   789  00005B                     	ds	1
   790  00005C                     _cmd_dac_i_high:
   791                           	opt stack 0
   792  00005C                     	ds	1
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           tblptrl	equ	0xFF6
   796                           tablat	equ	0xFF5
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           postdec1	equ	0xFE5
   800                           fsr1l	equ	0xFE1
   801                           
   802                           	psect	dataCOMRAM
   803  00005D                     __pdataCOMRAM:
   804                           	opt stack 0
   805  00005D                     _step_size:
   806                           	opt stack 0
   807  00005D                     	ds	2
   808  00005F                     _display_brightness:
   809                           	opt stack 0
   810  00005F                     	ds	2
   811  000061                     _display_contrast:
   812                           	opt stack 0
   813  000061                     	ds	2
   814  000063                     _DAC_u:
   815                           	opt stack 0
   816  000063                     	ds	2
   817  000065                     _DAC_i:
   818                           	opt stack 0
   819  000065                     	ds	2
   820  000067                     _cmd_dac:
   821                           	opt stack 0
   822  000067                     	ds	1
   823                           tblptru	equ	0xFF8
   824                           tblptrh	equ	0xFF7
   825                           tblptrl	equ	0xFF6
   826                           tablat	equ	0xFF5
   827                           postinc0	equ	0xFEE
   828                           wreg	equ	0xFE8
   829                           postdec1	equ	0xFE5
   830                           fsr1l	equ	0xFE1
   831                           
   832                           	psect	bssBANK0
   833  0000CE                     __pbssBANK0:
   834                           	opt stack 0
   835  0000CE                     _display_contrast_percent:
   836                           	opt stack 0
   837  0000CE                     	ds	3
   838  0000D1                     _voltage_set_i:
   839                           	opt stack 0
   840  0000D1                     	ds	3
   841  0000D4                     _voltage_set_u:
   842                           	opt stack 0
   843  0000D4                     	ds	3
   844  0000D7                     _voltage_i:
   845                           	opt stack 0
   846  0000D7                     	ds	3
   847  0000DA                     _voltage_u:
   848                           	opt stack 0
   849  0000DA                     	ds	3
   850  0000DD                     _return_default_display_counter:
   851                           	opt stack 0
   852  0000DD                     	ds	2
   853  0000DF                     _button_delay_counter:
   854                           	opt stack 0
   855  0000DF                     	ds	2
   856  0000E1                     _main_loop_counter:
   857                           	opt stack 0
   858  0000E1                     	ds	2
   859  0000E3                     _ADCResult:
   860                           	opt stack 0
   861  0000E3                     	ds	2
   862  0000E5                     _i_mode:
   863                           	opt stack 0
   864  0000E5                     	ds	1
   865  0000E6                     _return_default_display_counter_enable:
   866                           	opt stack 0
   867  0000E6                     	ds	1
   868  0000E7                     _button_delay_counter_enable:
   869                           	opt stack 0
   870  0000E7                     	ds	1
   871  0000E8                     _set_contrast:
   872                           	opt stack 0
   873  0000E8                     	ds	1
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           tblptrl	equ	0xFF6
   877                           tablat	equ	0xFF5
   878                           postinc0	equ	0xFEE
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           
   883                           	psect	dataBANK0
   884  0000E9                     __pdataBANK0:
   885                           	opt stack 0
   886  0000E9                     _voltage_in:
   887                           	opt stack 0
   888  0000E9                     	ds	3
   889  0000EC                     _constant_power:
   890                           	opt stack 0
   891  0000EC                     	ds	3
   892  0000EF                     _raw_adc_offset_voltage:
   893                           	opt stack 0
   894  0000EF                     	ds	3
   895  0000F2                     _DAC_vRef:
   896                           	opt stack 0
   897  0000F2                     	ds	3
   898  0000F5                     _ADC_vRef:
   899                           	opt stack 0
   900  0000F5                     	ds	3
   901  0000F8                     _step_size_mode_enable:
   902                           	opt stack 0
   903  0000F8                     	ds	1
   904  0000F9                     _step_size_mode:
   905                           	opt stack 0
   906  0000F9                     	ds	1
   907  0000FA                     _button_enable:
   908                           	opt stack 0
   909  0000FA                     	ds	1
   910                           tblptru	equ	0xFF8
   911                           tblptrh	equ	0xFF7
   912                           tblptrl	equ	0xFF6
   913                           tablat	equ	0xFF5
   914                           postinc0	equ	0xFEE
   915                           wreg	equ	0xFE8
   916                           postdec1	equ	0xFE5
   917                           fsr1l	equ	0xFE1
   918                           
   919                           	psect	bssBANK1
   920  000100                     __pbssBANK1:
   921                           	opt stack 0
   922  000100                     _ResultString_set_i:
   923                           	opt stack 0
   924  000100                     	ds	10
   925  00010A                     _ResultString_set_u:
   926                           	opt stack 0
   927  00010A                     	ds	10
   928  000114                     _ResultString_i:
   929                           	opt stack 0
   930  000114                     	ds	10
   931  00011E                     _ResultString_u:
   932                           	opt stack 0
   933  00011E                     	ds	10
   934  000128                     _ResultString_brightness_percent:
   935                           	opt stack 0
   936  000128                     	ds	5
   937  00012D                     _ResultString_brightness:
   938                           	opt stack 0
   939  00012D                     	ds	5
   940  000132                     _ResultString_contrast:
   941                           	opt stack 0
   942  000132                     	ds	5
   943  000137                     _ResultString_contrast_percent:
   944                           	opt stack 0
   945  000137                     	ds	5
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           postinc0	equ	0xFEE
   951                           wreg	equ	0xFE8
   952                           postdec1	equ	0xFE5
   953                           fsr1l	equ	0xFE1
   954                           
   955                           	psect	cstackBANK1
   956  00013C                     __pcstackBANK1:
   957                           	opt stack 0
   958  00013C                     _sprintf$2285:
   959                           	opt stack 0
   960                           
   961                           ; 3 bytes @ 0x0
   962  00013C                     	ds	3
   963  00013F                     sprintf@temp:
   964                           	opt stack 0
   965                           
   966                           ; 3 bytes @ 0x3
   967  00013F                     	ds	3
   968  000142                     sprintf@ap:
   969                           	opt stack 0
   970                           
   971                           ; 2 bytes @ 0x6
   972  000142                     	ds	2
   973  000144                     sprintf@tmpval:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x8
   977  000144                     	ds	4
   978  000148                     sprintf@width:
   979                           	opt stack 0
   980                           
   981                           ; 2 bytes @ 0xC
   982  000148                     	ds	2
   983  00014A                     sprintf@val:
   984                           	opt stack 0
   985                           
   986                           ; 4 bytes @ 0xE
   987  00014A                     	ds	4
   988  00014E                     sprintf@flag:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x12
   992  00014E                     	ds	2
   993  000150                     sprintf@exp:
   994                           	opt stack 0
   995                           
   996                           ; 2 bytes @ 0x14
   997  000150                     	ds	2
   998  000152                     sprintf@fval:
   999                           	opt stack 0
  1000                           
  1001                           ; 3 bytes @ 0x16
  1002  000152                     	ds	3
  1003  000155                     sprintf@prec:
  1004                           	opt stack 0
  1005                           
  1006                           ; 2 bytes @ 0x19
  1007  000155                     	ds	2
  1008  000157                     sprintf@c:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x1B
  1012  000157                     	ds	1
  1013                           tblptru	equ	0xFF8
  1014                           tblptrh	equ	0xFF7
  1015                           tblptrl	equ	0xFF6
  1016                           tablat	equ	0xFF5
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           postdec1	equ	0xFE5
  1020                           fsr1l	equ	0xFE1
  1021                           
  1022                           	psect	cstackBANK0
  1023  000080                     __pcstackBANK0:
  1024                           	opt stack 0
  1025  000080                     ??___ftdiv:
  1026                           
  1027                           ; 1 bytes @ 0x0
  1028  000080                     	ds	3
  1029  000083                     ___ftdiv@cntr:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x3
  1033  000083                     	ds	1
  1034  000084                     ___ftdiv@f3:
  1035                           	opt stack 0
  1036                           
  1037                           ; 3 bytes @ 0x4
  1038  000084                     	ds	3
  1039  000087                     ___ftdiv@exp:
  1040                           	opt stack 0
  1041                           
  1042                           ; 1 bytes @ 0x7
  1043  000087                     	ds	1
  1044  000088                     ___ftdiv@sign:
  1045                           	opt stack 0
  1046                           
  1047                           ; 1 bytes @ 0x8
  1048  000088                     	ds	1
  1049  000089                     ?___fttol:
  1050                           	opt stack 0
  1051  000089                     ___fttol@f1:
  1052                           	opt stack 0
  1053                           
  1054                           ; 3 bytes @ 0x9
  1055  000089                     	ds	4
  1056  00008D                     ??___fttol:
  1057                           
  1058                           ; 1 bytes @ 0xD
  1059  00008D                     	ds	5
  1060  000092                     ___fttol@sign1:
  1061                           	opt stack 0
  1062                           
  1063                           ; 1 bytes @ 0x12
  1064  000092                     	ds	1
  1065  000093                     ___fttol@lval:
  1066                           	opt stack 0
  1067                           
  1068                           ; 4 bytes @ 0x13
  1069  000093                     	ds	4
  1070  000097                     ___fttol@exp1:
  1071                           	opt stack 0
  1072                           
  1073                           ; 1 bytes @ 0x17
  1074  000097                     	ds	1
  1075  000098                     ?___lltoft:
  1076                           	opt stack 0
  1077  000098                     ___lltoft@c:
  1078                           	opt stack 0
  1079                           
  1080                           ; 4 bytes @ 0x18
  1081  000098                     	ds	4
  1082  00009C                     ??___lltoft:
  1083                           
  1084                           ; 1 bytes @ 0x1C
  1085  00009C                     	ds	4
  1086  0000A0                     ?___ftadd:
  1087                           	opt stack 0
  1088  0000A0                     ___ftadd@f1:
  1089                           	opt stack 0
  1090                           
  1091                           ; 3 bytes @ 0x20
  1092  0000A0                     	ds	3
  1093  0000A3                     ___ftadd@f2:
  1094                           	opt stack 0
  1095                           
  1096                           ; 3 bytes @ 0x23
  1097  0000A3                     	ds	3
  1098  0000A6                     ??___ftadd:
  1099                           
  1100                           ; 1 bytes @ 0x26
  1101  0000A6                     	ds	3
  1102  0000A9                     ___ftadd@sign:
  1103                           	opt stack 0
  1104                           
  1105                           ; 1 bytes @ 0x29
  1106  0000A9                     	ds	1
  1107  0000AA                     ___ftadd@exp2:
  1108                           	opt stack 0
  1109                           
  1110                           ; 1 bytes @ 0x2A
  1111  0000AA                     	ds	1
  1112  0000AB                     ___ftadd@exp1:
  1113                           	opt stack 0
  1114                           
  1115                           ; 1 bytes @ 0x2B
  1116  0000AB                     	ds	1
  1117  0000AC                     ?___ftsub:
  1118                           	opt stack 0
  1119  0000AC                     ___ftge@ff1:
  1120                           	opt stack 0
  1121  0000AC                     ___ftsub@f1:
  1122                           	opt stack 0
  1123                           
  1124                           ; 3 bytes @ 0x2C
  1125  0000AC                     	ds	3
  1126  0000AF                     ___ftge@ff2:
  1127                           	opt stack 0
  1128  0000AF                     ___ftsub@f2:
  1129                           	opt stack 0
  1130                           
  1131                           ; 3 bytes @ 0x2F
  1132  0000AF                     	ds	3
  1133  0000B2                     ??___ftge:
  1134                           
  1135                           ; 1 bytes @ 0x32
  1136  0000B2                     	ds	3
  1137  0000B5                     ?_sprintf:
  1138                           	opt stack 0
  1139  0000B5                     sprintf@sp:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x35
  1143  0000B5                     	ds	2
  1144  0000B7                     sprintf@f:
  1145                           	opt stack 0
  1146                           
  1147                           ; 2 bytes @ 0x37
  1148  0000B7                     	ds	5
  1149  0000BC                     ??_sprintf:
  1150                           
  1151                           ; 1 bytes @ 0x3C
  1152  0000BC                     	ds	6
  1153  0000C2                     _voltage_set_display$2280:
  1154                           	opt stack 0
  1155                           
  1156                           ; 3 bytes @ 0x42
  1157  0000C2                     	ds	3
  1158  0000C5                     ??_main:
  1159                           
  1160                           ; 1 bytes @ 0x45
  1161  0000C5                     	ds	2
  1162  0000C7                     _main$2281:
  1163                           	opt stack 0
  1164                           
  1165                           ; 3 bytes @ 0x47
  1166  0000C7                     	ds	3
  1167  0000CA                     main@i:
  1168                           	opt stack 0
  1169                           
  1170                           ; 2 bytes @ 0x4A
  1171  0000CA                     	ds	2
  1172  0000CC                     main@i_556:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0x4C
  1176  0000CC                     	ds	2
  1177                           tblptru	equ	0xFF8
  1178                           tblptrh	equ	0xFF7
  1179                           tblptrl	equ	0xFF6
  1180                           tablat	equ	0xFF5
  1181                           postinc0	equ	0xFEE
  1182                           wreg	equ	0xFE8
  1183                           postdec1	equ	0xFE5
  1184                           fsr1l	equ	0xFE1
  1185                           
  1186                           	psect	cstackCOMRAM
  1187  000001                     __pcstackCOMRAM:
  1188                           	opt stack 0
  1189  000001                     i2OpenSPI@bus_mode:
  1190                           	opt stack 0
  1191  000001                     i2WriteSPI@TempVar:
  1192                           	opt stack 0
  1193                           
  1194                           ; 1 bytes @ 0x0
  1195  000001                     	ds	1
  1196  000002                     i2OpenSPI@smp_phase:
  1197                           	opt stack 0
  1198  000002                     i2WriteSPI@data_out:
  1199                           	opt stack 0
  1200                           
  1201                           ; 1 bytes @ 0x1
  1202  000002                     	ds	1
  1203  000003                     i2OpenSPI@sync_mode:
  1204                           	opt stack 0
  1205                           
  1206                           ; 1 bytes @ 0x2
  1207  000003                     	ds	1
  1208  000004                     i2init_dac_SPI@config_sync_mode:
  1209                           	opt stack 0
  1210                           
  1211                           ; 1 bytes @ 0x3
  1212  000004                     	ds	1
  1213  000005                     i2init_dac_SPI@config_bus_mode:
  1214                           	opt stack 0
  1215                           
  1216                           ; 1 bytes @ 0x4
  1217  000005                     	ds	1
  1218  000006                     i2init_dac_SPI@config_smp_phase:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0x5
  1222  000006                     	ds	1
  1223  000007                     ??_rotary_encoder:
  1224  000007                     
  1225                           ; 1 bytes @ 0x6
  1226  000007                     	ds	16
  1227  000017                     ??_SetDDRamAddr:
  1228  000017                     ??_SetChanADC:
  1229  000017                     ??_Delay10KTCYx:
  1230  000017                     ??_isdigit:
  1231  000017                     ??_Delay1Sec:
  1232  000017                     ?_ReadADC:
  1233                           	opt stack 0
  1234  000017                     ?___awmod:
  1235                           	opt stack 0
  1236  000017                     ?___ftpack:
  1237                           	opt stack 0
  1238  000017                     ?__tdiv_to_l_:
  1239                           	opt stack 0
  1240  000017                     ?__div_to_l_:
  1241                           	opt stack 0
  1242  000017                     ?___lldiv:
  1243                           	opt stack 0
  1244  000017                     WriteCmdXLCD@cmd:
  1245                           	opt stack 0
  1246  000017                     WriteDataXLCD@data:
  1247                           	opt stack 0
  1248  000017                     OpenADC@config2:
  1249                           	opt stack 0
  1250  000017                     OpenSPI@bus_mode:
  1251                           	opt stack 0
  1252  000017                     WriteSPI@TempVar:
  1253                           	opt stack 0
  1254  000017                     Delay1KTCYx@unit:
  1255                           	opt stack 0
  1256  000017                     ___awmod@dividend:
  1257                           	opt stack 0
  1258  000017                     __div_to_l_@f1:
  1259                           	opt stack 0
  1260  000017                     ___ftpack@arg:
  1261                           	opt stack 0
  1262  000017                     __tdiv_to_l_@f1:
  1263                           	opt stack 0
  1264  000017                     ___lldiv@dividend:
  1265                           	opt stack 0
  1266                           
  1267                           ; 4 bytes @ 0x16
  1268  000017                     	ds	1
  1269  000018                     OpenADC@portconfig:
  1270                           	opt stack 0
  1271  000018                     SetChanADC@channel:
  1272                           	opt stack 0
  1273  000018                     OpenSPI@smp_phase:
  1274                           	opt stack 0
  1275  000018                     WriteSPI@data_out:
  1276                           	opt stack 0
  1277  000018                     Delay10KTCYx@unit:
  1278                           	opt stack 0
  1279  000018                     _isdigit$1890:
  1280                           	opt stack 0
  1281  000018                     Delay1Sec@cntDelay:
  1282                           	opt stack 0
  1283  000018                     putrsXLCD@buffer:
  1284                           	opt stack 0
  1285  000018                     putsXLCD@buffer:
  1286                           	opt stack 0
  1287                           
  1288                           ; 2 bytes @ 0x17
  1289  000018                     	ds	1
  1290  000019                     ??_OpenADC:
  1291  000019                     ??_ReadADC:
  1292  000019                     OpenSPI@sync_mode:
  1293                           	opt stack 0
  1294  000019                     isdigit@c:
  1295                           	opt stack 0
  1296  000019                     ___awmod@divisor:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x18
  1300  000019                     	ds	1
  1301  00001A                     init_dig_pot_SPI@config_sync_mode:
  1302                           	opt stack 0
  1303  00001A                     init_dac_SPI@config_sync_mode:
  1304                           	opt stack 0
  1305  00001A                     SetDDRamAddr@DDaddr:
  1306                           	opt stack 0
  1307  00001A                     ___ftpack@exp:
  1308                           	opt stack 0
  1309  00001A                     __div_to_l_@f2:
  1310                           	opt stack 0
  1311  00001A                     __tdiv_to_l_@f2:
  1312                           	opt stack 0
  1313                           
  1314                           ; 3 bytes @ 0x19
  1315  00001A                     	ds	1
  1316  00001B                     init_dig_pot_SPI@config_bus_mode:
  1317                           	opt stack 0
  1318  00001B                     init_dac_SPI@config_bus_mode:
  1319                           	opt stack 0
  1320  00001B                     OpenXLCD@lcdtype:
  1321                           	opt stack 0
  1322  00001B                     OpenADC@config:
  1323                           	opt stack 0
  1324  00001B                     ___awmod@counter:
  1325                           	opt stack 0
  1326  00001B                     ___ftpack@sign:
  1327                           	opt stack 0
  1328  00001B                     ___lldiv@divisor:
  1329                           	opt stack 0
  1330                           
  1331                           ; 4 bytes @ 0x1A
  1332  00001B                     	ds	1
  1333  00001C                     ??___ftpack:
  1334  00001C                     init_ADC@channel:
  1335                           	opt stack 0
  1336  00001C                     init_dig_pot_SPI@config_smp_phase:
  1337                           	opt stack 0
  1338  00001C                     init_dac_SPI@config_smp_phase:
  1339                           	opt stack 0
  1340  00001C                     ___awmod@sign:
  1341                           	opt stack 0
  1342                           
  1343                           ; 1 bytes @ 0x1B
  1344  00001C                     	ds	1
  1345  00001D                     ??__tdiv_to_l_:
  1346  00001D                     ?___awdiv:
  1347                           	opt stack 0
  1348  00001D                     init_ADC@config3:
  1349                           	opt stack 0
  1350  00001D                     ___awdiv@dividend:
  1351                           	opt stack 0
  1352  00001D                     __div_to_l_@quot:
  1353                           	opt stack 0
  1354                           
  1355                           ; 4 bytes @ 0x1C
  1356  00001D                     	ds	1
  1357  00001E                     init_ADC@i:
  1358                           	opt stack 0
  1359                           
  1360                           ; 1 bytes @ 0x1D
  1361  00001E                     	ds	1
  1362  00001F                     ?___ftneg:
  1363                           	opt stack 0
  1364  00001F                     init_ADC@config1:
  1365                           	opt stack 0
  1366  00001F                     ___awdiv@divisor:
  1367                           	opt stack 0
  1368  00001F                     ___ftneg@f1:
  1369                           	opt stack 0
  1370  00001F                     ___lldiv@quotient:
  1371                           	opt stack 0
  1372                           
  1373                           ; 4 bytes @ 0x1E
  1374  00001F                     	ds	1
  1375  000020                     init_ADC@config2:
  1376                           	opt stack 0
  1377  000020                     __tdiv_to_l_@quot:
  1378                           	opt stack 0
  1379                           
  1380                           ; 4 bytes @ 0x1F
  1381  000020                     	ds	1
  1382  000021                     init_ADC@portconfig:
  1383                           	opt stack 0
  1384  000021                     ___awdiv@counter:
  1385                           	opt stack 0
  1386  000021                     __div_to_l_@cntr:
  1387                           	opt stack 0
  1388                           
  1389                           ; 1 bytes @ 0x20
  1390  000021                     	ds	1
  1391  000022                     ___awdiv@sign:
  1392                           	opt stack 0
  1393  000022                     __div_to_l_@exp1:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x21
  1397  000022                     	ds	1
  1398  000023                     ___lldiv@counter:
  1399                           	opt stack 0
  1400  000023                     ___awdiv@quotient:
  1401                           	opt stack 0
  1402                           
  1403                           ; 2 bytes @ 0x22
  1404  000023                     	ds	1
  1405  000024                     ?___llmod:
  1406                           	opt stack 0
  1407  000024                     __tdiv_to_l_@cntr:
  1408                           	opt stack 0
  1409  000024                     ___llmod@dividend:
  1410                           	opt stack 0
  1411                           
  1412                           ; 4 bytes @ 0x23
  1413  000024                     	ds	1
  1414  000025                     ?___wmul:
  1415                           	opt stack 0
  1416  000025                     __tdiv_to_l_@exp1:
  1417                           	opt stack 0
  1418  000025                     ___wmul@multiplier:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x24
  1422  000025                     	ds	2
  1423  000027                     ___wmul@multiplicand:
  1424                           	opt stack 0
  1425                           
  1426                           ; 2 bytes @ 0x26
  1427  000027                     	ds	1
  1428  000028                     ___llmod@divisor:
  1429                           	opt stack 0
  1430                           
  1431                           ; 4 bytes @ 0x27
  1432  000028                     	ds	1
  1433  000029                     ___wmul@product:
  1434                           	opt stack 0
  1435                           
  1436                           ; 2 bytes @ 0x28
  1437  000029                     	ds	2
  1438  00002B                     ?___lwdiv:
  1439                           	opt stack 0
  1440  00002B                     ___lwdiv@dividend:
  1441                           	opt stack 0
  1442                           
  1443                           ; 2 bytes @ 0x2A
  1444  00002B                     	ds	1
  1445  00002C                     ___llmod@counter:
  1446                           	opt stack 0
  1447                           
  1448                           ; 1 bytes @ 0x2B
  1449  00002C                     	ds	1
  1450  00002D                     ___lwdiv@divisor:
  1451                           	opt stack 0
  1452                           
  1453                           ; 2 bytes @ 0x2C
  1454  00002D                     	ds	2
  1455  00002F                     ___lwdiv@quotient:
  1456                           	opt stack 0
  1457                           
  1458                           ; 2 bytes @ 0x2E
  1459  00002F                     	ds	2
  1460  000031                     ___lwdiv@counter:
  1461                           	opt stack 0
  1462                           
  1463                           ; 1 bytes @ 0x30
  1464  000031                     	ds	1
  1465  000032                     ?___lwtoft:
  1466                           	opt stack 0
  1467  000032                     ___lwtoft@c:
  1468                           	opt stack 0
  1469                           
  1470                           ; 2 bytes @ 0x31
  1471  000032                     	ds	3
  1472  000035                     ?___ftmul:
  1473                           	opt stack 0
  1474  000035                     ___ftmul@f1:
  1475                           	opt stack 0
  1476                           
  1477                           ; 3 bytes @ 0x34
  1478  000035                     	ds	3
  1479  000038                     ___ftmul@f2:
  1480                           	opt stack 0
  1481                           
  1482                           ; 3 bytes @ 0x37
  1483  000038                     	ds	3
  1484  00003B                     ??___ftmul:
  1485                           
  1486                           ; 1 bytes @ 0x3A
  1487  00003B                     	ds	3
  1488  00003E                     ___ftmul@exp:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x3D
  1492  00003E                     	ds	1
  1493  00003F                     ___ftmul@f3_as_product:
  1494                           	opt stack 0
  1495                           
  1496                           ; 3 bytes @ 0x3E
  1497  00003F                     	ds	3
  1498  000042                     ___ftmul@cntr:
  1499                           	opt stack 0
  1500                           
  1501                           ; 1 bytes @ 0x41
  1502  000042                     	ds	1
  1503  000043                     ___ftmul@sign:
  1504                           	opt stack 0
  1505                           
  1506                           ; 1 bytes @ 0x42
  1507  000043                     	ds	1
  1508  000044                     ?_fround:
  1509                           	opt stack 0
  1510  000044                     ?_scale:
  1511                           	opt stack 0
  1512                           
  1513                           ; 3 bytes @ 0x43
  1514  000044                     	ds	3
  1515  000047                     _fround$2283:
  1516                           	opt stack 0
  1517  000047                     _scale$2284:
  1518                           	opt stack 0
  1519                           
  1520                           ; 3 bytes @ 0x46
  1521  000047                     	ds	3
  1522  00004A                     scale@scl:
  1523                           	opt stack 0
  1524  00004A                     _fround$2282:
  1525                           	opt stack 0
  1526                           
  1527                           ; 3 bytes @ 0x49
  1528  00004A                     	ds	1
  1529  00004B                     ?___ftdiv:
  1530                           	opt stack 0
  1531  00004B                     ___ftdiv@f1:
  1532                           	opt stack 0
  1533                           
  1534                           ; 3 bytes @ 0x4A
  1535  00004B                     	ds	2
  1536  00004D                     fround@prec:
  1537                           	opt stack 0
  1538                           
  1539                           ; 1 bytes @ 0x4C
  1540  00004D                     	ds	1
  1541  00004E                     ___ftdiv@f2:
  1542                           	opt stack 0
  1543                           
  1544                           ; 3 bytes @ 0x4D
  1545  00004E                     	ds	3
  1546  000051                     ___lltoft@exp:
  1547                           	opt stack 0
  1548                           
  1549                           ; 1 bytes @ 0x50
  1550  000051                     	ds	1
  1551  000052                     tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           ; 1 bytes @ 0x51
  1561 ;;
  1562 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1563 ;;
  1564 ;; *************** function _main *****************
  1565 ;; Defined at:
  1566 ;;		line 416 in file "lcd_trials_4bits.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  i               2   76[BANK0 ] int 
  1571 ;;  i               2   74[BANK0 ] int 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        9 bytes
  1586 ;; Hardware stack levels required when called:    9
  1587 ;; This function calls:
  1588 ;;		_BusyADC
  1589 ;;		_ConvertADC
  1590 ;;		_Delay1Sec
  1591 ;;		_ReadADC
  1592 ;;		_SetChanADC
  1593 ;;		_SetDDRamAddr
  1594 ;;		___ftadd
  1595 ;;		___ftdiv
  1596 ;;		___ftmul
  1597 ;;		___lwtoft
  1598 ;;		_brightness_display
  1599 ;;		_clear_display
  1600 ;;		_contrast_display
  1601 ;;		_current_auto_limit_set_display
  1602 ;;		_current_limit_set_display
  1603 ;;		_current_protection_set_display
  1604 ;;		_default_display
  1605 ;;		_init_ADC
  1606 ;;		_init_GPIO_DIR
  1607 ;;		_init_XLCD
  1608 ;;		_protection_display
  1609 ;;		_putrsXLCD
  1610 ;;		_send_backlight_spi
  1611 ;;		_send_contrast_spi
  1612 ;;		_send_dac_i_spi
  1613 ;;		_send_dac_u_spi
  1614 ;;		_sprintf
  1615 ;;		_voltage_set_display
  1616 ;; This function is called by:
  1617 ;;		Startup code after reset
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text0
  1622  001458                     __ptext0:
  1623                           	opt stack 0
  1624  001458                     _main:
  1625                           	opt stack 22
  1626                           
  1627                           ;lcd_trials_4bits.c: 418: OSCCON = 0x76;
  1628                           
  1629                           ;incstack = 0
  1630  001458  0E76               	movlw	118
  1631  00145A  6ED3               	movwf	4051,c	;volatile
  1632                           
  1633                           ;lcd_trials_4bits.c: 419: CMCON = 0x07;
  1634  00145C  0E07               	movlw	7
  1635  00145E  6EB4               	movwf	4020,c	;volatile
  1636                           
  1637                           ;lcd_trials_4bits.c: 424: init_GPIO_DIR ();
  1638  001460  EC54  F01F         	call	_init_GPIO_DIR	;wreg free
  1639                           
  1640                           ;lcd_trials_4bits.c: 428: RBIE = 1;
  1641  001464  86F2               	bsf	intcon,3,c	;volatile
  1642                           
  1643                           ;lcd_trials_4bits.c: 430: INTCON2 = 0b00000000;
  1644  001466  0E00               	movlw	0
  1645  001468  6EF1               	movwf	intcon2,c	;volatile
  1646                           
  1647                           ;lcd_trials_4bits.c: 432: RCONbits.IPEN = 0;
  1648  00146A  9ED0               	bcf	4048,7,c	;volatile
  1649                           
  1650                           ;lcd_trials_4bits.c: 435: init_ADC ();
  1651  00146C  ECF5  F01D         	call	_init_ADC	;wreg free
  1652                           
  1653                           ;lcd_trials_4bits.c: 438: send_contrast_spi ();
  1654  001470  ECAE  F01E         	call	_send_contrast_spi	;wreg free
  1655                           
  1656                           ;lcd_trials_4bits.c: 439: send_backlight_spi ();
  1657  001474  ECC2  F01E         	call	_send_backlight_spi	;wreg free
  1658                           
  1659                           ;lcd_trials_4bits.c: 442: send_dac_i_spi ();
  1660  001478  EC3D  F01E         	call	_send_dac_i_spi	;wreg free
  1661                           
  1662                           ;lcd_trials_4bits.c: 443: send_dac_u_spi ();
  1663  00147C  EC0F  F01E         	call	_send_dac_u_spi	;wreg free
  1664                           
  1665                           ;lcd_trials_4bits.c: 445: init_XLCD();
  1666  001480  ECD9  F01D         	call	_init_XLCD	;wreg free
  1667                           
  1668                           ;lcd_trials_4bits.c: 448: putrsXLCD("  Power Supply  ");
  1669  001484  0EEE               	movlw	low STR_56
  1670  001486  6E18               	movwf	putrsXLCD@buffer,c
  1671  001488  0EBE               	movlw	high STR_56
  1672  00148A  6E19               	movwf	putrsXLCD@buffer+1,c
  1673  00148C  EC7E  F01C         	call	_putrsXLCD	;wreg free
  1674                           
  1675                           ;lcd_trials_4bits.c: 449: SetDDRamAddr (0x40);
  1676  001490  0E40               	movlw	64
  1677  001492  EC2F  F01D         	call	_SetDDRamAddr
  1678                           
  1679                           ;lcd_trials_4bits.c: 450: putrsXLCD("v1.0");
  1680  001496  0EDA               	movlw	low STR_57
  1681  001498  6E18               	movwf	putrsXLCD@buffer,c
  1682  00149A  0EBF               	movlw	high STR_57
  1683  00149C  6E19               	movwf	putrsXLCD@buffer+1,c
  1684  00149E  EC7E  F01C         	call	_putrsXLCD	;wreg free
  1685                           
  1686                           ;lcd_trials_4bits.c: 451: Delay1Sec();
  1687  0014A2  EC54  F01E         	call	_Delay1Sec	;wreg free
  1688                           
  1689                           ;lcd_trials_4bits.c: 452: Delay1Sec();
  1690  0014A6  EC54  F01E         	call	_Delay1Sec	;wreg free
  1691                           
  1692                           ;lcd_trials_4bits.c: 453: clear_display();
  1693  0014AA  EC98  F01F         	call	_clear_display	;wreg free
  1694  0014AE                     l7198:
  1695                           
  1696                           ;lcd_trials_4bits.c: 465: ADCResult = 0;
  1697  0014AE  0E00               	movlw	0
  1698  0014B0  0100               	movlb	0	; () banked
  1699  0014B2  6FE4               	movwf	(_ADCResult+1)& (0+255),b
  1700  0014B4  0E00               	movlw	0
  1701  0014B6  6FE3               	movwf	_ADCResult& (0+255),b
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;lcd_trials_4bits.c: 468: SetChanADC(0b10000111);
  1705  0014B8  0E87               	movlw	135
  1706  0014BA  EC84  F01F         	call	_SetChanADC
  1707                           
  1708                           ;lcd_trials_4bits.c: 469: for(int i=0;i<16;i++)
  1709  0014BE  0E00               	movlw	0
  1710  0014C0  0100               	movlb	0	; () banked
  1711  0014C2  6FCB               	movwf	(main@i+1)& (0+255),b
  1712  0014C4  0E00               	movlw	0
  1713  0014C6  6FCA               	movwf	main@i& (0+255),b
  1714  0014C8  0100               	movlb	0	; () banked
  1715  0014CA  BFCB               	btfsc	(main@i+1)& (0+255),7,b
  1716  0014CC  D008               	goto	l7206
  1717  0014CE  0100               	movlb	0	; () banked
  1718  0014D0  51CB               	movf	(main@i+1)& (0+255),w,b
  1719  0014D2  E118               	bnz	l7216
  1720  0014D4  0E10               	movlw	16
  1721  0014D6  0100               	movlb	0	; () banked
  1722  0014D8  5DCA               	subwf	main@i& (0+255),w,b
  1723  0014DA  B0D8               	btfsc	status,0,c
  1724  0014DC  D013               	goto	l7216
  1725  0014DE                     l7206:
  1726                           
  1727                           ; BSR set to: 0
  1728                           ;lcd_trials_4bits.c: 470: {
  1729                           ;lcd_trials_4bits.c: 471: ConvertADC();
  1730  0014DE  ECC3  F01F         	call	_ConvertADC	;wreg free
  1731  0014E2                     l7208:
  1732  0014E2  ECB0  F01F         	call	_BusyADC	;wreg free
  1733  0014E6  0900               	iorlw	0
  1734  0014E8  A4D8               	btfss	status,2,c
  1735  0014EA  D7FB               	goto	l7208
  1736                           
  1737                           ;lcd_trials_4bits.c: 473: ADCResult += (unsigned int) ReadADC();
  1738  0014EC  ECA9  F01F         	call	_ReadADC	;wreg free
  1739  0014F0  5017               	movf	?_ReadADC,w,c
  1740  0014F2  0100               	movlb	0	; () banked
  1741  0014F4  27E3               	addwf	_ADCResult& (0+255),f,b
  1742  0014F6  5018               	movf	?_ReadADC+1,w,c
  1743  0014F8  0100               	movlb	0	; () banked
  1744  0014FA  23E4               	addwfc	(_ADCResult+1)& (0+255),f,b
  1745                           
  1746                           ; BSR set to: 0
  1747  0014FC  0100               	movlb	0	; () banked
  1748  0014FE  4BCA               	infsnz	main@i& (0+255),f,b
  1749  001500  2BCB               	incf	(main@i+1)& (0+255),f,b
  1750  001502  D7E2               	goto	L1
  1751  001504                     l7216:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;lcd_trials_4bits.c: 474: }
  1755                           ;lcd_trials_4bits.c: 475: ADCResult /= 16;
  1756  001504  0100               	movlb	0	; () banked
  1757  001506  3BE3               	swapf	_ADCResult& (0+255),f,b
  1758  001508  3BE4               	swapf	(_ADCResult+1)& (0+255),f,b
  1759  00150A  0E0F               	movlw	15
  1760  00150C  17E3               	andwf	_ADCResult& (0+255),f,b
  1761  00150E  51E4               	movf	(_ADCResult+1)& (0+255),w,b
  1762  001510  0BF0               	andlw	240
  1763  001512  13E3               	iorwf	_ADCResult& (0+255),f,b
  1764  001514  0E0F               	movlw	15
  1765  001516  17E4               	andwf	(_ADCResult+1)& (0+255),f,b
  1766                           
  1767                           ; BSR set to: 0
  1768                           ;lcd_trials_4bits.c: 476: voltage_u = (((ADCResult*ADC_vRef)/1024) + raw_adc_offset_volt
      +                          age)*6;
  1769  001518  C0EF  F0A3         	movff	_raw_adc_offset_voltage,___ftadd@f2
  1770  00151C  C0F0  F0A4         	movff	_raw_adc_offset_voltage+1,___ftadd@f2+1
  1771  001520  C0F1  F0A5         	movff	_raw_adc_offset_voltage+2,___ftadd@f2+2
  1772  001524  0E00               	movlw	0
  1773  001526  6E4E               	movwf	___ftdiv@f2,c
  1774  001528  0E80               	movlw	128
  1775  00152A  6E4F               	movwf	___ftdiv@f2+1,c
  1776  00152C  0E44               	movlw	68
  1777  00152E  6E50               	movwf	___ftdiv@f2+2,c
  1778  001530  C0F5  F038         	movff	_ADC_vRef,___ftmul@f2
  1779  001534  C0F6  F039         	movff	_ADC_vRef+1,___ftmul@f2+1
  1780  001538  C0F7  F03A         	movff	_ADC_vRef+2,___ftmul@f2+2
  1781  00153C  C0E3  F032         	movff	_ADCResult,___lwtoft@c
  1782  001540  C0E4  F033         	movff	_ADCResult+1,___lwtoft@c+1
  1783  001544  ECFA  F01E         	call	___lwtoft	;wreg free
  1784  001548  C032  F035         	movff	?___lwtoft,___ftmul@f1
  1785  00154C  C033  F036         	movff	?___lwtoft+1,___ftmul@f1+1
  1786  001550  C034  F037         	movff	?___lwtoft+2,___ftmul@f1+2
  1787  001554  EC76  F018         	call	___ftmul	;wreg free
  1788  001558  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  1789  00155C  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  1790  001560  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  1791  001564  EC67  F017         	call	___ftdiv	;wreg free
  1792  001568  C04B  F0A0         	movff	?___ftdiv,___ftadd@f1
  1793  00156C  C04C  F0A1         	movff	?___ftdiv+1,___ftadd@f1+1
  1794  001570  C04D  F0A2         	movff	?___ftdiv+2,___ftadd@f1+2
  1795  001574  EC70  F010         	call	___ftadd	;wreg free
  1796  001578  C0A0  F0C7         	movff	?___ftadd,_main$2281
  1797  00157C  C0A1  F0C8         	movff	?___ftadd+1,_main$2281+1
  1798  001580  C0A2  F0C9         	movff	?___ftadd+2,_main$2281+2
  1799                           
  1800                           ;lcd_trials_4bits.c: 476: voltage_u = (((ADCResult*ADC_vRef)/1024) + raw_adc_offset_volt
      +                          age)*6;
  1801  001584  C0C7  F035         	movff	_main$2281,___ftmul@f1
  1802  001588  C0C8  F036         	movff	_main$2281+1,___ftmul@f1+1
  1803  00158C  C0C9  F037         	movff	_main$2281+2,___ftmul@f1+2
  1804  001590  0E00               	movlw	0
  1805  001592  6E38               	movwf	___ftmul@f2,c
  1806  001594  0EC0               	movlw	192
  1807  001596  6E39               	movwf	___ftmul@f2+1,c
  1808  001598  0E40               	movlw	64
  1809  00159A  6E3A               	movwf	___ftmul@f2+2,c
  1810  00159C  EC76  F018         	call	___ftmul	;wreg free
  1811  0015A0  C035  F0DA         	movff	?___ftmul,_voltage_u
  1812  0015A4  C036  F0DB         	movff	?___ftmul+1,_voltage_u+1
  1813  0015A8  C037  F0DC         	movff	?___ftmul+2,_voltage_u+2
  1814                           
  1815                           ;lcd_trials_4bits.c: 478: sprintf(ResultString_u, "%-.3g", voltage_u);
  1816  0015AC  0E1E               	movlw	low _ResultString_u
  1817  0015AE  0100               	movlb	0	; () banked
  1818  0015B0  6FB5               	movwf	sprintf@sp& (0+255),b
  1819  0015B2  0E01               	movlw	high _ResultString_u
  1820  0015B4  0100               	movlb	0	; () banked
  1821  0015B6  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  1822  0015B8  0ECE               	movlw	low STR_50
  1823  0015BA  0100               	movlb	0	; () banked
  1824  0015BC  6FB7               	movwf	sprintf@f& (0+255),b
  1825  0015BE  0EBF               	movlw	high STR_50
  1826  0015C0  0100               	movlb	0	; () banked
  1827  0015C2  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  1828  0015C4  C0DA  F0B9         	movff	_voltage_u,?_sprintf+4
  1829  0015C8  C0DB  F0BA         	movff	_voltage_u+1,?_sprintf+5
  1830  0015CC  C0DC  F0BB         	movff	_voltage_u+2,?_sprintf+6
  1831  0015D0  EC09  F000         	call	_sprintf	;wreg free
  1832                           
  1833                           ;lcd_trials_4bits.c: 479: ADCResult = 0;
  1834  0015D4  0E00               	movlw	0
  1835  0015D6  0100               	movlb	0	; () banked
  1836  0015D8  6FE4               	movwf	(_ADCResult+1)& (0+255),b
  1837  0015DA  0E00               	movlw	0
  1838  0015DC  6FE3               	movwf	_ADCResult& (0+255),b
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;lcd_trials_4bits.c: 482: SetChanADC(0b10001111);
  1842  0015DE  0E8F               	movlw	143
  1843  0015E0  EC84  F01F         	call	_SetChanADC
  1844                           
  1845                           ;lcd_trials_4bits.c: 483: for(int i=0;i<16;i++)
  1846  0015E4  0E00               	movlw	0
  1847  0015E6  0100               	movlb	0	; () banked
  1848  0015E8  6FCD               	movwf	(main@i_556+1)& (0+255),b
  1849  0015EA  0E00               	movlw	0
  1850  0015EC  6FCC               	movwf	main@i_556& (0+255),b
  1851  0015EE                     l7230:
  1852                           
  1853                           ; BSR set to: 0
  1854  0015EE  0100               	movlb	0	; () banked
  1855  0015F0  BFCD               	btfsc	(main@i_556+1)& (0+255),7,b
  1856  0015F2  D008               	goto	l7234
  1857  0015F4  0100               	movlb	0	; () banked
  1858  0015F6  51CD               	movf	(main@i_556+1)& (0+255),w,b
  1859  0015F8  E118               	bnz	l7244
  1860  0015FA  0E10               	movlw	16
  1861  0015FC  0100               	movlb	0	; () banked
  1862  0015FE  5DCC               	subwf	main@i_556& (0+255),w,b
  1863  001600  B0D8               	btfsc	status,0,c
  1864  001602  D013               	goto	l7244
  1865  001604                     l7234:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;lcd_trials_4bits.c: 484: {
  1869                           ;lcd_trials_4bits.c: 485: ConvertADC();
  1870  001604  ECC3  F01F         	call	_ConvertADC	;wreg free
  1871  001608                     l7236:
  1872  001608  ECB0  F01F         	call	_BusyADC	;wreg free
  1873  00160C  0900               	iorlw	0
  1874  00160E  A4D8               	btfss	status,2,c
  1875  001610  D7FB               	goto	l7236
  1876                           
  1877                           ;lcd_trials_4bits.c: 487: ADCResult += (unsigned int) ReadADC();
  1878  001612  ECA9  F01F         	call	_ReadADC	;wreg free
  1879  001616  5017               	movf	?_ReadADC,w,c
  1880  001618  0100               	movlb	0	; () banked
  1881  00161A  27E3               	addwf	_ADCResult& (0+255),f,b
  1882  00161C  5018               	movf	?_ReadADC+1,w,c
  1883  00161E  0100               	movlb	0	; () banked
  1884  001620  23E4               	addwfc	(_ADCResult+1)& (0+255),f,b
  1885                           
  1886                           ; BSR set to: 0
  1887  001622  0100               	movlb	0	; () banked
  1888  001624  4BCC               	infsnz	main@i_556& (0+255),f,b
  1889  001626  2BCD               	incf	(main@i_556+1)& (0+255),f,b
  1890  001628  D7E2               	goto	l7230
  1891  00162A                     l7244:
  1892                           
  1893                           ; BSR set to: 0
  1894                           ;lcd_trials_4bits.c: 488: }
  1895                           ;lcd_trials_4bits.c: 489: ADCResult /= 16;
  1896  00162A  0100               	movlb	0	; () banked
  1897  00162C  3BE3               	swapf	_ADCResult& (0+255),f,b
  1898  00162E  3BE4               	swapf	(_ADCResult+1)& (0+255),f,b
  1899  001630  0E0F               	movlw	15
  1900  001632  17E3               	andwf	_ADCResult& (0+255),f,b
  1901  001634  51E4               	movf	(_ADCResult+1)& (0+255),w,b
  1902  001636  0BF0               	andlw	240
  1903  001638  13E3               	iorwf	_ADCResult& (0+255),f,b
  1904  00163A  0E0F               	movlw	15
  1905  00163C  17E4               	andwf	(_ADCResult+1)& (0+255),f,b
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;lcd_trials_4bits.c: 490: voltage_i = raw_adc_offset_voltage + ((ADCResult*ADC_vRef)/102
      +                          4);
  1909  00163E  0E00               	movlw	0
  1910  001640  6E4E               	movwf	___ftdiv@f2,c
  1911  001642  0E80               	movlw	128
  1912  001644  6E4F               	movwf	___ftdiv@f2+1,c
  1913  001646  0E44               	movlw	68
  1914  001648  6E50               	movwf	___ftdiv@f2+2,c
  1915  00164A  C0F5  F038         	movff	_ADC_vRef,___ftmul@f2
  1916  00164E  C0F6  F039         	movff	_ADC_vRef+1,___ftmul@f2+1
  1917  001652  C0F7  F03A         	movff	_ADC_vRef+2,___ftmul@f2+2
  1918  001656  C0E3  F032         	movff	_ADCResult,___lwtoft@c
  1919  00165A  C0E4  F033         	movff	_ADCResult+1,___lwtoft@c+1
  1920  00165E  ECFA  F01E         	call	___lwtoft	;wreg free
  1921  001662  C032  F035         	movff	?___lwtoft,___ftmul@f1
  1922  001666  C033  F036         	movff	?___lwtoft+1,___ftmul@f1+1
  1923  00166A  C034  F037         	movff	?___lwtoft+2,___ftmul@f1+2
  1924  00166E  EC76  F018         	call	___ftmul	;wreg free
  1925  001672  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  1926  001676  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  1927  00167A  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  1928  00167E  EC67  F017         	call	___ftdiv	;wreg free
  1929  001682  C04B  F0A0         	movff	?___ftdiv,___ftadd@f1
  1930  001686  C04C  F0A1         	movff	?___ftdiv+1,___ftadd@f1+1
  1931  00168A  C04D  F0A2         	movff	?___ftdiv+2,___ftadd@f1+2
  1932  00168E  C0EF  F0A3         	movff	_raw_adc_offset_voltage,___ftadd@f2
  1933  001692  C0F0  F0A4         	movff	_raw_adc_offset_voltage+1,___ftadd@f2+1
  1934  001696  C0F1  F0A5         	movff	_raw_adc_offset_voltage+2,___ftadd@f2+2
  1935  00169A  EC70  F010         	call	___ftadd	;wreg free
  1936  00169E  C0A0  F0D7         	movff	?___ftadd,_voltage_i
  1937  0016A2  C0A1  F0D8         	movff	?___ftadd+1,_voltage_i+1
  1938  0016A6  C0A2  F0D9         	movff	?___ftadd+2,_voltage_i+2
  1939                           
  1940                           ;lcd_trials_4bits.c: 491: sprintf(ResultString_i, "%-.3g", voltage_i);
  1941  0016AA  0E14               	movlw	low _ResultString_i
  1942  0016AC  0100               	movlb	0	; () banked
  1943  0016AE  6FB5               	movwf	sprintf@sp& (0+255),b
  1944  0016B0  0E01               	movlw	high _ResultString_i
  1945  0016B2  0100               	movlb	0	; () banked
  1946  0016B4  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  1947  0016B6  0ECE               	movlw	low STR_50
  1948  0016B8  0100               	movlb	0	; () banked
  1949  0016BA  6FB7               	movwf	sprintf@f& (0+255),b
  1950  0016BC  0EBF               	movlw	high STR_50
  1951  0016BE  0100               	movlb	0	; () banked
  1952  0016C0  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  1953  0016C2  C0D7  F0B9         	movff	_voltage_i,?_sprintf+4
  1954  0016C6  C0D8  F0BA         	movff	_voltage_i+1,?_sprintf+5
  1955  0016CA  C0D9  F0BB         	movff	_voltage_i+2,?_sprintf+6
  1956  0016CE  EC09  F000         	call	_sprintf	;wreg free
  1957                           
  1958                           ;lcd_trials_4bits.c: 492: ADCResult = 0;
  1959  0016D2  0E00               	movlw	0
  1960  0016D4  0100               	movlb	0	; () banked
  1961  0016D6  6FE4               	movwf	(_ADCResult+1)& (0+255),b
  1962  0016D8  0E00               	movlw	0
  1963  0016DA  6FE3               	movwf	_ADCResult& (0+255),b
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;lcd_trials_4bits.c: 495: if (button_enable == 1){
  1967  0016DC  0100               	movlb	0	; () banked
  1968  0016DE  05FA               	decf	_button_enable& (0+255),w,b
  1969  0016E0  A4D8               	btfss	status,2,c
  1970  0016E2  D0F4               	goto	l7318
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;lcd_trials_4bits.c: 496: if (RE3 == 0){
  1974  0016E4  B684               	btfsc	3972,3,c	;volatile
  1975  0016E6  D020               	goto	l7272
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;lcd_trials_4bits.c: 497: button_enable = 0;
  1979  0016E8  0E00               	movlw	0
  1980  0016EA  0100               	movlb	0	; () banked
  1981  0016EC  6FFA               	movwf	_button_enable& (0+255),b
  1982                           
  1983                           ;lcd_trials_4bits.c: 498: button_delay_counter_enable = 1;
  1984  0016EE  0E01               	movlw	1
  1985  0016F0  0100               	movlb	0	; () banked
  1986  0016F2  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  1987                           
  1988                           ;lcd_trials_4bits.c: 499: button_delay_counter = 0;
  1989  0016F4  0E00               	movlw	0
  1990  0016F6  0100               	movlb	0	; () banked
  1991  0016F8  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  1992  0016FA  0E00               	movlw	0
  1993  0016FC  6FDF               	movwf	_button_delay_counter& (0+255),b
  1994                           
  1995                           ; BSR set to: 0
  1996                           ;lcd_trials_4bits.c: 500: set_contrast = ~set_contrast;
  1997  0016FE  0100               	movlb	0	; () banked
  1998  001700  1FE8               	comf	_set_contrast& (0+255),f,b
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;lcd_trials_4bits.c: 501: display_mode = 5;
  2002  001702  0E05               	movlw	5
  2003  001704  6E56               	movwf	_display_mode,c
  2004                           
  2005                           ; BSR set to: 0
  2006                           ;lcd_trials_4bits.c: 502: if (set_contrast == 0) {
  2007  001706  0100               	movlb	0	; () banked
  2008  001708  51E8               	movf	_set_contrast& (0+255),w,b
  2009  00170A  0100               	movlb	0	; () banked
  2010  00170C  A4D8               	btfss	status,2,c
  2011  00170E  D002               	goto	l7266
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;lcd_trials_4bits.c: 503: display_mode = 6;
  2015  001710  0E06               	movlw	6
  2016  001712  6E56               	movwf	_display_mode,c
  2017  001714                     l7266:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;lcd_trials_4bits.c: 504: }
  2021                           ;lcd_trials_4bits.c: 505: clear_display();
  2022  001714  EC98  F01F         	call	_clear_display	;wreg free
  2023                           
  2024                           ;lcd_trials_4bits.c: 506: return_default_display_counter_enable = 1;
  2025  001718  0E01               	movlw	1
  2026  00171A  0100               	movlb	0	; () banked
  2027  00171C  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;lcd_trials_4bits.c: 507: return_default_display_counter = 0;
  2031  00171E  0E00               	movlw	0
  2032  001720  0100               	movlb	0	; () banked
  2033  001722  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2034  001724  0E00               	movlw	0
  2035  001726  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2036  001728                     l7272:
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;lcd_trials_4bits.c: 508: }
  2040                           ;lcd_trials_4bits.c: 509: if (RA5 == 0) {
  2041  001728  AA80               	btfss	3968,5,c	;volatile
  2042  00172A  D065               	goto	l7294
  2043  00172C  D06B               	goto	l318
  2044  00172E                     l7276:
  2045                           
  2046                           ;lcd_trials_4bits.c: 512: button_enable = 0;
  2047  00172E  0E00               	movlw	0
  2048  001730  0100               	movlb	0	; () banked
  2049  001732  6FFA               	movwf	_button_enable& (0+255),b
  2050                           
  2051                           ;lcd_trials_4bits.c: 513: button_delay_counter_enable = 1;
  2052  001734  0E01               	movlw	1
  2053  001736  0100               	movlb	0	; () banked
  2054  001738  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  2055                           
  2056                           ;lcd_trials_4bits.c: 514: button_delay_counter = 0;
  2057  00173A  0E00               	movlw	0
  2058  00173C  0100               	movlb	0	; () banked
  2059  00173E  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2060  001740  0E00               	movlw	0
  2061  001742  6FDF               	movwf	_button_delay_counter& (0+255),b
  2062                           
  2063                           ;lcd_trials_4bits.c: 515: return_default_display_counter_enable = 1;
  2064  001744  0E01               	movlw	1
  2065  001746  0100               	movlb	0	; () banked
  2066  001748  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2067                           
  2068                           ;lcd_trials_4bits.c: 516: return_default_display_counter = 0;
  2069  00174A  0E00               	movlw	0
  2070  00174C  0100               	movlb	0	; () banked
  2071  00174E  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2072  001750  0E00               	movlw	0
  2073  001752  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;lcd_trials_4bits.c: 517: if (display_contrast < (255 - step_size)) {
  2077  001754  C05D  F0C5         	movff	_step_size,??_main
  2078  001758  C05E  F0C6         	movff	_step_size+1,??_main+1
  2079  00175C  0100               	movlb	0	; () banked
  2080  00175E  1FC5               	comf	??_main& (0+255),f,b
  2081  001760  1FC6               	comf	(??_main+1)& (0+255),f,b
  2082  001762  4BC5               	infsnz	??_main& (0+255),f,b
  2083  001764  2BC6               	incf	(??_main+1)& (0+255),f,b
  2084  001766  0EFF               	movlw	255
  2085  001768  0100               	movlb	0	; () banked
  2086  00176A  27C5               	addwf	??_main& (0+255),f,b
  2087  00176C  0E00               	movlw	0
  2088  00176E  23C6               	addwfc	(??_main+1)& (0+255),f,b
  2089  001770  0100               	movlb	0	; () banked
  2090  001772  51C5               	movf	??_main& (0+255),w,b
  2091  001774  5C61               	subwf	_display_contrast,w,c
  2092  001776  0100               	movlb	0	; () banked
  2093  001778  51C6               	movf	(??_main+1)& (0+255),w,b
  2094  00177A  5862               	subwfb	_display_contrast+1,w,c
  2095  00177C  B0D8               	btfsc	status,0,c
  2096  00177E  D006               	goto	l7282
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;lcd_trials_4bits.c: 518: display_contrast = display_contrast + step_size;
  2100  001780  505D               	movf	_step_size,w,c
  2101  001782  2461               	addwf	_display_contrast,w,c
  2102  001784  6E61               	movwf	_display_contrast,c
  2103  001786  505E               	movf	_step_size+1,w,c
  2104  001788  2062               	addwfc	_display_contrast+1,w,c
  2105  00178A  6E62               	movwf	_display_contrast+1,c
  2106  00178C                     l7282:
  2107                           
  2108                           ; BSR set to: 0
  2109                           ;lcd_trials_4bits.c: 522: }
  2110                           ;lcd_trials_4bits.c: 523: send_contrast_spi ();
  2111  00178C  ECAE  F01E         	call	_send_contrast_spi	;wreg free
  2112                           
  2113                           ;lcd_trials_4bits.c: 524: break;
  2114  001790  D039               	goto	l318
  2115  001792                     l7284:
  2116                           
  2117                           ;lcd_trials_4bits.c: 527: button_enable = 0;
  2118  001792  0E00               	movlw	0
  2119  001794  0100               	movlb	0	; () banked
  2120  001796  6FFA               	movwf	_button_enable& (0+255),b
  2121                           
  2122                           ;lcd_trials_4bits.c: 528: button_delay_counter_enable = 1;
  2123  001798  0E01               	movlw	1
  2124  00179A  0100               	movlb	0	; () banked
  2125  00179C  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  2126                           
  2127                           ;lcd_trials_4bits.c: 529: button_delay_counter = 0;
  2128  00179E  0E00               	movlw	0
  2129  0017A0  0100               	movlb	0	; () banked
  2130  0017A2  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2131  0017A4  0E00               	movlw	0
  2132  0017A6  6FDF               	movwf	_button_delay_counter& (0+255),b
  2133                           
  2134                           ;lcd_trials_4bits.c: 530: return_default_display_counter_enable = 1;
  2135  0017A8  0E01               	movlw	1
  2136  0017AA  0100               	movlb	0	; () banked
  2137  0017AC  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2138                           
  2139                           ;lcd_trials_4bits.c: 531: return_default_display_counter = 0;
  2140  0017AE  0E00               	movlw	0
  2141  0017B0  0100               	movlb	0	; () banked
  2142  0017B2  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2143  0017B4  0E00               	movlw	0
  2144  0017B6  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;lcd_trials_4bits.c: 532: if (display_brightness < (255 - step_size)) {
  2148  0017B8  C05D  F0C5         	movff	_step_size,??_main
  2149  0017BC  C05E  F0C6         	movff	_step_size+1,??_main+1
  2150  0017C0  0100               	movlb	0	; () banked
  2151  0017C2  1FC5               	comf	??_main& (0+255),f,b
  2152  0017C4  1FC6               	comf	(??_main+1)& (0+255),f,b
  2153  0017C6  4BC5               	infsnz	??_main& (0+255),f,b
  2154  0017C8  2BC6               	incf	(??_main+1)& (0+255),f,b
  2155  0017CA  0EFF               	movlw	255
  2156  0017CC  0100               	movlb	0	; () banked
  2157  0017CE  27C5               	addwf	??_main& (0+255),f,b
  2158  0017D0  0E00               	movlw	0
  2159  0017D2  23C6               	addwfc	(??_main+1)& (0+255),f,b
  2160  0017D4  0100               	movlb	0	; () banked
  2161  0017D6  51C5               	movf	??_main& (0+255),w,b
  2162  0017D8  5C5F               	subwf	_display_brightness,w,c
  2163  0017DA  0100               	movlb	0	; () banked
  2164  0017DC  51C6               	movf	(??_main+1)& (0+255),w,b
  2165  0017DE  5860               	subwfb	_display_brightness+1,w,c
  2166  0017E0  B0D8               	btfsc	status,0,c
  2167  0017E2  D006               	goto	l7290
  2168                           
  2169                           ; BSR set to: 0
  2170                           ;lcd_trials_4bits.c: 533: display_brightness = display_brightness + step_size;
  2171  0017E4  505D               	movf	_step_size,w,c
  2172  0017E6  245F               	addwf	_display_brightness,w,c
  2173  0017E8  6E5F               	movwf	_display_brightness,c
  2174  0017EA  505E               	movf	_step_size+1,w,c
  2175  0017EC  2060               	addwfc	_display_brightness+1,w,c
  2176  0017EE  6E60               	movwf	_display_brightness+1,c
  2177  0017F0                     l7290:
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;lcd_trials_4bits.c: 537: }
  2181                           ;lcd_trials_4bits.c: 538: send_backlight_spi ();
  2182  0017F0  ECC2  F01E         	call	_send_backlight_spi	;wreg free
  2183                           
  2184                           ;lcd_trials_4bits.c: 543: }
  2185                           ;lcd_trials_4bits.c: 544: }
  2186                           
  2187                           ;lcd_trials_4bits.c: 542: break;
  2188                           
  2189                           ;lcd_trials_4bits.c: 540: }
  2190                           ;lcd_trials_4bits.c: 541: default:{
  2191                           
  2192                           ;lcd_trials_4bits.c: 539: break;
  2193  0017F4  D007               	goto	l318
  2194  0017F6                     l7294:
  2195  0017F6  5056               	movf	_display_mode,w,c
  2196                           
  2197                           ; Switch size 1, requested type "space"
  2198                           ; Number of cases is 2, Range of values is 5 to 6
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte            7     4 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203  0017F8  0A05               	xorlw	5	; case 5
  2204  0017FA  B4D8               	btfsc	status,2,c
  2205  0017FC  D798               	goto	l7276
  2206  0017FE  0A03               	xorlw	3	; case 6
  2207  001800  B4D8               	btfsc	status,2,c
  2208  001802  D7C7               	goto	l7284
  2209  001804                     l318:
  2210                           
  2211                           ;lcd_trials_4bits.c: 545: }
  2212                           ;lcd_trials_4bits.c: 546: if (RA6 == 0) {
  2213  001804  AC80               	btfss	3968,6,c	;volatile
  2214  001806  D05B               	goto	l7316
  2215  001808  D061               	goto	l7318
  2216  00180A                     l7298:
  2217                           
  2218                           ;lcd_trials_4bits.c: 549: button_enable = 0;
  2219  00180A  0E00               	movlw	0
  2220  00180C  0100               	movlb	0	; () banked
  2221  00180E  6FFA               	movwf	_button_enable& (0+255),b
  2222                           
  2223                           ;lcd_trials_4bits.c: 550: button_delay_counter_enable = 1;
  2224  001810  0E01               	movlw	1
  2225  001812  0100               	movlb	0	; () banked
  2226  001814  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  2227                           
  2228                           ;lcd_trials_4bits.c: 551: button_delay_counter = 0;
  2229  001816  0E00               	movlw	0
  2230  001818  0100               	movlb	0	; () banked
  2231  00181A  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2232  00181C  0E00               	movlw	0
  2233  00181E  6FDF               	movwf	_button_delay_counter& (0+255),b
  2234                           
  2235                           ;lcd_trials_4bits.c: 552: return_default_display_counter_enable = 1;
  2236  001820  0E01               	movlw	1
  2237  001822  0100               	movlb	0	; () banked
  2238  001824  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2239                           
  2240                           ;lcd_trials_4bits.c: 553: return_default_display_counter = 0;
  2241  001826  0E00               	movlw	0
  2242  001828  0100               	movlb	0	; () banked
  2243  00182A  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2244  00182C  0E00               	movlw	0
  2245  00182E  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;lcd_trials_4bits.c: 554: if (display_contrast > step_size) {
  2249  001830  5061               	movf	_display_contrast,w,c
  2250  001832  5C5D               	subwf	_step_size,w,c
  2251  001834  5062               	movf	_display_contrast+1,w,c
  2252  001836  585E               	subwfb	_step_size+1,w,c
  2253  001838  B0D8               	btfsc	status,0,c
  2254  00183A  D011               	goto	l7304
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;lcd_trials_4bits.c: 556: if (display_contrast < step_size) {
  2258  00183C  C05D  F0C5         	movff	_step_size,??_main
  2259  001840  C05E  F0C6         	movff	_step_size+1,??_main+1
  2260  001844  0100               	movlb	0	; () banked
  2261  001846  1FC5               	comf	??_main& (0+255),f,b
  2262  001848  1FC6               	comf	(??_main+1)& (0+255),f,b
  2263  00184A  4BC5               	infsnz	??_main& (0+255),f,b
  2264  00184C  2BC6               	incf	(??_main+1)& (0+255),f,b
  2265  00184E  5061               	movf	_display_contrast,w,c
  2266  001850  0100               	movlb	0	; () banked
  2267  001852  25C5               	addwf	??_main& (0+255),w,b
  2268  001854  6E61               	movwf	_display_contrast,c
  2269  001856  5062               	movf	_display_contrast+1,w,c
  2270  001858  0100               	movlb	0	; () banked
  2271  00185A  21C6               	addwfc	(??_main+1)& (0+255),w,b
  2272  00185C  6E62               	movwf	_display_contrast+1,c
  2273  00185E                     l7304:
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;lcd_trials_4bits.c: 558: }
  2277                           ;lcd_trials_4bits.c: 559: }
  2278                           ;lcd_trials_4bits.c: 560: send_contrast_spi ();
  2279  00185E  ECAE  F01E         	call	_send_contrast_spi	;wreg free
  2280                           
  2281                           ;lcd_trials_4bits.c: 561: break;
  2282  001862  D034               	goto	l7318
  2283  001864                     l7306:
  2284                           
  2285                           ;lcd_trials_4bits.c: 564: button_enable = 0;
  2286  001864  0E00               	movlw	0
  2287  001866  0100               	movlb	0	; () banked
  2288  001868  6FFA               	movwf	_button_enable& (0+255),b
  2289                           
  2290                           ;lcd_trials_4bits.c: 565: button_delay_counter_enable = 1;
  2291  00186A  0E01               	movlw	1
  2292  00186C  0100               	movlb	0	; () banked
  2293  00186E  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  2294                           
  2295                           ;lcd_trials_4bits.c: 566: button_delay_counter = 0;
  2296  001870  0E00               	movlw	0
  2297  001872  0100               	movlb	0	; () banked
  2298  001874  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2299  001876  0E00               	movlw	0
  2300  001878  6FDF               	movwf	_button_delay_counter& (0+255),b
  2301                           
  2302                           ;lcd_trials_4bits.c: 567: return_default_display_counter_enable = 1;
  2303  00187A  0E01               	movlw	1
  2304  00187C  0100               	movlb	0	; () banked
  2305  00187E  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2306                           
  2307                           ;lcd_trials_4bits.c: 568: return_default_display_counter = 0;
  2308  001880  0E00               	movlw	0
  2309  001882  0100               	movlb	0	; () banked
  2310  001884  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2311  001886  0E00               	movlw	0
  2312  001888  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;lcd_trials_4bits.c: 569: if (display_brightness > step_size) {
  2316  00188A  505F               	movf	_display_brightness,w,c
  2317  00188C  5C5D               	subwf	_step_size,w,c
  2318  00188E  5060               	movf	_display_brightness+1,w,c
  2319  001890  585E               	subwfb	_step_size+1,w,c
  2320  001892  B0D8               	btfsc	status,0,c
  2321  001894  D011               	goto	l7312
  2322                           
  2323                           ; BSR set to: 0
  2324                           ;lcd_trials_4bits.c: 571: if (display_brightness < step_size) {
  2325  001896  C05D  F0C5         	movff	_step_size,??_main
  2326  00189A  C05E  F0C6         	movff	_step_size+1,??_main+1
  2327  00189E  0100               	movlb	0	; () banked
  2328  0018A0  1FC5               	comf	??_main& (0+255),f,b
  2329  0018A2  1FC6               	comf	(??_main+1)& (0+255),f,b
  2330  0018A4  4BC5               	infsnz	??_main& (0+255),f,b
  2331  0018A6  2BC6               	incf	(??_main+1)& (0+255),f,b
  2332  0018A8  505F               	movf	_display_brightness,w,c
  2333  0018AA  0100               	movlb	0	; () banked
  2334  0018AC  25C5               	addwf	??_main& (0+255),w,b
  2335  0018AE  6E5F               	movwf	_display_brightness,c
  2336  0018B0  5060               	movf	_display_brightness+1,w,c
  2337  0018B2  0100               	movlb	0	; () banked
  2338  0018B4  21C6               	addwfc	(??_main+1)& (0+255),w,b
  2339  0018B6  6E60               	movwf	_display_brightness+1,c
  2340  0018B8                     l7312:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;lcd_trials_4bits.c: 573: }
  2344                           ;lcd_trials_4bits.c: 574: }
  2345                           ;lcd_trials_4bits.c: 575: send_backlight_spi ();
  2346  0018B8  ECC2  F01E         	call	_send_backlight_spi	;wreg free
  2347                           
  2348                           ;lcd_trials_4bits.c: 580: }
  2349                           ;lcd_trials_4bits.c: 581: }
  2350                           
  2351                           ;lcd_trials_4bits.c: 579: break;
  2352                           
  2353                           ;lcd_trials_4bits.c: 577: }
  2354                           ;lcd_trials_4bits.c: 578: default:{
  2355                           
  2356                           ;lcd_trials_4bits.c: 576: break;
  2357  0018BC  D007               	goto	l7318
  2358  0018BE                     l7316:
  2359  0018BE  5056               	movf	_display_mode,w,c
  2360                           
  2361                           ; Switch size 1, requested type "space"
  2362                           ; Number of cases is 2, Range of values is 5 to 6
  2363                           ; switch strategies available:
  2364                           ; Name         Instructions Cycles
  2365                           ; simple_byte            7     4 (average)
  2366                           ;	Chosen strategy is simple_byte
  2367  0018C0  0A05               	xorlw	5	; case 5
  2368  0018C2  B4D8               	btfsc	status,2,c
  2369  0018C4  D7A2               	goto	l7298
  2370  0018C6  0A03               	xorlw	3	; case 6
  2371  0018C8  B4D8               	btfsc	status,2,c
  2372  0018CA  D7CC               	goto	l7306
  2373  0018CC                     l7318:
  2374                           
  2375                           ;lcd_trials_4bits.c: 582: }
  2376                           ;lcd_trials_4bits.c: 583: }
  2377                           ;lcd_trials_4bits.c: 586: if (button_enable == 1){
  2378  0018CC  0100               	movlb	0	; () banked
  2379  0018CE  05FA               	decf	_button_enable& (0+255),w,b
  2380  0018D0  B4D8               	btfsc	status,2,c
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;lcd_trials_4bits.c: 587: if (RA2 == 0){
  2384  0018D2  B480               	btfsc	3968,2,c	;volatile
  2385  0018D4  D021               	goto	l7344
  2386                           
  2387                           ; BSR set to: 0
  2388                           ;lcd_trials_4bits.c: 588: button_enable = 0;
  2389  0018D6  0E00               	movlw	0
  2390  0018D8  0100               	movlb	0	; () banked
  2391  0018DA  6FFA               	movwf	_button_enable& (0+255),b
  2392                           
  2393                           ;lcd_trials_4bits.c: 589: button_delay_counter_enable = 1;
  2394  0018DC  0E01               	movlw	1
  2395  0018DE  0100               	movlb	0	; () banked
  2396  0018E0  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  2397                           
  2398                           ;lcd_trials_4bits.c: 590: button_delay_counter = 0;
  2399  0018E2  0E00               	movlw	0
  2400  0018E4  0100               	movlb	0	; () banked
  2401  0018E6  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2402  0018E8  0E00               	movlw	0
  2403  0018EA  6FDF               	movwf	_button_delay_counter& (0+255),b
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;lcd_trials_4bits.c: 591: if (display_mode < 5) {
  2407  0018EC  0E05               	movlw	5
  2408  0018EE  6056               	cpfslt	_display_mode,c
  2409  0018F0  D006               	goto	l7334
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;lcd_trials_4bits.c: 592: display_mode = display_mode + 1;
  2413  0018F2  2856               	incf	_display_mode,w,c
  2414  0018F4  6E56               	movwf	_display_mode,c
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;lcd_trials_4bits.c: 593: GIE = 1;
  2418  0018F6  8EF2               	bsf	intcon,7,c	;volatile
  2419                           
  2420                           ;lcd_trials_4bits.c: 594: if (display_mode > 4) {
  2421  0018F8  0E04               	movlw	4
  2422  0018FA  6456               	cpfsgt	_display_mode,c
  2423  0018FC  D003               	goto	l7338
  2424  0018FE                     l7334:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;lcd_trials_4bits.c: 600: display_mode = 0;
  2428  0018FE  0E00               	movlw	0
  2429  001900  6E56               	movwf	_display_mode,c
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;lcd_trials_4bits.c: 601: GIE = 0;
  2433  001902  9EF2               	bcf	intcon,7,c	;volatile
  2434  001904                     l7338:
  2435                           
  2436                           ; BSR set to: 0
  2437                           ;lcd_trials_4bits.c: 602: }
  2438                           ;lcd_trials_4bits.c: 603: clear_display();
  2439  001904  EC98  F01F         	call	_clear_display	;wreg free
  2440                           
  2441                           ;lcd_trials_4bits.c: 604: return_default_display_counter_enable = 1;
  2442  001908  0E01               	movlw	1
  2443  00190A  0100               	movlb	0	; () banked
  2444  00190C  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;lcd_trials_4bits.c: 605: return_default_display_counter = 0;
  2448  00190E  0E00               	movlw	0
  2449  001910  0100               	movlb	0	; () banked
  2450  001912  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2451  001914  0E00               	movlw	0
  2452  001916  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2453  001918                     l7344:
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;lcd_trials_4bits.c: 607: }
  2457                           ;lcd_trials_4bits.c: 609: }
  2458                           ;lcd_trials_4bits.c: 613: if (button_delay_counter_enable == 1) {
  2459  001918  0100               	movlb	0	; () banked
  2460  00191A  05E7               	decf	_button_delay_counter_enable& (0+255),w,b
  2461  00191C  A4D8               	btfss	status,2,c
  2462  00191E  D01D               	goto	l7350
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;lcd_trials_4bits.c: 614: button_delay_counter = button_delay_counter +1;
  2466  001920  0E01               	movlw	1
  2467  001922  0100               	movlb	0	; () banked
  2468  001924  25DF               	addwf	_button_delay_counter& (0+255),w,b
  2469  001926  0100               	movlb	0	; () banked
  2470  001928  6FDF               	movwf	_button_delay_counter& (0+255),b
  2471  00192A  0E00               	movlw	0
  2472  00192C  0100               	movlb	0	; () banked
  2473  00192E  21E0               	addwfc	(_button_delay_counter+1)& (0+255),w,b
  2474  001930  0100               	movlb	0	; () banked
  2475  001932  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2476                           
  2477                           ;lcd_trials_4bits.c: 615: if (button_delay_counter > 10){
  2478  001934  0100               	movlb	0	; () banked
  2479  001936  51E0               	movf	(_button_delay_counter+1)& (0+255),w,b
  2480  001938  E105               	bnz	u7520
  2481  00193A  0E0B               	movlw	11
  2482  00193C  0100               	movlb	0	; () banked
  2483  00193E  5DDF               	subwf	_button_delay_counter& (0+255),w,b
  2484  001940  A0D8               	btfss	status,0,c
  2485  001942  D00B               	goto	l7350
  2486  001944                     u7520:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;lcd_trials_4bits.c: 616: button_delay_counter = 0;
  2490  001944  0E00               	movlw	0
  2491  001946  0100               	movlb	0	; () banked
  2492  001948  6FE0               	movwf	(_button_delay_counter+1)& (0+255),b
  2493  00194A  0E00               	movlw	0
  2494  00194C  6FDF               	movwf	_button_delay_counter& (0+255),b
  2495                           
  2496                           ;lcd_trials_4bits.c: 617: button_enable = 1;
  2497  00194E  0E01               	movlw	1
  2498  001950  0100               	movlb	0	; () banked
  2499  001952  6FFA               	movwf	_button_enable& (0+255),b
  2500                           
  2501                           ;lcd_trials_4bits.c: 618: button_delay_counter_enable = 0;
  2502  001954  0E00               	movlw	0
  2503  001956  0100               	movlb	0	; () banked
  2504  001958  6FE7               	movwf	_button_delay_counter_enable& (0+255),b
  2505  00195A                     l7350:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;lcd_trials_4bits.c: 620: }
  2509                           ;lcd_trials_4bits.c: 621: }
  2510                           ;lcd_trials_4bits.c: 622: if (return_default_display_counter_enable == 1) {
  2511  00195A  0100               	movlb	0	; () banked
  2512  00195C  05E6               	decf	_return_default_display_counter_enable& (0+255),w,b
  2513  00195E  A4D8               	btfss	status,2,c
  2514  001960  D06E               	goto	l7422
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;lcd_trials_4bits.c: 623: return_default_display_counter = return_default_display_counte
      +                          r + 1;
  2518  001962  0E01               	movlw	1
  2519  001964  0100               	movlb	0	; () banked
  2520  001966  25DD               	addwf	_return_default_display_counter& (0+255),w,b
  2521  001968  0100               	movlb	0	; () banked
  2522  00196A  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2523  00196C  0E00               	movlw	0
  2524  00196E  0100               	movlb	0	; () banked
  2525  001970  21DE               	addwfc	(_return_default_display_counter+1)& (0+255),w,b
  2526  001972  0100               	movlb	0	; () banked
  2527  001974  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2528                           
  2529                           ;lcd_trials_4bits.c: 624: if (return_default_display_counter > 66) {
  2530  001976  0100               	movlb	0	; () banked
  2531  001978  51DE               	movf	(_return_default_display_counter+1)& (0+255),w,b
  2532  00197A  E105               	bnz	u7540
  2533  00197C  0E43               	movlw	67
  2534  00197E  0100               	movlb	0	; () banked
  2535  001980  5DDD               	subwf	_return_default_display_counter& (0+255),w,b
  2536  001982  A0D8               	btfss	status,0,c
  2537  001984  D016               	goto	l7366
  2538  001986                     u7540:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;lcd_trials_4bits.c: 625: if (step_size_mode_enable == 1) {
  2542  001986  0100               	movlb	0	; () banked
  2543  001988  05F8               	decf	_step_size_mode_enable& (0+255),w,b
  2544  00198A  A4D8               	btfss	status,2,c
  2545  00198C  D005               	goto	l7360
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;lcd_trials_4bits.c: 626: step_size_mode =~step_size_mode;
  2549  00198E  0100               	movlb	0	; () banked
  2550  001990  1FF9               	comf	_step_size_mode& (0+255),f,b
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;lcd_trials_4bits.c: 627: step_size_mode_enable = 0;
  2554  001992  0E00               	movlw	0
  2555  001994  0100               	movlb	0	; () banked
  2556  001996  6FF8               	movwf	_step_size_mode_enable& (0+255),b
  2557  001998                     l7360:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;lcd_trials_4bits.c: 628: }
  2561                           ;lcd_trials_4bits.c: 629: if (step_size_mode == 1) {
  2562  001998  0100               	movlb	0	; () banked
  2563  00199A  05F9               	decf	_step_size_mode& (0+255),w,b
  2564  00199C  A4D8               	btfss	status,2,c
  2565  00199E  D004               	goto	l7364
  2566                           
  2567                           ; BSR set to: 0
  2568                           ;lcd_trials_4bits.c: 630: step_size = 1;
  2569  0019A0  0E00               	movlw	0
  2570  0019A2  6E5E               	movwf	_step_size+1,c
  2571  0019A4  0E01               	movlw	1
  2572  0019A6  D003               	goto	L2
  2573  0019A8                     l7364:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;lcd_trials_4bits.c: 632: step_size = 10;
  2577  0019A8  0E00               	movlw	0
  2578  0019AA  6E5E               	movwf	_step_size+1,c
  2579  0019AC  0E0A               	movlw	10
  2580  0019AE                     L2:
  2581  0019AE  6E5D               	movwf	_step_size,c
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;lcd_trials_4bits.c: 633: }
  2585                           ;lcd_trials_4bits.c: 634: } else {
  2586  0019B0  D003               	goto	l7368
  2587  0019B2                     l7366:
  2588                           
  2589                           ; BSR set to: 0
  2590                           ;lcd_trials_4bits.c: 635: step_size_mode_enable = 1;
  2591  0019B2  0E01               	movlw	1
  2592  0019B4  0100               	movlb	0	; () banked
  2593  0019B6  6FF8               	movwf	_step_size_mode_enable& (0+255),b
  2594  0019B8                     l7368:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;lcd_trials_4bits.c: 636: }
  2598                           ;lcd_trials_4bits.c: 637: if (return_default_display_counter > 120) {
  2599  0019B8  0100               	movlb	0	; () banked
  2600  0019BA  51DE               	movf	(_return_default_display_counter+1)& (0+255),w,b
  2601  0019BC  E105               	bnz	u7570
  2602  0019BE  0E79               	movlw	121
  2603  0019C0  0100               	movlb	0	; () banked
  2604  0019C2  5DDD               	subwf	_return_default_display_counter& (0+255),w,b
  2605  0019C4  A0D8               	btfss	status,0,c
  2606  0019C6  D03B               	goto	l7422
  2607  0019C8                     u7570:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;lcd_trials_4bits.c: 638: return_default_display_counter = 0;
  2611  0019C8  0E00               	movlw	0
  2612  0019CA  0100               	movlb	0	; () banked
  2613  0019CC  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
  2614  0019CE  0E00               	movlw	0
  2615  0019D0  6FDD               	movwf	_return_default_display_counter& (0+255),b
  2616                           
  2617                           ;lcd_trials_4bits.c: 639: return_default_display_counter_enable = 0;
  2618  0019D2  0E00               	movlw	0
  2619  0019D4  0100               	movlb	0	; () banked
  2620  0019D6  6FE6               	movwf	_return_default_display_counter_enable& (0+255),b
  2621                           
  2622                           ;lcd_trials_4bits.c: 640: display_mode = 0;
  2623  0019D8  0E00               	movlw	0
  2624  0019DA  6E56               	movwf	_display_mode,c
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;lcd_trials_4bits.c: 641: clear_display();
  2628  0019DC  EC98  F01F         	call	_clear_display	;wreg free
  2629                           
  2630                           ;lcd_trials_4bits.c: 642: GIE = 0;
  2631  0019E0  9EF2               	bcf	intcon,7,c	;volatile
  2632                           
  2633                           ;lcd_trials_4bits.c: 643: step_size_mode = 1;
  2634  0019E2  0E01               	movlw	1
  2635  0019E4  0100               	movlb	0	; () banked
  2636  0019E6  6FF9               	movwf	_step_size_mode& (0+255),b
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;lcd_trials_4bits.c: 644: step_size = 1;
  2640  0019E8  0E00               	movlw	0
  2641  0019EA  6E5E               	movwf	_step_size+1,c
  2642  0019EC  0E01               	movlw	1
  2643  0019EE  6E5D               	movwf	_step_size,c
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;lcd_trials_4bits.c: 645: step_size_mode_enable = 1;
  2647  0019F0  0E01               	movlw	1
  2648  0019F2  0100               	movlb	0	; () banked
  2649  0019F4  6FF8               	movwf	_step_size_mode_enable& (0+255),b
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;lcd_trials_4bits.c: 646: }
  2653                           ;lcd_trials_4bits.c: 647: }
  2654                           ;lcd_trials_4bits.c: 649: switch (display_mode){
  2655                           
  2656                           ; BSR set to: 0
  2657  0019F6  D023               	goto	l7422
  2658  0019F8                     l7382:
  2659                           
  2660                           ;lcd_trials_4bits.c: 651: {
  2661                           ;lcd_trials_4bits.c: 652: default_display ();
  2662  0019F8  ECC7  F012         	call	_default_display	;wreg free
  2663  0019FC  D01E               	goto	l7418
  2664  0019FE                     l7386:
  2665                           
  2666                           ;lcd_trials_4bits.c: 657: voltage_set_display();
  2667  0019FE  ECD7  F013         	call	_voltage_set_display	;wreg free
  2668                           
  2669                           ;lcd_trials_4bits.c: 658: GIE = 1;
  2670  001A02  8EF2               	bsf	intcon,7,c	;volatile
  2671                           
  2672                           ;lcd_trials_4bits.c: 659: break;
  2673  001A04  D035               	goto	l7424
  2674  001A06                     l7390:
  2675                           
  2676                           ;lcd_trials_4bits.c: 662: {
  2677                           ;lcd_trials_4bits.c: 663: current_protection_set_display();
  2678  001A06  EC49  F016         	call	_current_protection_set_display	;wreg free
  2679                           
  2680                           ;lcd_trials_4bits.c: 664: GIE = 1;
  2681  001A0A  8EF2               	bsf	intcon,7,c	;volatile
  2682                           
  2683                           ;lcd_trials_4bits.c: 665: i_mode = 0;
  2684  001A0C  0E00               	movlw	0
  2685  001A0E  D004               	goto	L3
  2686  001A10                     l7396:
  2687                           
  2688                           ;lcd_trials_4bits.c: 669: {
  2689                           ;lcd_trials_4bits.c: 670: current_limit_set_display();
  2690  001A10  ECD8  F016         	call	_current_limit_set_display	;wreg free
  2691                           
  2692                           ;lcd_trials_4bits.c: 671: GIE = 1;
  2693  001A14  8EF2               	bsf	intcon,7,c	;volatile
  2694                           
  2695                           ;lcd_trials_4bits.c: 672: i_mode = 1;
  2696  001A16  0E01               	movlw	1
  2697  001A18                     L3:
  2698  001A18  0100               	movlb	0	; () banked
  2699  001A1A  6FE5               	movwf	_i_mode& (0+255),b
  2700                           
  2701                           ;lcd_trials_4bits.c: 673: break;
  2702  001A1C  D029               	goto	l7424
  2703  001A1E                     l7402:
  2704                           
  2705                           ;lcd_trials_4bits.c: 676: {
  2706                           ;lcd_trials_4bits.c: 677: current_auto_limit_set_display();
  2707  001A1E  ECEF  F017         	call	_current_auto_limit_set_display	;wreg free
  2708                           
  2709                           ;lcd_trials_4bits.c: 678: i_mode = 2;
  2710  001A22  0E02               	movlw	2
  2711  001A24  0100               	movlb	0	; () banked
  2712  001A26  6FE5               	movwf	_i_mode& (0+255),b
  2713  001A28  D008               	goto	l7418
  2714  001A2A                     l7408:
  2715                           
  2716                           ;lcd_trials_4bits.c: 683: {
  2717                           ;lcd_trials_4bits.c: 684: contrast_display();
  2718  001A2A  ECF0  F018         	call	_contrast_display	;wreg free
  2719  001A2E  D005               	goto	l7418
  2720  001A30                     l7412:
  2721                           
  2722                           ;lcd_trials_4bits.c: 689: {
  2723                           ;lcd_trials_4bits.c: 690: brightness_display();
  2724  001A30  EC68  F019         	call	_brightness_display	;wreg free
  2725  001A34  D002               	goto	l7418
  2726  001A36                     l7416:
  2727                           
  2728                           ;lcd_trials_4bits.c: 695: {
  2729                           ;lcd_trials_4bits.c: 696: protection_display();
  2730  001A36  EC99  F01E         	call	_protection_display	;wreg free
  2731  001A3A                     l7418:
  2732                           
  2733                           ;lcd_trials_4bits.c: 697: GIE = 0;
  2734  001A3A  9EF2               	bcf	intcon,7,c	;volatile
  2735                           
  2736                           ;lcd_trials_4bits.c: 703: }
  2737                           ;lcd_trials_4bits.c: 704: }
  2738                           
  2739                           ;lcd_trials_4bits.c: 701: {
  2740                           ;lcd_trials_4bits.c: 702: break;
  2741                           
  2742                           ;lcd_trials_4bits.c: 699: }
  2743                           ;lcd_trials_4bits.c: 700: default:
  2744                           
  2745                           ;lcd_trials_4bits.c: 698: break;
  2746  001A3C  D019               	goto	l7424
  2747  001A3E                     l7422:
  2748  001A3E  5056               	movf	_display_mode,w,c
  2749                           
  2750                           ; Switch size 1, requested type "space"
  2751                           ; Number of cases is 8, Range of values is 0 to 7
  2752                           ; switch strategies available:
  2753                           ; Name         Instructions Cycles
  2754                           ; simple_byte           25    13 (average)
  2755                           ;	Chosen strategy is simple_byte
  2756  001A40  0A00               	xorlw	0	; case 0
  2757  001A42  B4D8               	btfsc	status,2,c
  2758  001A44  D7D9               	goto	l7382
  2759  001A46  0A01               	xorlw	1	; case 1
  2760  001A48  B4D8               	btfsc	status,2,c
  2761  001A4A  D7D9               	goto	l7386
  2762  001A4C  0A03               	xorlw	3	; case 2
  2763  001A4E  B4D8               	btfsc	status,2,c
  2764  001A50  D7DA               	goto	l7390
  2765  001A52  0A01               	xorlw	1	; case 3
  2766  001A54  B4D8               	btfsc	status,2,c
  2767  001A56  D7DC               	goto	l7396
  2768  001A58  0A07               	xorlw	7	; case 4
  2769  001A5A  B4D8               	btfsc	status,2,c
  2770  001A5C  D7E0               	goto	l7402
  2771  001A5E  0A01               	xorlw	1	; case 5
  2772  001A60  B4D8               	btfsc	status,2,c
  2773  001A62  D7E3               	goto	l7408
  2774  001A64  0A03               	xorlw	3	; case 6
  2775  001A66  B4D8               	btfsc	status,2,c
  2776  001A68  D7E3               	goto	l7412
  2777  001A6A  0A01               	xorlw	1	; case 7
  2778  001A6C  B4D8               	btfsc	status,2,c
  2779  001A6E  D7E3               	goto	l7416
  2780  001A70                     l7424:
  2781                           
  2782                           ;lcd_trials_4bits.c: 709: _delay((unsigned long)((1)*(8000000/4000.0)));
  2783  001A70  0E03               	movlw	3
  2784  001A72  0100               	movlb	0	; () banked
  2785  001A74  6FC5               	movwf	??_main& (0+255),b
  2786  001A76  0E97               	movlw	151
  2787  001A78                     u7587:
  2788  001A78  2EE8               	decfsz	wreg,f,c
  2789  001A7A  D7FE               	bra	u7587
  2790  001A7C  2FC5               	decfsz	??_main& (0+255),f,b
  2791  001A7E  D7FC               	bra	u7587
  2792  001A80  D000               	nop2	
  2793  001A82  D515               	goto	l7198
  2794  001A84                     __end_of_main:
  2795                           	opt stack 0
  2796                           tblptru	equ	0xFF8
  2797                           tblptrh	equ	0xFF7
  2798                           tblptrl	equ	0xFF6
  2799                           tablat	equ	0xFF5
  2800                           intcon	equ	0xFF2
  2801                           intcon2	equ	0xFF1
  2802                           postinc0	equ	0xFEE
  2803                           wreg	equ	0xFE8
  2804                           postdec1	equ	0xFE5
  2805                           fsr1l	equ	0xFE1
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _voltage_set_display *****************
  2809 ;; Defined at:
  2810 ;;		line 223 in file "lcd_trials_4bits.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:        3 bytes
  2829 ;; Hardware stack levels used:    1
  2830 ;; Hardware stack levels required when called:    8
  2831 ;; This function calls:
  2832 ;;		_SetDDRamAddr
  2833 ;;		___ftdiv
  2834 ;;		___ftmul
  2835 ;;		___lwtoft
  2836 ;;		_putrsXLCD
  2837 ;;		_sprintf
  2838 ;; This function is called by:
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text1
  2844  0027AE                     __ptext1:
  2845                           	opt stack 0
  2846  0027AE                     _voltage_set_display:
  2847                           	opt stack 22
  2848                           
  2849                           ;lcd_trials_4bits.c: 225: voltage_set_u = ((DAC_u*DAC_vRef)/4096)*6;
  2850                           
  2851                           ;incstack = 0
  2852  0027AE  0E00               	movlw	0
  2853  0027B0  6E4E               	movwf	___ftdiv@f2,c
  2854  0027B2  0E80               	movlw	128
  2855  0027B4  6E4F               	movwf	___ftdiv@f2+1,c
  2856  0027B6  0E45               	movlw	69
  2857  0027B8  6E50               	movwf	___ftdiv@f2+2,c
  2858  0027BA  C0F2  F038         	movff	_DAC_vRef,___ftmul@f2
  2859  0027BE  C0F3  F039         	movff	_DAC_vRef+1,___ftmul@f2+1
  2860  0027C2  C0F4  F03A         	movff	_DAC_vRef+2,___ftmul@f2+2
  2861  0027C6  C063  F032         	movff	_DAC_u,___lwtoft@c
  2862  0027CA  C064  F033         	movff	_DAC_u+1,___lwtoft@c+1
  2863  0027CE  ECFA  F01E         	call	___lwtoft	;wreg free
  2864  0027D2  C032  F035         	movff	?___lwtoft,___ftmul@f1
  2865  0027D6  C033  F036         	movff	?___lwtoft+1,___ftmul@f1+1
  2866  0027DA  C034  F037         	movff	?___lwtoft+2,___ftmul@f1+2
  2867  0027DE  EC76  F018         	call	___ftmul	;wreg free
  2868  0027E2  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  2869  0027E6  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  2870  0027EA  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  2871  0027EE  EC67  F017         	call	___ftdiv	;wreg free
  2872  0027F2  C04B  F0C2         	movff	?___ftdiv,_voltage_set_display$2280
  2873  0027F6  C04C  F0C3         	movff	?___ftdiv+1,_voltage_set_display$2280+1
  2874  0027FA  C04D  F0C4         	movff	?___ftdiv+2,_voltage_set_display$2280+2
  2875                           
  2876                           ;lcd_trials_4bits.c: 225: voltage_set_u = ((DAC_u*DAC_vRef)/4096)*6;
  2877  0027FE  C0C2  F035         	movff	_voltage_set_display$2280,___ftmul@f1
  2878  002802  C0C3  F036         	movff	_voltage_set_display$2280+1,___ftmul@f1+1
  2879  002806  C0C4  F037         	movff	_voltage_set_display$2280+2,___ftmul@f1+2
  2880  00280A  0E00               	movlw	0
  2881  00280C  6E38               	movwf	___ftmul@f2,c
  2882  00280E  0EC0               	movlw	192
  2883  002810  6E39               	movwf	___ftmul@f2+1,c
  2884  002812  0E40               	movlw	64
  2885  002814  6E3A               	movwf	___ftmul@f2+2,c
  2886  002816  EC76  F018         	call	___ftmul	;wreg free
  2887  00281A  C035  F0D4         	movff	?___ftmul,_voltage_set_u
  2888  00281E  C036  F0D5         	movff	?___ftmul+1,_voltage_set_u+1
  2889  002822  C037  F0D6         	movff	?___ftmul+2,_voltage_set_u+2
  2890                           
  2891                           ;lcd_trials_4bits.c: 226: sprintf(ResultString_set_u, "%-.2g", voltage_set_u);
  2892  002826  0E0A               	movlw	low _ResultString_set_u
  2893  002828  0100               	movlb	0	; () banked
  2894  00282A  6FB5               	movwf	sprintf@sp& (0+255),b
  2895  00282C  0E01               	movlw	high _ResultString_set_u
  2896  00282E  0100               	movlb	0	; () banked
  2897  002830  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  2898  002832  0EC8               	movlw	low STR_6
  2899  002834  0100               	movlb	0	; () banked
  2900  002836  6FB7               	movwf	sprintf@f& (0+255),b
  2901  002838  0EBF               	movlw	high STR_6
  2902  00283A  0100               	movlb	0	; () banked
  2903  00283C  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  2904  00283E  C0D4  F0B9         	movff	_voltage_set_u,?_sprintf+4
  2905  002842  C0D5  F0BA         	movff	_voltage_set_u+1,?_sprintf+5
  2906  002846  C0D6  F0BB         	movff	_voltage_set_u+2,?_sprintf+6
  2907  00284A  EC09  F000         	call	_sprintf	;wreg free
  2908                           
  2909                           ;lcd_trials_4bits.c: 227: SetDDRamAddr (0x00);
  2910  00284E  0E00               	movlw	0
  2911  002850  EC2F  F01D         	call	_SetDDRamAddr
  2912                           
  2913                           ;lcd_trials_4bits.c: 228: putrsXLCD("Uset=");
  2914  002854  0EB6               	movlw	low STR_27
  2915  002856  6E18               	movwf	putrsXLCD@buffer,c
  2916  002858  0EBF               	movlw	high STR_27
  2917  00285A  6E19               	movwf	putrsXLCD@buffer+1,c
  2918  00285C  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2919                           
  2920                           ;lcd_trials_4bits.c: 231: putrsXLCD(ResultString_set_u);
  2921  002860  0E0A               	movlw	low _ResultString_set_u
  2922  002862  6E18               	movwf	putrsXLCD@buffer,c
  2923  002864  0E01               	movlw	high _ResultString_set_u
  2924  002866  6E19               	movwf	putrsXLCD@buffer+1,c
  2925  002868  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2926                           
  2927                           ;lcd_trials_4bits.c: 232: putrsXLCD("V        ");
  2928  00286C  0E8E               	movlw	low STR_28
  2929  00286E  6E18               	movwf	putrsXLCD@buffer,c
  2930  002870  0EBF               	movlw	high STR_28
  2931  002872  6E19               	movwf	putrsXLCD@buffer+1,c
  2932  002874  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2933                           
  2934                           ;lcd_trials_4bits.c: 233: SetDDRamAddr (0x40);
  2935  002878  0E40               	movlw	64
  2936  00287A  EC2F  F01D         	call	_SetDDRamAddr
  2937                           
  2938                           ;lcd_trials_4bits.c: 234: putrsXLCD("Uo=");
  2939  00287E  0EED               	movlw	low STR_1
  2940  002880  6E18               	movwf	putrsXLCD@buffer,c
  2941  002882  0EBF               	movlw	high STR_1
  2942  002884  6E19               	movwf	putrsXLCD@buffer+1,c
  2943  002886  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2944                           
  2945                           ;lcd_trials_4bits.c: 235: sprintf(ResultString_u, "%-.2g", voltage_u);
  2946  00288A  0E1E               	movlw	low _ResultString_u
  2947  00288C  0100               	movlb	0	; () banked
  2948  00288E  6FB5               	movwf	sprintf@sp& (0+255),b
  2949  002890  0E01               	movlw	high _ResultString_u
  2950  002892  0100               	movlb	0	; () banked
  2951  002894  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  2952  002896  0EC8               	movlw	low STR_6
  2953  002898  0100               	movlb	0	; () banked
  2954  00289A  6FB7               	movwf	sprintf@f& (0+255),b
  2955  00289C  0EBF               	movlw	high STR_6
  2956  00289E  0100               	movlb	0	; () banked
  2957  0028A0  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  2958  0028A2  C0DA  F0B9         	movff	_voltage_u,?_sprintf+4
  2959  0028A6  C0DB  F0BA         	movff	_voltage_u+1,?_sprintf+5
  2960  0028AA  C0DC  F0BB         	movff	_voltage_u+2,?_sprintf+6
  2961  0028AE  EC09  F000         	call	_sprintf	;wreg free
  2962                           
  2963                           ;lcd_trials_4bits.c: 236: putrsXLCD(ResultString_u);
  2964  0028B2  0E1E               	movlw	low _ResultString_u
  2965  0028B4  6E18               	movwf	putrsXLCD@buffer,c
  2966  0028B6  0E01               	movlw	high _ResultString_u
  2967  0028B8  6E19               	movwf	putrsXLCD@buffer+1,c
  2968  0028BA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2969                           
  2970                           ;lcd_trials_4bits.c: 237: putrsXLCD("V        ");
  2971  0028BE  0E8E               	movlw	low STR_28
  2972  0028C0  6E18               	movwf	putrsXLCD@buffer,c
  2973  0028C2  0EBF               	movlw	high STR_28
  2974  0028C4  6E19               	movwf	putrsXLCD@buffer+1,c
  2975  0028C6  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2976                           
  2977                           ;lcd_trials_4bits.c: 238: SetDDRamAddr (0x4B);
  2978  0028CA  0E4B               	movlw	75
  2979  0028CC  EC2F  F01D         	call	_SetDDRamAddr
  2980                           
  2981                           ;lcd_trials_4bits.c: 239: if (step_size_mode == 1) {
  2982  0028D0  0100               	movlb	0	; () banked
  2983  0028D2  05F9               	decf	_step_size_mode& (0+255),w,b
  2984  0028D4  A4D8               	btfss	status,2,c
  2985  0028D6  D007               	goto	l7090
  2986                           
  2987                           ; BSR set to: 0
  2988                           ;lcd_trials_4bits.c: 240: putrsXLCD(" FINE");
  2989  0028D8  0EBC               	movlw	low STR_32
  2990  0028DA  6E18               	movwf	putrsXLCD@buffer,c
  2991  0028DC  0EBF               	movlw	high STR_32
  2992  0028DE  6E19               	movwf	putrsXLCD@buffer+1,c
  2993  0028E0  EC7E  F01C         	call	_putrsXLCD	;wreg free
  2994                           
  2995                           ;lcd_trials_4bits.c: 241: } else{
  2996  0028E4  0012               	return	
  2997  0028E6                     l7090:
  2998                           
  2999                           ;lcd_trials_4bits.c: 242: putrsXLCD("ROUGH");
  3000  0028E6  0EC2               	movlw	low STR_33
  3001  0028E8  6E18               	movwf	putrsXLCD@buffer,c
  3002  0028EA  0EBF               	movlw	high STR_33
  3003  0028EC  6E19               	movwf	putrsXLCD@buffer+1,c
  3004  0028EE  EC7E  F01C         	call	_putrsXLCD	;wreg free
  3005  0028F2  0012               	return	
  3006  0028F4                     __end_of_voltage_set_display:
  3007                           	opt stack 0
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           intcon	equ	0xFF2
  3013                           intcon2	equ	0xFF1
  3014                           postinc0	equ	0xFEE
  3015                           wreg	equ	0xFE8
  3016                           postdec1	equ	0xFE5
  3017                           fsr1l	equ	0xFE1
  3018                           status	equ	0xFD8
  3019                           
  3020 ;; *************** function _send_dac_u_spi *****************
  3021 ;; Defined at:
  3022 ;;		line 110 in file "ADC_user_functions.h"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used:    1
  3042 ;; Hardware stack levels required when called:    6
  3043 ;; This function calls:
  3044 ;;		_WriteSPI
  3045 ;;		_init_dac_SPI
  3046 ;; This function is called by:
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text2
  3052  003C1E                     __ptext2:
  3053                           	opt stack 0
  3054  003C1E                     _send_dac_u_spi:
  3055                           	opt stack 24
  3056                           
  3057                           ;ADC_user_functions.h: 111: dac_u_low = DAC_u;
  3058                           
  3059                           ;incstack = 0
  3060  003C1E  C063  F059         	movff	_DAC_u,_dac_u_low
  3061                           
  3062                           ;ADC_user_functions.h: 112: cmd_dac_u_high = (DAC_u >> 8) & 0b00001111;
  3063  003C22  5064               	movf	_DAC_u+1,w,c
  3064  003C24  0B0F               	andlw	15
  3065  003C26  6E5A               	movwf	_cmd_dac_u_high,c
  3066                           
  3067                           ;ADC_user_functions.h: 113: cmd_dac_u_high = cmd_dac_u_high | cmd_dac;
  3068  003C28  505A               	movf	_cmd_dac_u_high,w,c
  3069  003C2A  1067               	iorwf	_cmd_dac,w,c
  3070  003C2C  6E5A               	movwf	_cmd_dac_u_high,c
  3071                           
  3072                           ;ADC_user_functions.h: 114: init_dac_SPI();
  3073  003C2E  EC38  F01F         	call	_init_dac_SPI	;wreg free
  3074                           
  3075                           ;ADC_user_functions.h: 115: LATBbits.LATB4 = 0;
  3076  003C32  988A               	bcf	3978,4,c	;volatile
  3077                           
  3078                           ;ADC_user_functions.h: 116: __nop(); __nop(); __nop();
  3079  003C34  F000               	nop	
  3080  003C36  F000               	nop	
  3081  003C38  F000               	nop	
  3082                           
  3083                           ;ADC_user_functions.h: 117: WriteSPI(cmd_dac_u_high);
  3084  003C3A  505A               	movf	_cmd_dac_u_high,w,c
  3085  003C3C  EC61  F01F         	call	_WriteSPI
  3086                           
  3087                           ;ADC_user_functions.h: 118: WriteSPI(dac_u_low);
  3088  003C40  5059               	movf	_dac_u_low,w,c
  3089  003C42  EC61  F01F         	call	_WriteSPI
  3090                           
  3091                           ;ADC_user_functions.h: 119: LATBbits.LATB4 = 1;
  3092  003C46  888A               	bsf	3978,4,c	;volatile
  3093                           
  3094                           ;ADC_user_functions.h: 120: (SSPCON1 &=0xDF);
  3095  003C48  9AC6               	bcf	4038,5,c	;volatile
  3096  003C4A  0012               	return		;funcret
  3097  003C4C                     __end_of_send_dac_u_spi:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           intcon	equ	0xFF2
  3104                           intcon2	equ	0xFF1
  3105                           postinc0	equ	0xFEE
  3106                           wreg	equ	0xFE8
  3107                           postdec1	equ	0xFE5
  3108                           fsr1l	equ	0xFE1
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _send_contrast_spi *****************
  3112 ;; Defined at:
  3113 ;;		line 76 in file "ADC_user_functions.h"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    6
  3134 ;; This function calls:
  3135 ;;		_WriteSPI
  3136 ;;		_init_dig_pot_SPI
  3137 ;; This function is called by:
  3138 ;;		_main
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text3
  3143  003D5C                     __ptext3:
  3144                           	opt stack 0
  3145  003D5C                     _send_contrast_spi:
  3146                           	opt stack 24
  3147                           
  3148                           ;ADC_user_functions.h: 78: init_dig_pot_SPI ();
  3149                           
  3150                           ;incstack = 0
  3151  003D5C  EC2A  F01F         	call	_init_dig_pot_SPI	;wreg free
  3152                           
  3153                           ;ADC_user_functions.h: 79: cmd_dig_pot = 0b00010001;
  3154  003D60  0E11               	movlw	17
  3155  003D62  6E58               	movwf	_cmd_dig_pot,c
  3156                           
  3157                           ;ADC_user_functions.h: 80: send_byte = 256 - display_contrast;
  3158  003D64  5061               	movf	_display_contrast,w,c
  3159  003D66  0800               	sublw	0
  3160  003D68  6E57               	movwf	_send_byte,c
  3161                           
  3162                           ;ADC_user_functions.h: 81: LATBbits.LATB6 = 0;
  3163  003D6A  9C8A               	bcf	3978,6,c	;volatile
  3164                           
  3165                           ;ADC_user_functions.h: 82: __nop(); __nop(); __nop();
  3166  003D6C  F000               	nop	
  3167  003D6E  F000               	nop	
  3168  003D70  F000               	nop	
  3169                           
  3170                           ;ADC_user_functions.h: 83: WriteSPI(cmd_dig_pot);
  3171  003D72  5058               	movf	_cmd_dig_pot,w,c
  3172  003D74  EC61  F01F         	call	_WriteSPI
  3173                           
  3174                           ;ADC_user_functions.h: 84: WriteSPI(send_byte);
  3175  003D78  5057               	movf	_send_byte,w,c
  3176  003D7A  EC61  F01F         	call	_WriteSPI
  3177                           
  3178                           ;ADC_user_functions.h: 85: LATBbits.LATB6 = 1;
  3179  003D7E  8C8A               	bsf	3978,6,c	;volatile
  3180                           
  3181                           ;ADC_user_functions.h: 86: (SSPCON1 &=0xDF);
  3182  003D80  9AC6               	bcf	4038,5,c	;volatile
  3183  003D82  0012               	return		;funcret
  3184  003D84                     __end_of_send_contrast_spi:
  3185                           	opt stack 0
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           intcon	equ	0xFF2
  3191                           intcon2	equ	0xFF1
  3192                           postinc0	equ	0xFEE
  3193                           wreg	equ	0xFE8
  3194                           postdec1	equ	0xFE5
  3195                           fsr1l	equ	0xFE1
  3196                           status	equ	0xFD8
  3197                           
  3198 ;; *************** function _send_backlight_spi *****************
  3199 ;; Defined at:
  3200 ;;		line 89 in file "ADC_user_functions.h"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used:    1
  3220 ;; Hardware stack levels required when called:    6
  3221 ;; This function calls:
  3222 ;;		_WriteSPI
  3223 ;;		_init_dig_pot_SPI
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text4
  3230  003D84                     __ptext4:
  3231                           	opt stack 0
  3232  003D84                     _send_backlight_spi:
  3233                           	opt stack 24
  3234                           
  3235                           ;ADC_user_functions.h: 90: init_dig_pot_SPI ();
  3236                           
  3237                           ;incstack = 0
  3238  003D84  EC2A  F01F         	call	_init_dig_pot_SPI	;wreg free
  3239                           
  3240                           ;ADC_user_functions.h: 91: cmd_dig_pot = 0b00010010;
  3241  003D88  0E12               	movlw	18
  3242  003D8A  6E58               	movwf	_cmd_dig_pot,c
  3243                           
  3244                           ;ADC_user_functions.h: 92: send_byte = display_brightness;
  3245  003D8C  C05F  F057         	movff	_display_brightness,_send_byte
  3246                           
  3247                           ;ADC_user_functions.h: 93: LATBbits.LATB6 = 0;
  3248  003D90  9C8A               	bcf	3978,6,c	;volatile
  3249                           
  3250                           ;ADC_user_functions.h: 94: __nop(); __nop(); __nop();
  3251  003D92  F000               	nop	
  3252  003D94  F000               	nop	
  3253  003D96  F000               	nop	
  3254                           
  3255                           ;ADC_user_functions.h: 95: WriteSPI(cmd_dig_pot);
  3256  003D98  5058               	movf	_cmd_dig_pot,w,c
  3257  003D9A  EC61  F01F         	call	_WriteSPI
  3258                           
  3259                           ;ADC_user_functions.h: 96: WriteSPI(send_byte);
  3260  003D9E  5057               	movf	_send_byte,w,c
  3261  003DA0  EC61  F01F         	call	_WriteSPI
  3262                           
  3263                           ;ADC_user_functions.h: 97: LATBbits.LATB6 = 1;
  3264  003DA4  8C8A               	bsf	3978,6,c	;volatile
  3265                           
  3266                           ;ADC_user_functions.h: 98: (SSPCON1 &=0xDF);
  3267  003DA6  9AC6               	bcf	4038,5,c	;volatile
  3268  003DA8  0012               	return		;funcret
  3269  003DAA                     __end_of_send_backlight_spi:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           intcon	equ	0xFF2
  3276                           intcon2	equ	0xFF1
  3277                           postinc0	equ	0xFEE
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           fsr1l	equ	0xFE1
  3281                           status	equ	0xFD8
  3282                           
  3283 ;; *************** function _init_dig_pot_SPI *****************
  3284 ;; Defined at:
  3285 ;;		line 67 in file "ADC_user_functions.h"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  config_smp_p    1   27[COMRAM] unsigned char 
  3290 ;;  config_bus_m    1   26[COMRAM] unsigned char 
  3291 ;;  config_sync_    1   25[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;Total ram usage:        3 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    5
  3308 ;; This function calls:
  3309 ;;		_OpenSPI
  3310 ;; This function is called by:
  3311 ;;		_send_contrast_spi
  3312 ;;		_send_backlight_spi
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text5
  3317  003E54                     __ptext5:
  3318                           	opt stack 0
  3319  003E54                     _init_dig_pot_SPI:
  3320                           	opt stack 24
  3321                           
  3322                           ;ADC_user_functions.h: 69: unsigned char config_sync_mode = 0b00000010;
  3323                           
  3324                           ;incstack = 0
  3325  003E54  0E02               	movlw	2
  3326  003E56  6E1A               	movwf	init_dig_pot_SPI@config_sync_mode,c
  3327                           
  3328                           ;ADC_user_functions.h: 70: unsigned char config_bus_mode = 0b00000010;
  3329  003E58  0E02               	movlw	2
  3330  003E5A  6E1B               	movwf	init_dig_pot_SPI@config_bus_mode,c
  3331                           
  3332                           ;ADC_user_functions.h: 71: unsigned char config_smp_phase = 0b00000000;
  3333  003E5C  0E00               	movlw	0
  3334  003E5E  6E1C               	movwf	init_dig_pot_SPI@config_smp_phase,c
  3335                           
  3336                           ;ADC_user_functions.h: 73: OpenSPI( config_sync_mode, config_bus_mode, config_smp_phase)
      +                          ;
  3337  003E60  C01B  F017         	movff	init_dig_pot_SPI@config_bus_mode,OpenSPI@bus_mode
  3338  003E64  C01C  F018         	movff	init_dig_pot_SPI@config_smp_phase,OpenSPI@smp_phase
  3339  003E68  501A               	movf	init_dig_pot_SPI@config_sync_mode,w,c
  3340  003E6A  ECAC  F01C         	call	_OpenSPI
  3341  003E6E  0012               	return		;funcret
  3342  003E70                     __end_of_init_dig_pot_SPI:
  3343                           	opt stack 0
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           intcon	equ	0xFF2
  3349                           intcon2	equ	0xFF1
  3350                           postinc0	equ	0xFEE
  3351                           wreg	equ	0xFE8
  3352                           postdec1	equ	0xFE5
  3353                           fsr1l	equ	0xFE1
  3354                           status	equ	0xFD8
  3355                           
  3356 ;; *************** function _protection_display *****************
  3357 ;; Defined at:
  3358 ;;		line 302 in file "lcd_trials_4bits.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:    7
  3379 ;; This function calls:
  3380 ;;		_SetDDRamAddr
  3381 ;;		_clear_display
  3382 ;;		_putrsXLCD
  3383 ;; This function is called by:
  3384 ;;		_main
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text6
  3389  003D32                     __ptext6:
  3390                           	opt stack 0
  3391  003D32                     _protection_display:
  3392                           	opt stack 23
  3393                           
  3394                           ;lcd_trials_4bits.c: 304: clear_display();
  3395                           
  3396                           ;incstack = 0
  3397  003D32  EC98  F01F         	call	_clear_display	;wreg free
  3398                           
  3399                           ;lcd_trials_4bits.c: 305: SetDDRamAddr (0x00);
  3400  003D36  0E00               	movlw	0
  3401  003D38  EC2F  F01D         	call	_SetDDRamAddr
  3402                           
  3403                           ;lcd_trials_4bits.c: 306: putrsXLCD("!! PROTECTION !!");
  3404  003D3C  0E21               	movlw	low STR_54
  3405  003D3E  6E18               	movwf	putrsXLCD@buffer,c
  3406  003D40  0EBF               	movlw	high STR_54
  3407  003D42  6E19               	movwf	putrsXLCD@buffer+1,c
  3408  003D44  EC7E  F01C         	call	_putrsXLCD	;wreg free
  3409                           
  3410                           ;lcd_trials_4bits.c: 307: SetDDRamAddr (0x40);
  3411  003D48  0E40               	movlw	64
  3412  003D4A  EC2F  F01D         	call	_SetDDRamAddr
  3413                           
  3414                           ;lcd_trials_4bits.c: 308: putrsXLCD("!CHECK SETTINGS!");
  3415  003D4E  0E32               	movlw	low STR_55
  3416  003D50  6E18               	movwf	putrsXLCD@buffer,c
  3417  003D52  0EBF               	movlw	high STR_55
  3418  003D54  6E19               	movwf	putrsXLCD@buffer+1,c
  3419  003D56  EC7E  F01C         	call	_putrsXLCD	;wreg free
  3420  003D5A  0012               	return		;funcret
  3421  003D5C                     __end_of_protection_display:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           intcon	equ	0xFF2
  3428                           intcon2	equ	0xFF1
  3429                           postinc0	equ	0xFEE
  3430                           wreg	equ	0xFE8
  3431                           postdec1	equ	0xFE5
  3432                           fsr1l	equ	0xFE1
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function _clear_display *****************
  3436 ;; Defined at:
  3437 ;;		line 44 in file "LCD_user_functions.h"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    6
  3458 ;; This function calls:
  3459 ;;		_BusyXLCD
  3460 ;;		_WriteCmdXLCD
  3461 ;; This function is called by:
  3462 ;;		_protection_display
  3463 ;;		_main
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text7
  3468  003F30                     __ptext7:
  3469                           	opt stack 0
  3470  003F30                     _clear_display:
  3471                           	opt stack 23
  3472  003F30                     l4502:
  3473  003F30  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3474  003F34  0900               	iorlw	0
  3475  003F36  A4D8               	btfss	status,2,c
  3476  003F38  D7FB               	goto	l4502
  3477                           
  3478                           ;LCD_user_functions.h: 46: WriteCmdXLCD(0x01);
  3479  003F3A  0E01               	movlw	1
  3480  003F3C  EC7E  F01D         	call	_WriteCmdXLCD
  3481  003F40  0012               	return		;funcret
  3482  003F42                     __end_of_clear_display:
  3483                           	opt stack 0
  3484                           tblptru	equ	0xFF8
  3485                           tblptrh	equ	0xFF7
  3486                           tblptrl	equ	0xFF6
  3487                           tablat	equ	0xFF5
  3488                           intcon	equ	0xFF2
  3489                           intcon2	equ	0xFF1
  3490                           postinc0	equ	0xFEE
  3491                           wreg	equ	0xFE8
  3492                           postdec1	equ	0xFE5
  3493                           fsr1l	equ	0xFE1
  3494                           status	equ	0xFD8
  3495                           
  3496 ;; *************** function _init_XLCD *****************
  3497 ;; Defined at:
  3498 ;;		line 29 in file "LCD_user_functions.h"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;		None
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      void 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;Total ram usage:        0 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    7
  3519 ;; This function calls:
  3520 ;;		_BusyXLCD
  3521 ;;		_OpenXLCD
  3522 ;;		_WriteCmdXLCD
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text8
  3529  003BB2                     __ptext8:
  3530                           	opt stack 0
  3531  003BB2                     _init_XLCD:
  3532                           	opt stack 23
  3533                           
  3534                           ;LCD_user_functions.h: 30: OpenXLCD(0b00101100 & 0b00111000);
  3535                           
  3536                           ;incstack = 0
  3537  003BB2  0E28               	movlw	40
  3538  003BB4  EC9B  F01A         	call	_OpenXLCD
  3539  003BB8                     l5094:
  3540  003BB8  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3541  003BBC  0900               	iorlw	0
  3542  003BBE  A4D8               	btfss	status,2,c
  3543  003BC0  D7FB               	goto	l5094
  3544                           
  3545                           ;LCD_user_functions.h: 37: WriteCmdXLCD(0x06);
  3546  003BC2  0E06               	movlw	6
  3547  003BC4  EC7E  F01D         	call	_WriteCmdXLCD
  3548  003BC8                     l5098:
  3549  003BC8  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3550  003BCC  0900               	iorlw	0
  3551  003BCE  A4D8               	btfss	status,2,c
  3552  003BD0  D7FB               	goto	l5098
  3553                           
  3554                           ;LCD_user_functions.h: 39: WriteCmdXLCD(0x0C);
  3555  003BD2  0E0C               	movlw	12
  3556  003BD4  EC7E  F01D         	call	_WriteCmdXLCD
  3557  003BD8                     l5102:
  3558  003BD8  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3559  003BDC  0900               	iorlw	0
  3560  003BDE  A4D8               	btfss	status,2,c
  3561  003BE0  D7FB               	goto	l5102
  3562                           
  3563                           ;LCD_user_functions.h: 41: WriteCmdXLCD(0x01);
  3564  003BE2  0E01               	movlw	1
  3565  003BE4  EC7E  F01D         	call	_WriteCmdXLCD
  3566  003BE8  0012               	return		;funcret
  3567  003BEA                     __end_of_init_XLCD:
  3568                           	opt stack 0
  3569                           tblptru	equ	0xFF8
  3570                           tblptrh	equ	0xFF7
  3571                           tblptrl	equ	0xFF6
  3572                           tablat	equ	0xFF5
  3573                           intcon	equ	0xFF2
  3574                           intcon2	equ	0xFF1
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           postdec1	equ	0xFE5
  3578                           fsr1l	equ	0xFE1
  3579                           status	equ	0xFD8
  3580                           
  3581 ;; *************** function _OpenXLCD *****************
  3582 ;; Defined at:
  3583 ;;		line 19 in file "openxlcd.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  lcdtype         1    wreg     unsigned char 
  3586 ;; Auto vars:     Size  Location     Type
  3587 ;;  lcdtype         1   26[COMRAM] unsigned char 
  3588 ;; Return value:  Size  Location     Type
  3589 ;;                  1    wreg      void 
  3590 ;; Registers used:
  3591 ;;		wreg, status,2, status,0, cstack
  3592 ;; Tracked objects:
  3593 ;;		On entry : 0/0
  3594 ;;		On exit  : 0/0
  3595 ;;		Unchanged: 0/0
  3596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;Total ram usage:        1 bytes
  3602 ;; Hardware stack levels used:    1
  3603 ;; Hardware stack levels required when called:    6
  3604 ;; This function calls:
  3605 ;;		_BusyXLCD
  3606 ;;		_Delay10KTCYx
  3607 ;;		_DelayPORXLCD
  3608 ;;		_SetDDRamAddr
  3609 ;;		_WriteCmdXLCD
  3610 ;; This function is called by:
  3611 ;;		_init_XLCD
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text9
  3616  003536                     __ptext9:
  3617                           	opt stack 0
  3618  003536                     _OpenXLCD:
  3619                           	opt stack 23
  3620                           
  3621                           ;incstack = 0
  3622                           ;OpenXLCD@lcdtype stored from wreg
  3623  003536  6E1B               	movwf	OpenXLCD@lcdtype,c
  3624                           
  3625                           ;openxlcd.c: 31: PORTB &= 0xf0;
  3626  003538  0EF0               	movlw	240
  3627  00353A  1681               	andwf	3969,f,c	;volatile
  3628                           
  3629                           ;openxlcd.c: 32: TRISB &= 0xF0;
  3630  00353C  0EF0               	movlw	240
  3631  00353E  1693               	andwf	3987,f,c	;volatile
  3632                           
  3633                           ;openxlcd.c: 35: TRISCbits.RC2 = 0;
  3634  003540  9494               	bcf	3988,2,c	;volatile
  3635                           
  3636                           ;openxlcd.c: 36: TRISCbits.RC0 = 0;
  3637  003542  9094               	bcf	3988,0,c	;volatile
  3638                           
  3639                           ;openxlcd.c: 37: TRISCbits.RC1 = 0;
  3640  003544  9294               	bcf	3988,1,c	;volatile
  3641                           
  3642                           ;openxlcd.c: 38: LATCbits.LATC2 = 0;
  3643  003546  948B               	bcf	3979,2,c	;volatile
  3644                           
  3645                           ;openxlcd.c: 39: LATCbits.LATC0 = 0;
  3646  003548  908B               	bcf	3979,0,c	;volatile
  3647                           
  3648                           ;openxlcd.c: 40: LATCbits.LATC1 = 0;
  3649  00354A  928B               	bcf	3979,1,c	;volatile
  3650                           
  3651                           ;openxlcd.c: 43: DelayPORXLCD();
  3652  00354C  ECBC  F01F         	call	_DelayPORXLCD	;wreg free
  3653                           
  3654                           ;openxlcd.c: 45: WriteCmdXLCD(0x30);
  3655  003550  0E30               	movlw	48
  3656  003552  EC7E  F01D         	call	_WriteCmdXLCD
  3657                           
  3658                           ;openxlcd.c: 46: Delay10KTCYx(0x05);
  3659  003556  0E05               	movlw	5
  3660  003558  EC79  F01F         	call	_Delay10KTCYx
  3661                           
  3662                           ;openxlcd.c: 48: WriteCmdXLCD(0x30);
  3663  00355C  0E30               	movlw	48
  3664  00355E  EC7E  F01D         	call	_WriteCmdXLCD
  3665                           
  3666                           ;openxlcd.c: 49: Delay10KTCYx(0x01);
  3667  003562  0E01               	movlw	1
  3668  003564  EC79  F01F         	call	_Delay10KTCYx
  3669                           
  3670                           ;openxlcd.c: 52: WriteCmdXLCD(0x32);
  3671  003568  0E32               	movlw	50
  3672  00356A  EC7E  F01D         	call	_WriteCmdXLCD
  3673  00356E                     l4472:
  3674  00356E  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3675  003572  0900               	iorlw	0
  3676  003574  A4D8               	btfss	status,2,c
  3677  003576  D7FB               	goto	l4472
  3678  003578                     l4474:
  3679  003578  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3680  00357C  0900               	iorlw	0
  3681  00357E  A4D8               	btfss	status,2,c
  3682  003580  D7FB               	goto	l4474
  3683                           
  3684                           ;openxlcd.c: 59: WriteCmdXLCD(lcdtype);
  3685  003582  501B               	movf	OpenXLCD@lcdtype,w,c
  3686  003584  EC7E  F01D         	call	_WriteCmdXLCD
  3687  003588                     l4478:
  3688  003588  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3689  00358C  0900               	iorlw	0
  3690  00358E  A4D8               	btfss	status,2,c
  3691  003590  D7FB               	goto	l4478
  3692                           
  3693                           ;openxlcd.c: 63: WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  3694  003592  0E08               	movlw	8
  3695  003594  EC7E  F01D         	call	_WriteCmdXLCD
  3696  003598                     l4482:
  3697  003598  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3698  00359C  0900               	iorlw	0
  3699  00359E  A4D8               	btfss	status,2,c
  3700  0035A0  D7FB               	goto	l4482
  3701                           
  3702                           ;openxlcd.c: 65: WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  3703  0035A2  0E0F               	movlw	15
  3704  0035A4  EC7E  F01D         	call	_WriteCmdXLCD
  3705  0035A8                     l4486:
  3706  0035A8  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3707  0035AC  0900               	iorlw	0
  3708  0035AE  A4D8               	btfss	status,2,c
  3709  0035B0  D7FB               	goto	l4486
  3710                           
  3711                           ;openxlcd.c: 69: WriteCmdXLCD(0x01);
  3712  0035B2  0E01               	movlw	1
  3713  0035B4  EC7E  F01D         	call	_WriteCmdXLCD
  3714  0035B8                     l4490:
  3715  0035B8  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3716  0035BC  0900               	iorlw	0
  3717  0035BE  A4D8               	btfss	status,2,c
  3718  0035C0  D7FB               	goto	l4490
  3719                           
  3720                           ;openxlcd.c: 73: WriteCmdXLCD(0b00000100);
  3721  0035C2  0E04               	movlw	4
  3722  0035C4  EC7E  F01D         	call	_WriteCmdXLCD
  3723  0035C8                     l4494:
  3724  0035C8  ECBC  F01D         	call	_BusyXLCD	;wreg free
  3725  0035CC  0900               	iorlw	0
  3726  0035CE  A4D8               	btfss	status,2,c
  3727  0035D0  D7FB               	goto	l4494
  3728                           
  3729                           ;openxlcd.c: 77: SetDDRamAddr(0x80);
  3730  0035D2  0E80               	movlw	128
  3731  0035D4  EC2F  F01D         	call	_SetDDRamAddr
  3732  0035D8  0012               	return	
  3733  0035DA                     __end_of_OpenXLCD:
  3734                           	opt stack 0
  3735                           tblptru	equ	0xFF8
  3736                           tblptrh	equ	0xFF7
  3737                           tblptrl	equ	0xFF6
  3738                           tablat	equ	0xFF5
  3739                           intcon	equ	0xFF2
  3740                           intcon2	equ	0xFF1
  3741                           postinc0	equ	0xFEE
  3742                           wreg	equ	0xFE8
  3743                           postdec1	equ	0xFE5
  3744                           fsr1l	equ	0xFE1
  3745                           status	equ	0xFD8
  3746                           
  3747 ;; *************** function _WriteCmdXLCD *****************
  3748 ;; Defined at:
  3749 ;;		line 13 in file "wcmdxlcd.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  cmd             1    wreg     unsigned char 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  cmd             1   22[COMRAM] unsigned char 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, status,2, status,0, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;Total ram usage:        1 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    5
  3770 ;; This function calls:
  3771 ;;		_DelayFor18TCY
  3772 ;; This function is called by:
  3773 ;;		_init_XLCD
  3774 ;;		_clear_display
  3775 ;;		_OpenXLCD
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text10
  3780  003AFC                     __ptext10:
  3781                           	opt stack 0
  3782  003AFC                     _WriteCmdXLCD:
  3783                           	opt stack 23
  3784                           
  3785                           ;incstack = 0
  3786                           ;WriteCmdXLCD@cmd stored from wreg
  3787  003AFC  6E17               	movwf	WriteCmdXLCD@cmd,c
  3788                           
  3789                           ;wcmdxlcd.c: 32: TRISB &= 0xf0;
  3790  003AFE  0EF0               	movlw	240
  3791  003B00  1693               	andwf	3987,f,c	;volatile
  3792                           
  3793                           ;wcmdxlcd.c: 33: PORTB &= 0xf0;
  3794  003B02  0EF0               	movlw	240
  3795  003B04  1681               	andwf	3969,f,c	;volatile
  3796                           
  3797                           ;wcmdxlcd.c: 34: PORTB |= (cmd>>4)&0x0f;
  3798  003B06  3817               	swapf	WriteCmdXLCD@cmd,w,c
  3799  003B08  0B0F               	andlw	15
  3800  003B0A  0B0F               	andlw	15
  3801  003B0C  1281               	iorwf	3969,f,c	;volatile
  3802                           
  3803                           ;wcmdxlcd.c: 36: LATCbits.LATC2 = 0;
  3804  003B0E  948B               	bcf	3979,2,c	;volatile
  3805                           
  3806                           ;wcmdxlcd.c: 37: LATCbits.LATC0 = 0;
  3807  003B10  908B               	bcf	3979,0,c	;volatile
  3808                           
  3809                           ;wcmdxlcd.c: 38: DelayFor18TCY();
  3810  003B12  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
  3811                           
  3812                           ;wcmdxlcd.c: 39: LATCbits.LATC1 = 1;
  3813  003B16  828B               	bsf	3979,1,c	;volatile
  3814                           
  3815                           ;wcmdxlcd.c: 40: DelayFor18TCY();
  3816  003B18  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
  3817                           
  3818                           ;wcmdxlcd.c: 41: LATCbits.LATC1 = 0;
  3819  003B1C  928B               	bcf	3979,1,c	;volatile
  3820                           
  3821                           ;wcmdxlcd.c: 46: PORTB &= 0xf0;
  3822  003B1E  0EF0               	movlw	240
  3823  003B20  1681               	andwf	3969,f,c	;volatile
  3824                           
  3825                           ;wcmdxlcd.c: 47: PORTB |= cmd&0x0f;
  3826  003B22  5017               	movf	WriteCmdXLCD@cmd,w,c
  3827  003B24  0B0F               	andlw	15
  3828  003B26  1281               	iorwf	3969,f,c	;volatile
  3829                           
  3830                           ;wcmdxlcd.c: 49: DelayFor18TCY();
  3831  003B28  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
  3832                           
  3833                           ;wcmdxlcd.c: 50: LATCbits.LATC1 = 1;
  3834  003B2C  828B               	bsf	3979,1,c	;volatile
  3835                           
  3836                           ;wcmdxlcd.c: 51: DelayFor18TCY();
  3837  003B2E  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
  3838                           
  3839                           ;wcmdxlcd.c: 52: LATCbits.LATC1 = 0;
  3840  003B32  928B               	bcf	3979,1,c	;volatile
  3841                           
  3842                           ;wcmdxlcd.c: 56: TRISB |= 0x0f;
  3843  003B34  0E0F               	movlw	15
  3844  003B36  1293               	iorwf	3987,f,c	;volatile
  3845  003B38  0012               	return	
  3846  003B3A                     __end_of_WriteCmdXLCD:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           intcon	equ	0xFF2
  3853                           intcon2	equ	0xFF1
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           postdec1	equ	0xFE5
  3857                           fsr1l	equ	0xFE1
  3858                           status	equ	0xFD8
  3859                           
  3860 ;; *************** function _DelayPORXLCD *****************
  3861 ;; Defined at:
  3862 ;;		line 56 in file "LCD_user_functions.h"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    5
  3883 ;; This function calls:
  3884 ;;		_Delay1KTCYx
  3885 ;; This function is called by:
  3886 ;;		_OpenXLCD
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text11
  3891  003F78                     __ptext11:
  3892                           	opt stack 0
  3893  003F78                     _DelayPORXLCD:
  3894                           	opt stack 23
  3895                           
  3896                           ;LCD_user_functions.h: 57: Delay1KTCYx(30);
  3897                           
  3898                           ;incstack = 0
  3899  003F78  0E1E               	movlw	30
  3900  003F7A  ECA1  F01F         	call	_Delay1KTCYx
  3901  003F7E  0012               	return		;funcret
  3902  003F80                     __end_of_DelayPORXLCD:
  3903                           	opt stack 0
  3904                           tblptru	equ	0xFF8
  3905                           tblptrh	equ	0xFF7
  3906                           tblptrl	equ	0xFF6
  3907                           tablat	equ	0xFF5
  3908                           intcon	equ	0xFF2
  3909                           intcon2	equ	0xFF1
  3910                           postinc0	equ	0xFEE
  3911                           wreg	equ	0xFE8
  3912                           postdec1	equ	0xFE5
  3913                           fsr1l	equ	0xFE1
  3914                           status	equ	0xFD8
  3915                           
  3916 ;; *************** function _Delay1KTCYx *****************
  3917 ;; Defined at:
  3918 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\d1ktcyx.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  unit            1    wreg     unsigned char 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  unit            1   22[COMRAM] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  1    wreg      void 
  3925 ;; Registers used:
  3926 ;;		wreg
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;Total ram usage:        1 bytes
  3937 ;; Hardware stack levels used:    1
  3938 ;; Hardware stack levels required when called:    4
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_DelayPORXLCD
  3943 ;;		_DelayXLCD
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text12
  3948  003F42                     __ptext12:
  3949                           	opt stack 0
  3950  003F42                     _Delay1KTCYx:
  3951                           	opt stack 23
  3952                           
  3953                           ;incstack = 0
  3954                           ;Delay1KTCYx@unit stored from wreg
  3955  003F42  6E17               	movwf	Delay1KTCYx@unit,c
  3956  003F44  0EC8               	movlw	200
  3957  003F46                     u7597:
  3958  003F46  D000               	nop2	
  3959  003F48  2EE8               	decfsz	wreg,f,c
  3960  003F4A  D7FD               	bra	u7597
  3961  003F4C  2E17               	decfsz	Delay1KTCYx@unit,f,c
  3962  003F4E  D7FA               	goto	l3716
  3963  003F50  0012               	return	
  3964  003F52                     __end_of_Delay1KTCYx:
  3965                           	opt stack 0
  3966                           tblptru	equ	0xFF8
  3967                           tblptrh	equ	0xFF7
  3968                           tblptrl	equ	0xFF6
  3969                           tablat	equ	0xFF5
  3970                           intcon	equ	0xFF2
  3971                           intcon2	equ	0xFF1
  3972                           postinc0	equ	0xFEE
  3973                           wreg	equ	0xFE8
  3974                           postdec1	equ	0xFE5
  3975                           fsr1l	equ	0xFE1
  3976                           status	equ	0xFD8
  3977                           
  3978 ;; *************** function _Delay10KTCYx *****************
  3979 ;; Defined at:
  3980 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\d10ktcyx.c"
  3981 ;; Parameters:    Size  Location     Type
  3982 ;;  unit            1    wreg     unsigned char 
  3983 ;; Auto vars:     Size  Location     Type
  3984 ;;  unit            1   23[COMRAM] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/0
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;Total ram usage:        2 bytes
  3999 ;; Hardware stack levels used:    1
  4000 ;; Hardware stack levels required when called:    4
  4001 ;; This function calls:
  4002 ;;		Nothing
  4003 ;; This function is called by:
  4004 ;;		_OpenXLCD
  4005 ;; This function uses a non-reentrant model
  4006 ;;
  4007                           
  4008                           	psect	text13
  4009  003EF2                     __ptext13:
  4010                           	opt stack 0
  4011  003EF2                     _Delay10KTCYx:
  4012                           	opt stack 24
  4013                           
  4014                           ;incstack = 0
  4015                           ;Delay10KTCYx@unit stored from wreg
  4016  003EF2  6E18               	movwf	Delay10KTCYx@unit,c
  4017  003EF4  0E0D               	movlw	13
  4018  003EF6  6E17               	movwf	??_Delay10KTCYx& (0+255),c
  4019  003EF8  0EFC               	movlw	252
  4020  003EFA                     u7607:
  4021  003EFA  2EE8               	decfsz	wreg,f,c
  4022  003EFC  D7FE               	bra	u7607
  4023  003EFE  2E17               	decfsz	??_Delay10KTCYx& (0+255),f,c
  4024  003F00  D7FC               	bra	u7607
  4025  003F02  2E18               	decfsz	Delay10KTCYx@unit,f,c
  4026  003F04  D7F7               	goto	l4042
  4027  003F06  0012               	return	
  4028  003F08                     __end_of_Delay10KTCYx:
  4029                           	opt stack 0
  4030                           tblptru	equ	0xFF8
  4031                           tblptrh	equ	0xFF7
  4032                           tblptrl	equ	0xFF6
  4033                           tablat	equ	0xFF5
  4034                           intcon	equ	0xFF2
  4035                           intcon2	equ	0xFF1
  4036                           postinc0	equ	0xFEE
  4037                           wreg	equ	0xFE8
  4038                           postdec1	equ	0xFE5
  4039                           fsr1l	equ	0xFE1
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _init_GPIO_DIR *****************
  4043 ;; Defined at:
  4044 ;;		line 77 in file "LCD_user_functions.h"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		None
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    4
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_main
  4069 ;; This function uses a non-reentrant model
  4070 ;;
  4071                           
  4072                           	psect	text14
  4073  003EA8                     __ptext14:
  4074                           	opt stack 0
  4075  003EA8                     _init_GPIO_DIR:
  4076                           	opt stack 26
  4077                           
  4078                           ;LCD_user_functions.h: 79: TRISAbits.RA7 = 0;
  4079                           
  4080                           ;incstack = 0
  4081  003EA8  9E92               	bcf	3986,7,c	;volatile
  4082                           
  4083                           ;LCD_user_functions.h: 80: TRISAbits.RA4 = 1;
  4084  003EAA  8892               	bsf	3986,4,c	;volatile
  4085                           
  4086                           ;LCD_user_functions.h: 81: TRISBbits.RB4 = 0;
  4087  003EAC  9893               	bcf	3987,4,c	;volatile
  4088                           
  4089                           ;LCD_user_functions.h: 82: TRISBbits.RB5 = 1;
  4090  003EAE  8A93               	bsf	3987,5,c	;volatile
  4091                           
  4092                           ;LCD_user_functions.h: 83: TRISBbits.RB7 = 1;
  4093  003EB0  8E93               	bsf	3987,7,c	;volatile
  4094                           
  4095                           ;LCD_user_functions.h: 84: TRISBbits.RB6 = 0;
  4096  003EB2  9C93               	bcf	3987,6,c	;volatile
  4097                           
  4098                           ;LCD_user_functions.h: 85: TRISAbits.RA2 = 1;
  4099  003EB4  8492               	bsf	3986,2,c	;volatile
  4100                           
  4101                           ;LCD_user_functions.h: 86: TRISAbits.RA6 = 1;
  4102  003EB6  8C92               	bsf	3986,6,c	;volatile
  4103                           
  4104                           ;LCD_user_functions.h: 87: TRISAbits.RA5 = 1;
  4105  003EB8  8A92               	bsf	3986,5,c	;volatile
  4106                           
  4107                           ;LCD_user_functions.h: 88: LATAbits.LATA7 = 1;
  4108  003EBA  8E89               	bsf	3977,7,c	;volatile
  4109                           
  4110                           ;LCD_user_functions.h: 89: LATBbits.LATB6 = 1;
  4111  003EBC  8C8A               	bsf	3978,6,c	;volatile
  4112                           
  4113                           ;LCD_user_functions.h: 90: LATBbits.LATB4 = 1;
  4114  003EBE  888A               	bsf	3978,4,c	;volatile
  4115  003EC0  0012               	return		;funcret
  4116  003EC2                     __end_of_init_GPIO_DIR:
  4117                           	opt stack 0
  4118                           tblptru	equ	0xFF8
  4119                           tblptrh	equ	0xFF7
  4120                           tblptrl	equ	0xFF6
  4121                           tablat	equ	0xFF5
  4122                           intcon	equ	0xFF2
  4123                           intcon2	equ	0xFF1
  4124                           postinc0	equ	0xFEE
  4125                           wreg	equ	0xFE8
  4126                           postdec1	equ	0xFE5
  4127                           fsr1l	equ	0xFE1
  4128                           status	equ	0xFD8
  4129                           
  4130 ;; *************** function _init_ADC *****************
  4131 ;; Defined at:
  4132 ;;		line 49 in file "ADC_user_functions.h"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;		None
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  portconfig      1   32[COMRAM] unsigned char 
  4137 ;;  config2         1   31[COMRAM] unsigned char 
  4138 ;;  config1         1   30[COMRAM] unsigned char 
  4139 ;;  i               1   29[COMRAM] unsigned char 
  4140 ;;  config3         1   28[COMRAM] unsigned char 
  4141 ;;  channel         1   27[COMRAM] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;Total ram usage:        6 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    5
  4158 ;; This function calls:
  4159 ;;		_CloseADC
  4160 ;;		_OpenADC
  4161 ;; This function is called by:
  4162 ;;		_main
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text15
  4167  003BEA                     __ptext15:
  4168                           	opt stack 0
  4169  003BEA                     _init_ADC:
  4170                           	opt stack 25
  4171                           
  4172                           ;ADC_user_functions.h: 58: unsigned char channel=0x00,config1=0x00,config2=0x00,config3=
      +                          0x00,portconfig=0x00,i=0;
  4173                           
  4174                           ;incstack = 0
  4175  003BEA  0E00               	movlw	0
  4176  003BEC  6E1C               	movwf	init_ADC@channel,c
  4177  003BEE  0E00               	movlw	0
  4178  003BF0  6E1F               	movwf	init_ADC@config1,c
  4179  003BF2  0E00               	movlw	0
  4180  003BF4  6E20               	movwf	init_ADC@config2,c
  4181  003BF6  0E00               	movlw	0
  4182  003BF8  6E1D               	movwf	init_ADC@config3,c
  4183  003BFA  0E00               	movlw	0
  4184  003BFC  6E21               	movwf	init_ADC@portconfig,c
  4185  003BFE  0E00               	movlw	0
  4186  003C00  6E1E               	movwf	init_ADC@i,c
  4187                           
  4188                           ;ADC_user_functions.h: 60: config1 = 0b10001111 | 0b11111111 | 0b11110101 ;
  4189  003C02  681F               	setf	init_ADC@config1,c
  4190                           
  4191                           ;ADC_user_functions.h: 61: config2 = 0b10000111 | 0b11111111 | 0b11111101 ;
  4192  003C04  6820               	setf	init_ADC@config2,c
  4193                           
  4194                           ;ADC_user_functions.h: 62: portconfig = 0b11111101 ;
  4195  003C06  0EFD               	movlw	253
  4196  003C08  6E21               	movwf	init_ADC@portconfig,c
  4197                           
  4198                           ;ADC_user_functions.h: 64: CloseADC();
  4199  003C0A  ECC0  F01F         	call	_CloseADC	;wreg free
  4200                           
  4201                           ;ADC_user_functions.h: 65: OpenADC(0b10001111 & 0b11111111 & 0b11110101, 0b10000111 & 0b
      +                          01111111 & 0b11111101, 0b11111101);
  4202  003C0E  0E05               	movlw	5
  4203  003C10  6E17               	movwf	OpenADC@config2,c
  4204  003C12  0EFD               	movlw	253
  4205  003C14  6E18               	movwf	OpenADC@portconfig,c
  4206  003C16  0E85               	movlw	133
  4207  003C18  EC4F  F01C         	call	_OpenADC
  4208  003C1C  0012               	return		;funcret
  4209  003C1E                     __end_of_init_ADC:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           intcon	equ	0xFF2
  4216                           intcon2	equ	0xFF1
  4217                           postinc0	equ	0xFEE
  4218                           wreg	equ	0xFE8
  4219                           postdec1	equ	0xFE5
  4220                           fsr1l	equ	0xFE1
  4221                           status	equ	0xFD8
  4222                           
  4223 ;; *************** function _OpenADC *****************
  4224 ;; Defined at:
  4225 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\ADC\adcopen.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  config          1    wreg     unsigned char 
  4228 ;;  config2         1   22[COMRAM] unsigned char 
  4229 ;;  portconfig      1   23[COMRAM] unsigned char 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  config          1   26[COMRAM] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      void 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;Total ram usage:        5 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:    4
  4248 ;; This function calls:
  4249 ;;		Nothing
  4250 ;; This function is called by:
  4251 ;;		_init_ADC
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text16
  4256  00389E                     __ptext16:
  4257                           	opt stack 0
  4258  00389E                     _OpenADC:
  4259                           	opt stack 25
  4260                           
  4261                           ;incstack = 0
  4262                           ;OpenADC@config stored from wreg
  4263  00389E  6E1B               	movwf	OpenADC@config,c
  4264  0038A0  0E00               	movlw	0
  4265  0038A2  6EC2               	movwf	4034,c	;volatile
  4266  0038A4  0E00               	movlw	0
  4267  0038A6  6EC0               	movwf	4032,c	;volatile
  4268  0038A8  90D8               	bcf	status,0,c
  4269  0038AA  3017               	rrcf	OpenADC@config2,w,c
  4270  0038AC  0B3C               	andlw	60
  4271  0038AE  6EC2               	movwf	4034,c	;volatile
  4272  0038B0  C017  F019         	movff	OpenADC@config2,??_OpenADC
  4273  0038B4  3A19               	swapf	??_OpenADC,f,c
  4274  0038B6  0EF0               	movlw	240
  4275  0038B8  1619               	andwf	??_OpenADC,f,c
  4276  0038BA  0E30               	movlw	48
  4277  0038BC  1619               	andwf	??_OpenADC,f,c
  4278  0038BE  5018               	movf	OpenADC@portconfig,w,c
  4279  0038C0  0B0F               	andlw	15
  4280  0038C2  1019               	iorwf	??_OpenADC,w,c
  4281  0038C4  6EC1               	movwf	4033,c	;volatile
  4282  0038C6  C01B  F019         	movff	OpenADC@config,??_OpenADC
  4283  0038CA  90D8               	bcf	status,0,c
  4284  0038CC  3619               	rlcf	??_OpenADC,f,c
  4285  0038CE  90D8               	bcf	status,0,c
  4286  0038D0  3619               	rlcf	??_OpenADC,f,c
  4287  0038D2  0E38               	movlw	56
  4288  0038D4  1619               	andwf	??_OpenADC,f,c
  4289  0038D6  C01B  F01A         	movff	OpenADC@config,??_OpenADC+1
  4290  0038DA  3A1A               	swapf	??_OpenADC+1,f,c
  4291  0038DC  0E0F               	movlw	15
  4292  0038DE  161A               	andwf	??_OpenADC+1,f,c
  4293  0038E0  0E07               	movlw	7
  4294  0038E2  161A               	andwf	??_OpenADC+1,f,c
  4295  0038E4  501B               	movf	OpenADC@config,w,c
  4296  0038E6  0B80               	andlw	128
  4297  0038E8  101A               	iorwf	??_OpenADC+1,w,c
  4298  0038EA  1019               	iorwf	??_OpenADC,w,c
  4299  0038EC  6EC0               	movwf	4032,c	;volatile
  4300  0038EE  AE17               	btfss	OpenADC@config2,7,c
  4301  0038F0  D003               	goto	l714
  4302  0038F2  9C9E               	bcf	3998,6,c	;volatile
  4303  0038F4  8C9D               	bsf	3997,6,c	;volatile
  4304  0038F6  8CF2               	bsf	intcon,6,c	;volatile
  4305  0038F8                     l714:
  4306  0038F8  80C2               	bsf	4034,0,c	;volatile
  4307  0038FA  0012               	return		;funcret
  4308  0038FC                     __end_of_OpenADC:
  4309                           	opt stack 0
  4310                           tblptru	equ	0xFF8
  4311                           tblptrh	equ	0xFF7
  4312                           tblptrl	equ	0xFF6
  4313                           tablat	equ	0xFF5
  4314                           intcon	equ	0xFF2
  4315                           intcon2	equ	0xFF1
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           postdec1	equ	0xFE5
  4319                           fsr1l	equ	0xFE1
  4320                           status	equ	0xFD8
  4321                           
  4322 ;; *************** function _CloseADC *****************
  4323 ;; Defined at:
  4324 ;;		line 23 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\ADC\adcclose.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		None
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    4
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_init_ADC
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text17
  4353  003F80                     __ptext17:
  4354                           	opt stack 0
  4355  003F80                     _CloseADC:
  4356                           	opt stack 25
  4357                           
  4358                           ;incstack = 0
  4359  003F80  90C2               	bcf	4034,0,c	;volatile
  4360  003F82  9C9D               	bcf	3997,6,c	;volatile
  4361  003F84  0012               	return		;funcret
  4362  003F86                     __end_of_CloseADC:
  4363                           	opt stack 0
  4364                           tblptru	equ	0xFF8
  4365                           tblptrh	equ	0xFF7
  4366                           tblptrl	equ	0xFF6
  4367                           tablat	equ	0xFF5
  4368                           intcon	equ	0xFF2
  4369                           intcon2	equ	0xFF1
  4370                           postinc0	equ	0xFEE
  4371                           wreg	equ	0xFE8
  4372                           postdec1	equ	0xFE5
  4373                           fsr1l	equ	0xFE1
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _default_display *****************
  4377 ;; Defined at:
  4378 ;;		line 129 in file "lcd_trials_4bits.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    8
  4399 ;; This function calls:
  4400 ;;		_SetDDRamAddr
  4401 ;;		___ftadd
  4402 ;;		___ftdiv
  4403 ;;		___ftmul
  4404 ;;		___ftneg
  4405 ;;		___fttol
  4406 ;;		_putrsXLCD
  4407 ;;		_putsXLCD
  4408 ;;		_sprintf
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text18
  4415  00258E                     __ptext18:
  4416                           	opt stack 0
  4417  00258E                     _default_display:
  4418                           	opt stack 22
  4419                           
  4420                           ;lcd_trials_4bits.c: 131: SetDDRamAddr (0x00);
  4421                           
  4422                           ;incstack = 0
  4423  00258E  0E00               	movlw	0
  4424  002590  EC2F  F01D         	call	_SetDDRamAddr
  4425                           
  4426                           ;lcd_trials_4bits.c: 132: putrsXLCD("Uo=");
  4427  002594  0EED               	movlw	low STR_1
  4428  002596  6E18               	movwf	putrsXLCD@buffer,c
  4429  002598  0EBF               	movlw	high STR_1
  4430  00259A  6E19               	movwf	putrsXLCD@buffer+1,c
  4431  00259C  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4432                           
  4433                           ;lcd_trials_4bits.c: 133: SetDDRamAddr (0x40);
  4434  0025A0  0E40               	movlw	64
  4435  0025A2  EC2F  F01D         	call	_SetDDRamAddr
  4436                           
  4437                           ;lcd_trials_4bits.c: 134: putrsXLCD("Io=");
  4438  0025A6  0EE9               	movlw	low STR_2
  4439  0025A8  6E18               	movwf	putrsXLCD@buffer,c
  4440  0025AA  0EBF               	movlw	high STR_2
  4441  0025AC  6E19               	movwf	putrsXLCD@buffer+1,c
  4442  0025AE  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4443                           
  4444                           ;lcd_trials_4bits.c: 135: SetDDRamAddr (0x03);
  4445  0025B2  0E03               	movlw	3
  4446  0025B4  EC2F  F01D         	call	_SetDDRamAddr
  4447                           
  4448                           ;lcd_trials_4bits.c: 136: putsXLCD(ResultString_u);
  4449  0025B8  0E1E               	movlw	low _ResultString_u
  4450  0025BA  6E18               	movwf	putsXLCD@buffer,c
  4451  0025BC  0E01               	movlw	high _ResultString_u
  4452  0025BE  6E19               	movwf	putsXLCD@buffer+1,c
  4453  0025C0  EC26  F01E         	call	_putsXLCD	;wreg free
  4454                           
  4455                           ;lcd_trials_4bits.c: 137: putrsXLCD("V          ");
  4456  0025C4  0E6D               	movlw	low STR_3
  4457  0025C6  6E18               	movwf	putrsXLCD@buffer,c
  4458  0025C8  0EBF               	movlw	high STR_3
  4459  0025CA  6E19               	movwf	putrsXLCD@buffer+1,c
  4460  0025CC  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4461                           
  4462                           ;lcd_trials_4bits.c: 138: SetDDRamAddr (0x43);
  4463  0025D0  0E43               	movlw	67
  4464  0025D2  EC2F  F01D         	call	_SetDDRamAddr
  4465                           
  4466                           ;lcd_trials_4bits.c: 139: putsXLCD(ResultString_i);
  4467  0025D6  0E14               	movlw	low _ResultString_i
  4468  0025D8  6E18               	movwf	putsXLCD@buffer,c
  4469  0025DA  0E01               	movlw	high _ResultString_i
  4470  0025DC  6E19               	movwf	putsXLCD@buffer+1,c
  4471  0025DE  EC26  F01E         	call	_putsXLCD	;wreg free
  4472                           
  4473                           ;lcd_trials_4bits.c: 140: putrsXLCD("A          ");
  4474  0025E2  0E61               	movlw	low STR_4
  4475  0025E4  6E18               	movwf	putrsXLCD@buffer,c
  4476  0025E6  0EBF               	movlw	high STR_4
  4477  0025E8  6E19               	movwf	putrsXLCD@buffer+1,c
  4478  0025EA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4479                           
  4480                           ;lcd_trials_4bits.c: 141: SetDDRamAddr (0x0D);
  4481  0025EE  0E0D               	movlw	13
  4482  0025F0  EC2F  F01D         	call	_SetDDRamAddr
  4483                           
  4484                           ;lcd_trials_4bits.c: 142: switch (i_mode){
  4485  0025F4  D0D0               	goto	l7018
  4486  0025F6                     l6982:
  4487                           
  4488                           ;lcd_trials_4bits.c: 144: putrsXLCD("PRO");
  4489  0025F6  0EF5               	movlw	low STR_5
  4490  0025F8  6E18               	movwf	putrsXLCD@buffer,c
  4491  0025FA  0EBF               	movlw	high STR_5
  4492  0025FC  6E19               	movwf	putrsXLCD@buffer+1,c
  4493  0025FE  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4494                           
  4495                           ;lcd_trials_4bits.c: 146: sprintf(ResultString_set_i, "%-.2g", voltage_set_i);
  4496  002602  0E00               	movlw	low _ResultString_set_i
  4497  002604  0100               	movlb	0	; () banked
  4498  002606  6FB5               	movwf	sprintf@sp& (0+255),b
  4499  002608  0E01               	movlw	high _ResultString_set_i
  4500  00260A  0100               	movlb	0	; () banked
  4501  00260C  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  4502  00260E  0EC8               	movlw	low STR_6
  4503  002610  0100               	movlb	0	; () banked
  4504  002612  6FB7               	movwf	sprintf@f& (0+255),b
  4505  002614  0EBF               	movlw	high STR_6
  4506  002616  0100               	movlb	0	; () banked
  4507  002618  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  4508  00261A  C0D1  F0B9         	movff	_voltage_set_i,?_sprintf+4
  4509  00261E  C0D2  F0BA         	movff	_voltage_set_i+1,?_sprintf+5
  4510  002622  C0D3  F0BB         	movff	_voltage_set_i+2,?_sprintf+6
  4511  002626  EC09  F000         	call	_sprintf	;wreg free
  4512                           
  4513                           ;lcd_trials_4bits.c: 147: SetDDRamAddr (0x4C);
  4514  00262A  0E4C               	movlw	76
  4515  00262C  EC2F  F01D         	call	_SetDDRamAddr
  4516                           
  4517                           ;lcd_trials_4bits.c: 148: putsXLCD(ResultString_set_i);
  4518  002630  0E00               	movlw	low _ResultString_set_i
  4519  002632  6E18               	movwf	putsXLCD@buffer,c
  4520  002634  0E01               	movlw	high _ResultString_set_i
  4521  002636  6E19               	movwf	putsXLCD@buffer+1,c
  4522  002638  EC26  F01E         	call	_putsXLCD	;wreg free
  4523                           
  4524                           ;lcd_trials_4bits.c: 149: putrsXLCD("A          ");
  4525  00263C  0E61               	movlw	low STR_4
  4526  00263E  6E18               	movwf	putrsXLCD@buffer,c
  4527  002640  0EBF               	movlw	high STR_4
  4528  002642  6E19               	movwf	putrsXLCD@buffer+1,c
  4529  002644  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4530                           
  4531                           ;lcd_trials_4bits.c: 150: break;
  4532  002648  0012               	return	
  4533  00264A                     l6992:
  4534                           
  4535                           ;lcd_trials_4bits.c: 153: putrsXLCD("LIM");
  4536  00264A  0EF1               	movlw	low STR_8
  4537  00264C  6E18               	movwf	putrsXLCD@buffer,c
  4538  00264E  0EBF               	movlw	high STR_8
  4539  002650  6E19               	movwf	putrsXLCD@buffer+1,c
  4540  002652  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4541                           
  4542                           ;lcd_trials_4bits.c: 155: sprintf(ResultString_set_i, "%-.2g", voltage_set_i);
  4543  002656  0E00               	movlw	low _ResultString_set_i
  4544  002658  0100               	movlb	0	; () banked
  4545  00265A  6FB5               	movwf	sprintf@sp& (0+255),b
  4546  00265C  0E01               	movlw	high _ResultString_set_i
  4547  00265E  0100               	movlb	0	; () banked
  4548  002660  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  4549  002662  0EC8               	movlw	low STR_6
  4550  002664  0100               	movlb	0	; () banked
  4551  002666  6FB7               	movwf	sprintf@f& (0+255),b
  4552  002668  0EBF               	movlw	high STR_6
  4553  00266A  0100               	movlb	0	; () banked
  4554  00266C  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  4555  00266E  C0D1  F0B9         	movff	_voltage_set_i,?_sprintf+4
  4556  002672  C0D2  F0BA         	movff	_voltage_set_i+1,?_sprintf+5
  4557  002676  C0D3  F0BB         	movff	_voltage_set_i+2,?_sprintf+6
  4558  00267A  EC09  F000         	call	_sprintf	;wreg free
  4559                           
  4560                           ;lcd_trials_4bits.c: 156: SetDDRamAddr (0x4C);
  4561  00267E  0E4C               	movlw	76
  4562  002680  EC2F  F01D         	call	_SetDDRamAddr
  4563                           
  4564                           ;lcd_trials_4bits.c: 157: putsXLCD(ResultString_set_i);
  4565  002684  0E00               	movlw	low _ResultString_set_i
  4566  002686  6E18               	movwf	putsXLCD@buffer,c
  4567  002688  0E01               	movlw	high _ResultString_set_i
  4568  00268A  6E19               	movwf	putsXLCD@buffer+1,c
  4569  00268C  EC26  F01E         	call	_putsXLCD	;wreg free
  4570                           
  4571                           ;lcd_trials_4bits.c: 158: putrsXLCD("A          ");
  4572  002690  0E61               	movlw	low STR_4
  4573  002692  6E18               	movwf	putrsXLCD@buffer,c
  4574  002694  0EBF               	movlw	high STR_4
  4575  002696  6E19               	movwf	putrsXLCD@buffer+1,c
  4576  002698  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4577                           
  4578                           ;lcd_trials_4bits.c: 159: break;
  4579  00269C  0012               	return	
  4580  00269E                     l7002:
  4581                           
  4582                           ;lcd_trials_4bits.c: 163: putrsXLCD("PWR");
  4583  00269E  0EF9               	movlw	low STR_11
  4584  0026A0  6E18               	movwf	putrsXLCD@buffer,c
  4585  0026A2  0EBF               	movlw	high STR_11
  4586  0026A4  6E19               	movwf	putrsXLCD@buffer+1,c
  4587  0026A6  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4588                           
  4589                           ;lcd_trials_4bits.c: 164: voltage_set_i = constant_power / (voltage_in - voltage_u);
  4590  0026AA  C0EC  F04B         	movff	_constant_power,___ftdiv@f1
  4591  0026AE  C0ED  F04C         	movff	_constant_power+1,___ftdiv@f1+1
  4592  0026B2  C0EE  F04D         	movff	_constant_power+2,___ftdiv@f1+2
  4593  0026B6  C0E9  F0A3         	movff	_voltage_in,___ftadd@f2
  4594  0026BA  C0EA  F0A4         	movff	_voltage_in+1,___ftadd@f2+1
  4595  0026BE  C0EB  F0A5         	movff	_voltage_in+2,___ftadd@f2+2
  4596  0026C2  C0DA  F01F         	movff	_voltage_u,___ftneg@f1
  4597  0026C6  C0DB  F020         	movff	_voltage_u+1,___ftneg@f1+1
  4598  0026CA  C0DC  F021         	movff	_voltage_u+2,___ftneg@f1+2
  4599  0026CE  ECE8  F01E         	call	___ftneg	;wreg free
  4600  0026D2  C01F  F0A0         	movff	?___ftneg,___ftadd@f1
  4601  0026D6  C020  F0A1         	movff	?___ftneg+1,___ftadd@f1+1
  4602  0026DA  C021  F0A2         	movff	?___ftneg+2,___ftadd@f1+2
  4603  0026DE  EC70  F010         	call	___ftadd	;wreg free
  4604  0026E2  C0A0  F04E         	movff	?___ftadd,___ftdiv@f2
  4605  0026E6  C0A1  F04F         	movff	?___ftadd+1,___ftdiv@f2+1
  4606  0026EA  C0A2  F050         	movff	?___ftadd+2,___ftdiv@f2+2
  4607  0026EE  EC67  F017         	call	___ftdiv	;wreg free
  4608  0026F2  C04B  F0D1         	movff	?___ftdiv,_voltage_set_i
  4609  0026F6  C04C  F0D2         	movff	?___ftdiv+1,_voltage_set_i+1
  4610  0026FA  C04D  F0D3         	movff	?___ftdiv+2,_voltage_set_i+2
  4611                           
  4612                           ;lcd_trials_4bits.c: 165: DAC_i = (voltage_set_i * 4096) / DAC_vRef;
  4613  0026FE  C0F2  F04E         	movff	_DAC_vRef,___ftdiv@f2
  4614  002702  C0F3  F04F         	movff	_DAC_vRef+1,___ftdiv@f2+1
  4615  002706  C0F4  F050         	movff	_DAC_vRef+2,___ftdiv@f2+2
  4616  00270A  0E00               	movlw	0
  4617  00270C  6E38               	movwf	___ftmul@f2,c
  4618  00270E  0E80               	movlw	128
  4619  002710  6E39               	movwf	___ftmul@f2+1,c
  4620  002712  0E45               	movlw	69
  4621  002714  6E3A               	movwf	___ftmul@f2+2,c
  4622  002716  C0D1  F035         	movff	_voltage_set_i,___ftmul@f1
  4623  00271A  C0D2  F036         	movff	_voltage_set_i+1,___ftmul@f1+1
  4624  00271E  C0D3  F037         	movff	_voltage_set_i+2,___ftmul@f1+2
  4625  002722  EC76  F018         	call	___ftmul	;wreg free
  4626  002726  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  4627  00272A  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  4628  00272E  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  4629  002732  EC67  F017         	call	___ftdiv	;wreg free
  4630  002736  C04B  F089         	movff	?___ftdiv,___fttol@f1
  4631  00273A  C04C  F08A         	movff	?___ftdiv+1,___fttol@f1+1
  4632  00273E  C04D  F08B         	movff	?___ftdiv+2,___fttol@f1+2
  4633  002742  EC7A  F014         	call	___fttol	;wreg free
  4634  002746  C089  F065         	movff	?___fttol,_DAC_i
  4635  00274A  C08A  F066         	movff	?___fttol+1,_DAC_i+1
  4636                           
  4637                           ;lcd_trials_4bits.c: 166: sprintf(ResultString_set_i, "%-.2g", voltage_set_i);
  4638  00274E  0E00               	movlw	low _ResultString_set_i
  4639  002750  0100               	movlb	0	; () banked
  4640  002752  6FB5               	movwf	sprintf@sp& (0+255),b
  4641  002754  0E01               	movlw	high _ResultString_set_i
  4642  002756  0100               	movlb	0	; () banked
  4643  002758  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  4644  00275A  0EC8               	movlw	low STR_6
  4645  00275C  0100               	movlb	0	; () banked
  4646  00275E  6FB7               	movwf	sprintf@f& (0+255),b
  4647  002760  0EBF               	movlw	high STR_6
  4648  002762  0100               	movlb	0	; () banked
  4649  002764  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  4650  002766  C0D1  F0B9         	movff	_voltage_set_i,?_sprintf+4
  4651  00276A  C0D2  F0BA         	movff	_voltage_set_i+1,?_sprintf+5
  4652  00276E  C0D3  F0BB         	movff	_voltage_set_i+2,?_sprintf+6
  4653  002772  EC09  F000         	call	_sprintf	;wreg free
  4654                           
  4655                           ;lcd_trials_4bits.c: 167: SetDDRamAddr (0x4C);
  4656  002776  0E4C               	movlw	76
  4657  002778  EC2F  F01D         	call	_SetDDRamAddr
  4658                           
  4659                           ;lcd_trials_4bits.c: 168: putsXLCD(ResultString_set_i);
  4660  00277C  0E00               	movlw	low _ResultString_set_i
  4661  00277E  6E18               	movwf	putsXLCD@buffer,c
  4662  002780  0E01               	movlw	high _ResultString_set_i
  4663  002782  6E19               	movwf	putsXLCD@buffer+1,c
  4664  002784  EC26  F01E         	call	_putsXLCD	;wreg free
  4665                           
  4666                           ;lcd_trials_4bits.c: 169: putrsXLCD("A          ");
  4667  002788  0E61               	movlw	low STR_4
  4668  00278A  6E18               	movwf	putrsXLCD@buffer,c
  4669  00278C  0EBF               	movlw	high STR_4
  4670  00278E  6E19               	movwf	putrsXLCD@buffer+1,c
  4671  002790  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4672                           
  4673                           ;lcd_trials_4bits.c: 175: }
  4674                           ;lcd_trials_4bits.c: 176: }
  4675                           
  4676                           ;lcd_trials_4bits.c: 174: break;
  4677                           
  4678                           ;lcd_trials_4bits.c: 171: }
  4679                           ;lcd_trials_4bits.c: 173: default:{
  4680                           
  4681                           ;lcd_trials_4bits.c: 170: break;
  4682  002794  0012               	return	
  4683  002796                     l7018:
  4684  002796  0100               	movlb	0	; () banked
  4685  002798  51E5               	movf	_i_mode& (0+255),w,b
  4686                           
  4687                           ; Switch size 1, requested type "space"
  4688                           ; Number of cases is 3, Range of values is 0 to 2
  4689                           ; switch strategies available:
  4690                           ; Name         Instructions Cycles
  4691                           ; simple_byte           10     6 (average)
  4692                           ;	Chosen strategy is simple_byte
  4693  00279A  0A00               	xorlw	0	; case 0
  4694  00279C  B4D8               	btfsc	status,2,c
  4695  00279E  D72B               	goto	l6982
  4696  0027A0  0A01               	xorlw	1	; case 1
  4697  0027A2  B4D8               	btfsc	status,2,c
  4698  0027A4  D752               	goto	l6992
  4699  0027A6  0A03               	xorlw	3	; case 2
  4700  0027A8  A4D8               	btfss	status,2,c
  4701  0027AA  0012               	return	
  4702  0027AC  D778               	goto	l7002
  4703  0027AE                     __end_of_default_display:
  4704                           	opt stack 0
  4705                           tblptru	equ	0xFF8
  4706                           tblptrh	equ	0xFF7
  4707                           tblptrl	equ	0xFF6
  4708                           tablat	equ	0xFF5
  4709                           intcon	equ	0xFF2
  4710                           intcon2	equ	0xFF1
  4711                           postinc0	equ	0xFEE
  4712                           wreg	equ	0xFE8
  4713                           postdec1	equ	0xFE5
  4714                           fsr1l	equ	0xFE1
  4715                           status	equ	0xFD8
  4716                           
  4717 ;; *************** function _putsXLCD *****************
  4718 ;; Defined at:
  4719 ;;		line 16 in file "putsxlcd.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  buffer          2   23[COMRAM] PTR unsigned char 
  4722 ;;		 -> ResultString_set_i(10), ResultString_i(10), ResultString_u(10), 
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;Total ram usage:        2 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    6
  4741 ;; This function calls:
  4742 ;;		_BusyXLCD
  4743 ;;		_WriteDataXLCD
  4744 ;; This function is called by:
  4745 ;;		_default_display
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text19
  4750  003C4C                     __ptext19:
  4751                           	opt stack 0
  4752  003C4C                     _putsXLCD:
  4753                           	opt stack 23
  4754                           
  4755                           ;putsxlcd.c: 18: while(*buffer)
  4756                           
  4757                           ;incstack = 0
  4758  003C4C  D00E               	goto	l4564
  4759  003C4E                     l4558:
  4760  003C4E  ECBC  F01D         	call	_BusyXLCD	;wreg free
  4761  003C52  0900               	iorlw	0
  4762  003C54  A4D8               	btfss	status,2,c
  4763  003C56  D7FB               	goto	l4558
  4764                           
  4765                           ;putsxlcd.c: 21: WriteDataXLCD(*buffer);
  4766  003C58  C018  FFD9         	movff	putsXLCD@buffer,fsr2l
  4767  003C5C  C019  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  4768  003C60  50DF               	movf	indf2,w,c
  4769  003C62  EC9D  F01D         	call	_WriteDataXLCD
  4770                           
  4771                           ;putsxlcd.c: 22: buffer++;
  4772  003C66  4A18               	infsnz	putsXLCD@buffer,f,c
  4773  003C68  2A19               	incf	putsXLCD@buffer+1,f,c
  4774  003C6A                     l4564:
  4775  003C6A  C018  FFD9         	movff	putsXLCD@buffer,fsr2l
  4776  003C6E  C019  FFDA         	movff	putsXLCD@buffer+1,fsr2h
  4777  003C72  50DF               	movf	indf2,w,c
  4778  003C74  B4D8               	btfsc	status,2,c
  4779  003C76  0012               	return	
  4780  003C78  D7EA               	goto	l4558
  4781  003C7A                     __end_of_putsXLCD:
  4782                           	opt stack 0
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           intcon	equ	0xFF2
  4788                           intcon2	equ	0xFF1
  4789                           postinc0	equ	0xFEE
  4790                           wreg	equ	0xFE8
  4791                           postdec1	equ	0xFE5
  4792                           fsr1l	equ	0xFE1
  4793                           indf2	equ	0xFDF
  4794                           fsr2h	equ	0xFDA
  4795                           fsr2l	equ	0xFD9
  4796                           status	equ	0xFD8
  4797                           
  4798 ;; *************** function _current_protection_set_display *****************
  4799 ;; Defined at:
  4800 ;;		line 246 in file "lcd_trials_4bits.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used:    1
  4820 ;; Hardware stack levels required when called:    8
  4821 ;; This function calls:
  4822 ;;		_SetDDRamAddr
  4823 ;;		___ftdiv
  4824 ;;		___ftmul
  4825 ;;		___lwtoft
  4826 ;;		_putrsXLCD
  4827 ;;		_sprintf
  4828 ;; This function is called by:
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text20
  4834  002C92                     __ptext20:
  4835                           	opt stack 0
  4836  002C92                     _current_protection_set_display:
  4837                           	opt stack 22
  4838                           
  4839                           ;lcd_trials_4bits.c: 248: voltage_set_i = (DAC_i*DAC_vRef)/4096;
  4840                           
  4841                           ;incstack = 0
  4842  002C92  C0F2  F038         	movff	_DAC_vRef,___ftmul@f2
  4843  002C96  C0F3  F039         	movff	_DAC_vRef+1,___ftmul@f2+1
  4844  002C9A  C0F4  F03A         	movff	_DAC_vRef+2,___ftmul@f2+2
  4845  002C9E  C065  F032         	movff	_DAC_i,___lwtoft@c
  4846  002CA2  C066  F033         	movff	_DAC_i+1,___lwtoft@c+1
  4847  002CA6  ECFA  F01E         	call	___lwtoft	;wreg free
  4848  002CAA  C032  F035         	movff	?___lwtoft,___ftmul@f1
  4849  002CAE  C033  F036         	movff	?___lwtoft+1,___ftmul@f1+1
  4850  002CB2  C034  F037         	movff	?___lwtoft+2,___ftmul@f1+2
  4851  002CB6  EC76  F018         	call	___ftmul	;wreg free
  4852  002CBA  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  4853  002CBE  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  4854  002CC2  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  4855  002CC6  0E00               	movlw	0
  4856  002CC8  6E4E               	movwf	___ftdiv@f2,c
  4857  002CCA  0E80               	movlw	128
  4858  002CCC  6E4F               	movwf	___ftdiv@f2+1,c
  4859  002CCE  0E45               	movlw	69
  4860  002CD0  6E50               	movwf	___ftdiv@f2+2,c
  4861  002CD2  EC67  F017         	call	___ftdiv	;wreg free
  4862  002CD6  C04B  F0D1         	movff	?___ftdiv,_voltage_set_i
  4863  002CDA  C04C  F0D2         	movff	?___ftdiv+1,_voltage_set_i+1
  4864  002CDE  C04D  F0D3         	movff	?___ftdiv+2,_voltage_set_i+2
  4865                           
  4866                           ;lcd_trials_4bits.c: 249: sprintf(ResultString_set_i, "%-.2g", voltage_set_i);
  4867  002CE2  0E00               	movlw	low _ResultString_set_i
  4868  002CE4  0100               	movlb	0	; () banked
  4869  002CE6  6FB5               	movwf	sprintf@sp& (0+255),b
  4870  002CE8  0E01               	movlw	high _ResultString_set_i
  4871  002CEA  0100               	movlb	0	; () banked
  4872  002CEC  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  4873  002CEE  0EC8               	movlw	low STR_6
  4874  002CF0  0100               	movlb	0	; () banked
  4875  002CF2  6FB7               	movwf	sprintf@f& (0+255),b
  4876  002CF4  0EBF               	movlw	high STR_6
  4877  002CF6  0100               	movlb	0	; () banked
  4878  002CF8  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  4879  002CFA  C0D1  F0B9         	movff	_voltage_set_i,?_sprintf+4
  4880  002CFE  C0D2  F0BA         	movff	_voltage_set_i+1,?_sprintf+5
  4881  002D02  C0D3  F0BB         	movff	_voltage_set_i+2,?_sprintf+6
  4882  002D06  EC09  F000         	call	_sprintf	;wreg free
  4883                           
  4884                           ;lcd_trials_4bits.c: 250: SetDDRamAddr (0x00);
  4885  002D0A  0E00               	movlw	0
  4886  002D0C  EC2F  F01D         	call	_SetDDRamAddr
  4887                           
  4888                           ;lcd_trials_4bits.c: 251: putrsXLCD("Iprot=");
  4889  002D10  0EA9               	movlw	low STR_35
  4890  002D12  6E18               	movwf	putrsXLCD@buffer,c
  4891  002D14  0EBF               	movlw	high STR_35
  4892  002D16  6E19               	movwf	putrsXLCD@buffer+1,c
  4893  002D18  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4894                           
  4895                           ;lcd_trials_4bits.c: 252: putrsXLCD(ResultString_set_i);
  4896  002D1C  0E00               	movlw	low _ResultString_set_i
  4897  002D1E  6E18               	movwf	putrsXLCD@buffer,c
  4898  002D20  0E01               	movlw	high _ResultString_set_i
  4899  002D22  6E19               	movwf	putrsXLCD@buffer+1,c
  4900  002D24  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4901                           
  4902                           ;lcd_trials_4bits.c: 253: putrsXLCD("A        ");
  4903  002D28  0E84               	movlw	low STR_36
  4904  002D2A  6E18               	movwf	putrsXLCD@buffer,c
  4905  002D2C  0EBF               	movlw	high STR_36
  4906  002D2E  6E19               	movwf	putrsXLCD@buffer+1,c
  4907  002D30  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4908                           
  4909                           ;lcd_trials_4bits.c: 254: SetDDRamAddr (0x40);
  4910  002D34  0E40               	movlw	64
  4911  002D36  EC2F  F01D         	call	_SetDDRamAddr
  4912                           
  4913                           ;lcd_trials_4bits.c: 255: sprintf(ResultString_i, "%-.2g", voltage_i);
  4914  002D3A  0E14               	movlw	low _ResultString_i
  4915  002D3C  0100               	movlb	0	; () banked
  4916  002D3E  6FB5               	movwf	sprintf@sp& (0+255),b
  4917  002D40  0E01               	movlw	high _ResultString_i
  4918  002D42  0100               	movlb	0	; () banked
  4919  002D44  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  4920  002D46  0EC8               	movlw	low STR_6
  4921  002D48  0100               	movlb	0	; () banked
  4922  002D4A  6FB7               	movwf	sprintf@f& (0+255),b
  4923  002D4C  0EBF               	movlw	high STR_6
  4924  002D4E  0100               	movlb	0	; () banked
  4925  002D50  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  4926  002D52  C0D7  F0B9         	movff	_voltage_i,?_sprintf+4
  4927  002D56  C0D8  F0BA         	movff	_voltage_i+1,?_sprintf+5
  4928  002D5A  C0D9  F0BB         	movff	_voltage_i+2,?_sprintf+6
  4929  002D5E  EC09  F000         	call	_sprintf	;wreg free
  4930                           
  4931                           ;lcd_trials_4bits.c: 256: putrsXLCD("Io =");
  4932  002D62  0EDF               	movlw	low STR_38
  4933  002D64  6E18               	movwf	putrsXLCD@buffer,c
  4934  002D66  0EBF               	movlw	high STR_38
  4935  002D68  6E19               	movwf	putrsXLCD@buffer+1,c
  4936  002D6A  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4937                           
  4938                           ;lcd_trials_4bits.c: 257: putrsXLCD(ResultString_i);
  4939  002D6E  0E14               	movlw	low _ResultString_i
  4940  002D70  6E18               	movwf	putrsXLCD@buffer,c
  4941  002D72  0E01               	movlw	high _ResultString_i
  4942  002D74  6E19               	movwf	putrsXLCD@buffer+1,c
  4943  002D76  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4944                           
  4945                           ;lcd_trials_4bits.c: 258: putrsXLCD("A        ");
  4946  002D7A  0E84               	movlw	low STR_36
  4947  002D7C  6E18               	movwf	putrsXLCD@buffer,c
  4948  002D7E  0EBF               	movlw	high STR_36
  4949  002D80  6E19               	movwf	putrsXLCD@buffer+1,c
  4950  002D82  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4951                           
  4952                           ;lcd_trials_4bits.c: 259: SetDDRamAddr (0x4B);
  4953  002D86  0E4B               	movlw	75
  4954  002D88  EC2F  F01D         	call	_SetDDRamAddr
  4955                           
  4956                           ;lcd_trials_4bits.c: 260: if (step_size_mode == 1) {
  4957  002D8C  0100               	movlb	0	; () banked
  4958  002D8E  05F9               	decf	_step_size_mode& (0+255),w,b
  4959  002D90  A4D8               	btfss	status,2,c
  4960  002D92  D007               	goto	l7118
  4961                           
  4962                           ; BSR set to: 0
  4963                           ;lcd_trials_4bits.c: 261: putrsXLCD(" FINE");
  4964  002D94  0EBC               	movlw	low STR_32
  4965  002D96  6E18               	movwf	putrsXLCD@buffer,c
  4966  002D98  0EBF               	movlw	high STR_32
  4967  002D9A  6E19               	movwf	putrsXLCD@buffer+1,c
  4968  002D9C  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4969                           
  4970                           ;lcd_trials_4bits.c: 262: } else{
  4971  002DA0  0012               	return	
  4972  002DA2                     l7118:
  4973                           
  4974                           ;lcd_trials_4bits.c: 263: putrsXLCD("ROUGH");
  4975  002DA2  0EC2               	movlw	low STR_33
  4976  002DA4  6E18               	movwf	putrsXLCD@buffer,c
  4977  002DA6  0EBF               	movlw	high STR_33
  4978  002DA8  6E19               	movwf	putrsXLCD@buffer+1,c
  4979  002DAA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  4980  002DAE  0012               	return	
  4981  002DB0                     __end_of_current_protection_set_display:
  4982                           	opt stack 0
  4983                           tblptru	equ	0xFF8
  4984                           tblptrh	equ	0xFF7
  4985                           tblptrl	equ	0xFF6
  4986                           tablat	equ	0xFF5
  4987                           intcon	equ	0xFF2
  4988                           intcon2	equ	0xFF1
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           postdec1	equ	0xFE5
  4992                           fsr1l	equ	0xFE1
  4993                           indf2	equ	0xFDF
  4994                           fsr2h	equ	0xFDA
  4995                           fsr2l	equ	0xFD9
  4996                           status	equ	0xFD8
  4997                           
  4998 ;; *************** function _current_limit_set_display *****************
  4999 ;; Defined at:
  5000 ;;		line 267 in file "lcd_trials_4bits.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;		None
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  1    wreg      void 
  5007 ;; Registers used:
  5008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5018 ;;Total ram usage:        0 bytes
  5019 ;; Hardware stack levels used:    1
  5020 ;; Hardware stack levels required when called:    8
  5021 ;; This function calls:
  5022 ;;		_SetDDRamAddr
  5023 ;;		___ftdiv
  5024 ;;		___ftmul
  5025 ;;		___lwtoft
  5026 ;;		_putrsXLCD
  5027 ;;		_sprintf
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text21
  5034  002DB0                     __ptext21:
  5035                           	opt stack 0
  5036  002DB0                     _current_limit_set_display:
  5037                           	opt stack 22
  5038                           
  5039                           ;lcd_trials_4bits.c: 269: voltage_set_i = (DAC_i*DAC_vRef)/4096;
  5040                           
  5041                           ;incstack = 0
  5042  002DB0  C0F2  F038         	movff	_DAC_vRef,___ftmul@f2
  5043  002DB4  C0F3  F039         	movff	_DAC_vRef+1,___ftmul@f2+1
  5044  002DB8  C0F4  F03A         	movff	_DAC_vRef+2,___ftmul@f2+2
  5045  002DBC  C065  F032         	movff	_DAC_i,___lwtoft@c
  5046  002DC0  C066  F033         	movff	_DAC_i+1,___lwtoft@c+1
  5047  002DC4  ECFA  F01E         	call	___lwtoft	;wreg free
  5048  002DC8  C032  F035         	movff	?___lwtoft,___ftmul@f1
  5049  002DCC  C033  F036         	movff	?___lwtoft+1,___ftmul@f1+1
  5050  002DD0  C034  F037         	movff	?___lwtoft+2,___ftmul@f1+2
  5051  002DD4  EC76  F018         	call	___ftmul	;wreg free
  5052  002DD8  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  5053  002DDC  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  5054  002DE0  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  5055  002DE4  0E00               	movlw	0
  5056  002DE6  6E4E               	movwf	___ftdiv@f2,c
  5057  002DE8  0E80               	movlw	128
  5058  002DEA  6E4F               	movwf	___ftdiv@f2+1,c
  5059  002DEC  0E45               	movlw	69
  5060  002DEE  6E50               	movwf	___ftdiv@f2+2,c
  5061  002DF0  EC67  F017         	call	___ftdiv	;wreg free
  5062  002DF4  C04B  F0D1         	movff	?___ftdiv,_voltage_set_i
  5063  002DF8  C04C  F0D2         	movff	?___ftdiv+1,_voltage_set_i+1
  5064  002DFC  C04D  F0D3         	movff	?___ftdiv+2,_voltage_set_i+2
  5065                           
  5066                           ;lcd_trials_4bits.c: 270: sprintf(ResultString_set_i, "%-.2g", voltage_set_i);
  5067  002E00  0E00               	movlw	low _ResultString_set_i
  5068  002E02  0100               	movlb	0	; () banked
  5069  002E04  6FB5               	movwf	sprintf@sp& (0+255),b
  5070  002E06  0E01               	movlw	high _ResultString_set_i
  5071  002E08  0100               	movlb	0	; () banked
  5072  002E0A  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  5073  002E0C  0EC8               	movlw	low STR_6
  5074  002E0E  0100               	movlb	0	; () banked
  5075  002E10  6FB7               	movwf	sprintf@f& (0+255),b
  5076  002E12  0EBF               	movlw	high STR_6
  5077  002E14  0100               	movlb	0	; () banked
  5078  002E16  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  5079  002E18  C0D1  F0B9         	movff	_voltage_set_i,?_sprintf+4
  5080  002E1C  C0D2  F0BA         	movff	_voltage_set_i+1,?_sprintf+5
  5081  002E20  C0D3  F0BB         	movff	_voltage_set_i+2,?_sprintf+6
  5082  002E24  EC09  F000         	call	_sprintf	;wreg free
  5083                           
  5084                           ;lcd_trials_4bits.c: 271: SetDDRamAddr (0x00);
  5085  002E28  0E00               	movlw	0
  5086  002E2A  EC2F  F01D         	call	_SetDDRamAddr
  5087                           
  5088                           ;lcd_trials_4bits.c: 272: putrsXLCD("Ilimit=");
  5089  002E2E  0EA1               	movlw	low STR_43
  5090  002E30  6E18               	movwf	putrsXLCD@buffer,c
  5091  002E32  0EBF               	movlw	high STR_43
  5092  002E34  6E19               	movwf	putrsXLCD@buffer+1,c
  5093  002E36  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5094                           
  5095                           ;lcd_trials_4bits.c: 273: putrsXLCD(ResultString_set_i);
  5096  002E3A  0E00               	movlw	low _ResultString_set_i
  5097  002E3C  6E18               	movwf	putrsXLCD@buffer,c
  5098  002E3E  0E01               	movlw	high _ResultString_set_i
  5099  002E40  6E19               	movwf	putrsXLCD@buffer+1,c
  5100  002E42  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5101                           
  5102                           ;lcd_trials_4bits.c: 274: putrsXLCD("A        ");
  5103  002E46  0E84               	movlw	low STR_36
  5104  002E48  6E18               	movwf	putrsXLCD@buffer,c
  5105  002E4A  0EBF               	movlw	high STR_36
  5106  002E4C  6E19               	movwf	putrsXLCD@buffer+1,c
  5107  002E4E  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5108                           
  5109                           ;lcd_trials_4bits.c: 275: SetDDRamAddr (0x40);
  5110  002E52  0E40               	movlw	64
  5111  002E54  EC2F  F01D         	call	_SetDDRamAddr
  5112                           
  5113                           ;lcd_trials_4bits.c: 276: sprintf(ResultString_i, "%-.2g", voltage_i);
  5114  002E58  0E14               	movlw	low _ResultString_i
  5115  002E5A  0100               	movlb	0	; () banked
  5116  002E5C  6FB5               	movwf	sprintf@sp& (0+255),b
  5117  002E5E  0E01               	movlw	high _ResultString_i
  5118  002E60  0100               	movlb	0	; () banked
  5119  002E62  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  5120  002E64  0EC8               	movlw	low STR_6
  5121  002E66  0100               	movlb	0	; () banked
  5122  002E68  6FB7               	movwf	sprintf@f& (0+255),b
  5123  002E6A  0EBF               	movlw	high STR_6
  5124  002E6C  0100               	movlb	0	; () banked
  5125  002E6E  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  5126  002E70  C0D7  F0B9         	movff	_voltage_i,?_sprintf+4
  5127  002E74  C0D8  F0BA         	movff	_voltage_i+1,?_sprintf+5
  5128  002E78  C0D9  F0BB         	movff	_voltage_i+2,?_sprintf+6
  5129  002E7C  EC09  F000         	call	_sprintf	;wreg free
  5130                           
  5131                           ;lcd_trials_4bits.c: 277: putrsXLCD("Io =");
  5132  002E80  0EDF               	movlw	low STR_38
  5133  002E82  6E18               	movwf	putrsXLCD@buffer,c
  5134  002E84  0EBF               	movlw	high STR_38
  5135  002E86  6E19               	movwf	putrsXLCD@buffer+1,c
  5136  002E88  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5137                           
  5138                           ;lcd_trials_4bits.c: 278: putrsXLCD(ResultString_i);
  5139  002E8C  0E14               	movlw	low _ResultString_i
  5140  002E8E  6E18               	movwf	putrsXLCD@buffer,c
  5141  002E90  0E01               	movlw	high _ResultString_i
  5142  002E92  6E19               	movwf	putrsXLCD@buffer+1,c
  5143  002E94  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5144                           
  5145                           ;lcd_trials_4bits.c: 279: putrsXLCD("A         ");
  5146  002E98  0E79               	movlw	low STR_47
  5147  002E9A  6E18               	movwf	putrsXLCD@buffer,c
  5148  002E9C  0EBF               	movlw	high STR_47
  5149  002E9E  6E19               	movwf	putrsXLCD@buffer+1,c
  5150  002EA0  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5151                           
  5152                           ;lcd_trials_4bits.c: 280: SetDDRamAddr (0x4B);
  5153  002EA4  0E4B               	movlw	75
  5154  002EA6  EC2F  F01D         	call	_SetDDRamAddr
  5155                           
  5156                           ;lcd_trials_4bits.c: 281: if (step_size_mode == 1) {
  5157  002EAA  0100               	movlb	0	; () banked
  5158  002EAC  05F9               	decf	_step_size_mode& (0+255),w,b
  5159  002EAE  A4D8               	btfss	status,2,c
  5160  002EB0  D007               	goto	l7146
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;lcd_trials_4bits.c: 282: putrsXLCD(" FINE");
  5164  002EB2  0EBC               	movlw	low STR_32
  5165  002EB4  6E18               	movwf	putrsXLCD@buffer,c
  5166  002EB6  0EBF               	movlw	high STR_32
  5167  002EB8  6E19               	movwf	putrsXLCD@buffer+1,c
  5168  002EBA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5169                           
  5170                           ;lcd_trials_4bits.c: 283: } else{
  5171  002EBE  0012               	return	
  5172  002EC0                     l7146:
  5173                           
  5174                           ;lcd_trials_4bits.c: 284: putrsXLCD("ROUGH");
  5175  002EC0  0EC2               	movlw	low STR_33
  5176  002EC2  6E18               	movwf	putrsXLCD@buffer,c
  5177  002EC4  0EBF               	movlw	high STR_33
  5178  002EC6  6E19               	movwf	putrsXLCD@buffer+1,c
  5179  002EC8  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5180  002ECC  0012               	return	
  5181  002ECE                     __end_of_current_limit_set_display:
  5182                           	opt stack 0
  5183                           tblptru	equ	0xFF8
  5184                           tblptrh	equ	0xFF7
  5185                           tblptrl	equ	0xFF6
  5186                           tablat	equ	0xFF5
  5187                           intcon	equ	0xFF2
  5188                           intcon2	equ	0xFF1
  5189                           postinc0	equ	0xFEE
  5190                           wreg	equ	0xFE8
  5191                           postdec1	equ	0xFE5
  5192                           fsr1l	equ	0xFE1
  5193                           indf2	equ	0xFDF
  5194                           fsr2h	equ	0xFDA
  5195                           fsr2l	equ	0xFD9
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function _current_auto_limit_set_display *****************
  5199 ;; Defined at:
  5200 ;;		line 288 in file "lcd_trials_4bits.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    8
  5221 ;; This function calls:
  5222 ;;		_SetDDRamAddr
  5223 ;;		___ftadd
  5224 ;;		___ftdiv
  5225 ;;		___ftmul
  5226 ;;		___ftneg
  5227 ;;		___fttol
  5228 ;;		_putrsXLCD
  5229 ;;		_send_dac_i_spi
  5230 ;;		_sprintf
  5231 ;; This function is called by:
  5232 ;;		_main
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text22
  5237  002FDE                     __ptext22:
  5238                           	opt stack 0
  5239  002FDE                     _current_auto_limit_set_display:
  5240                           	opt stack 22
  5241                           
  5242                           ;lcd_trials_4bits.c: 290: voltage_set_i = constant_power / (voltage_in - voltage_u);
  5243                           
  5244                           ;incstack = 0
  5245  002FDE  C0EC  F04B         	movff	_constant_power,___ftdiv@f1
  5246  002FE2  C0ED  F04C         	movff	_constant_power+1,___ftdiv@f1+1
  5247  002FE6  C0EE  F04D         	movff	_constant_power+2,___ftdiv@f1+2
  5248  002FEA  C0E9  F0A3         	movff	_voltage_in,___ftadd@f2
  5249  002FEE  C0EA  F0A4         	movff	_voltage_in+1,___ftadd@f2+1
  5250  002FF2  C0EB  F0A5         	movff	_voltage_in+2,___ftadd@f2+2
  5251  002FF6  C0DA  F01F         	movff	_voltage_u,___ftneg@f1
  5252  002FFA  C0DB  F020         	movff	_voltage_u+1,___ftneg@f1+1
  5253  002FFE  C0DC  F021         	movff	_voltage_u+2,___ftneg@f1+2
  5254  003002  ECE8  F01E         	call	___ftneg	;wreg free
  5255  003006  C01F  F0A0         	movff	?___ftneg,___ftadd@f1
  5256  00300A  C020  F0A1         	movff	?___ftneg+1,___ftadd@f1+1
  5257  00300E  C021  F0A2         	movff	?___ftneg+2,___ftadd@f1+2
  5258  003012  EC70  F010         	call	___ftadd	;wreg free
  5259  003016  C0A0  F04E         	movff	?___ftadd,___ftdiv@f2
  5260  00301A  C0A1  F04F         	movff	?___ftadd+1,___ftdiv@f2+1
  5261  00301E  C0A2  F050         	movff	?___ftadd+2,___ftdiv@f2+2
  5262  003022  EC67  F017         	call	___ftdiv	;wreg free
  5263  003026  C04B  F0D1         	movff	?___ftdiv,_voltage_set_i
  5264  00302A  C04C  F0D2         	movff	?___ftdiv+1,_voltage_set_i+1
  5265  00302E  C04D  F0D3         	movff	?___ftdiv+2,_voltage_set_i+2
  5266                           
  5267                           ;lcd_trials_4bits.c: 291: DAC_i = (voltage_set_i * 4096) / DAC_vRef;
  5268  003032  C0F2  F04E         	movff	_DAC_vRef,___ftdiv@f2
  5269  003036  C0F3  F04F         	movff	_DAC_vRef+1,___ftdiv@f2+1
  5270  00303A  C0F4  F050         	movff	_DAC_vRef+2,___ftdiv@f2+2
  5271  00303E  0E00               	movlw	0
  5272  003040  6E38               	movwf	___ftmul@f2,c
  5273  003042  0E80               	movlw	128
  5274  003044  6E39               	movwf	___ftmul@f2+1,c
  5275  003046  0E45               	movlw	69
  5276  003048  6E3A               	movwf	___ftmul@f2+2,c
  5277  00304A  C0D1  F035         	movff	_voltage_set_i,___ftmul@f1
  5278  00304E  C0D2  F036         	movff	_voltage_set_i+1,___ftmul@f1+1
  5279  003052  C0D3  F037         	movff	_voltage_set_i+2,___ftmul@f1+2
  5280  003056  EC76  F018         	call	___ftmul	;wreg free
  5281  00305A  C035  F04B         	movff	?___ftmul,___ftdiv@f1
  5282  00305E  C036  F04C         	movff	?___ftmul+1,___ftdiv@f1+1
  5283  003062  C037  F04D         	movff	?___ftmul+2,___ftdiv@f1+2
  5284  003066  EC67  F017         	call	___ftdiv	;wreg free
  5285  00306A  C04B  F089         	movff	?___ftdiv,___fttol@f1
  5286  00306E  C04C  F08A         	movff	?___ftdiv+1,___fttol@f1+1
  5287  003072  C04D  F08B         	movff	?___ftdiv+2,___fttol@f1+2
  5288  003076  EC7A  F014         	call	___fttol	;wreg free
  5289  00307A  C089  F065         	movff	?___fttol,_DAC_i
  5290  00307E  C08A  F066         	movff	?___fttol+1,_DAC_i+1
  5291                           
  5292                           ;lcd_trials_4bits.c: 292: send_dac_i_spi();
  5293  003082  EC3D  F01E         	call	_send_dac_i_spi	;wreg free
  5294                           
  5295                           ;lcd_trials_4bits.c: 293: sprintf(ResultString_set_i, "%-.3g", voltage_set_i);
  5296  003086  0E00               	movlw	low _ResultString_set_i
  5297  003088  0100               	movlb	0	; () banked
  5298  00308A  6FB5               	movwf	sprintf@sp& (0+255),b
  5299  00308C  0E01               	movlw	high _ResultString_set_i
  5300  00308E  0100               	movlb	0	; () banked
  5301  003090  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  5302  003092  0ECE               	movlw	low STR_50
  5303  003094  0100               	movlb	0	; () banked
  5304  003096  6FB7               	movwf	sprintf@f& (0+255),b
  5305  003098  0EBF               	movlw	high STR_50
  5306  00309A  0100               	movlb	0	; () banked
  5307  00309C  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  5308  00309E  C0D1  F0B9         	movff	_voltage_set_i,?_sprintf+4
  5309  0030A2  C0D2  F0BA         	movff	_voltage_set_i+1,?_sprintf+5
  5310  0030A6  C0D3  F0BB         	movff	_voltage_set_i+2,?_sprintf+6
  5311  0030AA  EC09  F000         	call	_sprintf	;wreg free
  5312                           
  5313                           ;lcd_trials_4bits.c: 294: SetDDRamAddr (0x00);
  5314  0030AE  0E00               	movlw	0
  5315  0030B0  EC2F  F01D         	call	_SetDDRamAddr
  5316                           
  5317                           ;lcd_trials_4bits.c: 295: putrsXLCD(" P=10W,  Uin=16V ");
  5318  0030B4  0ECB               	movlw	low STR_51
  5319  0030B6  6E18               	movwf	putrsXLCD@buffer,c
  5320  0030B8  0EBE               	movlw	high STR_51
  5321  0030BA  6E19               	movwf	putrsXLCD@buffer+1,c
  5322  0030BC  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5323                           
  5324                           ;lcd_trials_4bits.c: 296: SetDDRamAddr (0x40);
  5325  0030C0  0E40               	movlw	64
  5326  0030C2  EC2F  F01D         	call	_SetDDRamAddr
  5327                           
  5328                           ;lcd_trials_4bits.c: 297: putrsXLCD("Iset=");
  5329  0030C6  0EB0               	movlw	low STR_52
  5330  0030C8  6E18               	movwf	putrsXLCD@buffer,c
  5331  0030CA  0EBF               	movlw	high STR_52
  5332  0030CC  6E19               	movwf	putrsXLCD@buffer+1,c
  5333  0030CE  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5334                           
  5335                           ;lcd_trials_4bits.c: 298: putrsXLCD(ResultString_set_i);
  5336  0030D2  0E00               	movlw	low _ResultString_set_i
  5337  0030D4  6E18               	movwf	putrsXLCD@buffer,c
  5338  0030D6  0E01               	movlw	high _ResultString_set_i
  5339  0030D8  6E19               	movwf	putrsXLCD@buffer+1,c
  5340  0030DA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5341                           
  5342                           ;lcd_trials_4bits.c: 299: putrsXLCD("A           ");
  5343  0030DE  0E54               	movlw	low STR_53
  5344  0030E0  6E18               	movwf	putrsXLCD@buffer,c
  5345  0030E2  0EBF               	movlw	high STR_53
  5346  0030E4  6E19               	movwf	putrsXLCD@buffer+1,c
  5347  0030E6  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5348  0030EA  0012               	return		;funcret
  5349  0030EC                     __end_of_current_auto_limit_set_display:
  5350                           	opt stack 0
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           intcon	equ	0xFF2
  5356                           intcon2	equ	0xFF1
  5357                           postinc0	equ	0xFEE
  5358                           wreg	equ	0xFE8
  5359                           postdec1	equ	0xFE5
  5360                           fsr1l	equ	0xFE1
  5361                           indf2	equ	0xFDF
  5362                           fsr2h	equ	0xFDA
  5363                           fsr2l	equ	0xFD9
  5364                           status	equ	0xFD8
  5365                           
  5366 ;; *************** function _send_dac_i_spi *****************
  5367 ;; Defined at:
  5368 ;;		line 123 in file "ADC_user_functions.h"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;		None
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;Total ram usage:        0 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    6
  5389 ;; This function calls:
  5390 ;;		_WriteSPI
  5391 ;;		_init_dac_SPI
  5392 ;; This function is called by:
  5393 ;;		_current_auto_limit_set_display
  5394 ;;		_main
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text23
  5399  003C7A                     __ptext23:
  5400                           	opt stack 0
  5401  003C7A                     _send_dac_i_spi:
  5402                           	opt stack 24
  5403                           
  5404                           ;ADC_user_functions.h: 124: dac_i_low = DAC_i;
  5405                           
  5406                           ;incstack = 0
  5407  003C7A  C065  F05B         	movff	_DAC_i,_dac_i_low
  5408                           
  5409                           ;ADC_user_functions.h: 125: cmd_dac_i_high = (DAC_i >> 8) & 0b00001111;
  5410  003C7E  5066               	movf	_DAC_i+1,w,c
  5411  003C80  0B0F               	andlw	15
  5412  003C82  6E5C               	movwf	_cmd_dac_i_high,c
  5413                           
  5414                           ;ADC_user_functions.h: 126: cmd_dac_i_high = cmd_dac_i_high | cmd_dac;
  5415  003C84  505C               	movf	_cmd_dac_i_high,w,c
  5416  003C86  1067               	iorwf	_cmd_dac,w,c
  5417  003C88  6E5C               	movwf	_cmd_dac_i_high,c
  5418                           
  5419                           ;ADC_user_functions.h: 127: init_dac_SPI();
  5420  003C8A  EC38  F01F         	call	_init_dac_SPI	;wreg free
  5421                           
  5422                           ;ADC_user_functions.h: 128: LATAbits.LATA7 = 0;
  5423  003C8E  9E89               	bcf	3977,7,c	;volatile
  5424                           
  5425                           ;ADC_user_functions.h: 129: __nop(); __nop(); __nop();
  5426  003C90  F000               	nop	
  5427  003C92  F000               	nop	
  5428  003C94  F000               	nop	
  5429                           
  5430                           ;ADC_user_functions.h: 130: WriteSPI(cmd_dac_i_high);
  5431  003C96  505C               	movf	_cmd_dac_i_high,w,c
  5432  003C98  EC61  F01F         	call	_WriteSPI
  5433                           
  5434                           ;ADC_user_functions.h: 131: WriteSPI(dac_i_low);
  5435  003C9C  505B               	movf	_dac_i_low,w,c
  5436  003C9E  EC61  F01F         	call	_WriteSPI
  5437                           
  5438                           ;ADC_user_functions.h: 132: LATAbits.LATA7 = 1;
  5439  003CA2  8E89               	bsf	3977,7,c	;volatile
  5440                           
  5441                           ;ADC_user_functions.h: 133: (SSPCON1 &=0xDF);
  5442  003CA4  9AC6               	bcf	4038,5,c	;volatile
  5443  003CA6  0012               	return		;funcret
  5444  003CA8                     __end_of_send_dac_i_spi:
  5445                           	opt stack 0
  5446                           tblptru	equ	0xFF8
  5447                           tblptrh	equ	0xFF7
  5448                           tblptrl	equ	0xFF6
  5449                           tablat	equ	0xFF5
  5450                           intcon	equ	0xFF2
  5451                           intcon2	equ	0xFF1
  5452                           postinc0	equ	0xFEE
  5453                           wreg	equ	0xFE8
  5454                           postdec1	equ	0xFE5
  5455                           fsr1l	equ	0xFE1
  5456                           indf2	equ	0xFDF
  5457                           fsr2h	equ	0xFDA
  5458                           fsr2l	equ	0xFD9
  5459                           status	equ	0xFD8
  5460                           
  5461 ;; *************** function _init_dac_SPI *****************
  5462 ;; Defined at:
  5463 ;;		line 101 in file "ADC_user_functions.h"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;		None
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  config_smp_p    1   27[COMRAM] unsigned char 
  5468 ;;  config_bus_m    1   26[COMRAM] unsigned char 
  5469 ;;  config_sync_    1   25[COMRAM] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5483 ;;Total ram usage:        3 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    5
  5486 ;; This function calls:
  5487 ;;		_OpenSPI
  5488 ;; This function is called by:
  5489 ;;		_send_dac_u_spi
  5490 ;;		_send_dac_i_spi
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494                           	psect	text24
  5495  003E70                     __ptext24:
  5496                           	opt stack 0
  5497  003E70                     _init_dac_SPI:
  5498                           	opt stack 24
  5499                           
  5500                           ;ADC_user_functions.h: 103: unsigned char config_sync_mode = 0b00000010;
  5501                           
  5502                           ;incstack = 0
  5503  003E70  0E02               	movlw	2
  5504  003E72  6E1A               	movwf	init_dac_SPI@config_sync_mode,c
  5505                           
  5506                           ;ADC_user_functions.h: 104: unsigned char config_bus_mode = 0b00000010;
  5507  003E74  0E02               	movlw	2
  5508  003E76  6E1B               	movwf	init_dac_SPI@config_bus_mode,c
  5509                           
  5510                           ;ADC_user_functions.h: 105: unsigned char config_smp_phase = 0b00000000;
  5511  003E78  0E00               	movlw	0
  5512  003E7A  6E1C               	movwf	init_dac_SPI@config_smp_phase,c
  5513                           
  5514                           ;ADC_user_functions.h: 107: OpenSPI( config_sync_mode, config_bus_mode, config_smp_phase
      +                          );
  5515  003E7C  C01B  F017         	movff	init_dac_SPI@config_bus_mode,OpenSPI@bus_mode
  5516  003E80  C01C  F018         	movff	init_dac_SPI@config_smp_phase,OpenSPI@smp_phase
  5517  003E84  501A               	movf	init_dac_SPI@config_sync_mode,w,c
  5518  003E86  ECAC  F01C         	call	_OpenSPI
  5519  003E8A  0012               	return		;funcret
  5520  003E8C                     __end_of_init_dac_SPI:
  5521                           	opt stack 0
  5522                           tblptru	equ	0xFF8
  5523                           tblptrh	equ	0xFF7
  5524                           tblptrl	equ	0xFF6
  5525                           tablat	equ	0xFF5
  5526                           intcon	equ	0xFF2
  5527                           intcon2	equ	0xFF1
  5528                           postinc0	equ	0xFEE
  5529                           wreg	equ	0xFE8
  5530                           postdec1	equ	0xFE5
  5531                           fsr1l	equ	0xFE1
  5532                           indf2	equ	0xFDF
  5533                           fsr2h	equ	0xFDA
  5534                           fsr2l	equ	0xFD9
  5535                           status	equ	0xFD8
  5536                           
  5537 ;; *************** function _OpenSPI *****************
  5538 ;; Defined at:
  5539 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\SPI\spi_open.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  sync_mode       1    wreg     unsigned char 
  5542 ;;  bus_mode        1   22[COMRAM] unsigned char 
  5543 ;;  smp_phase       1   23[COMRAM] unsigned char 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  sync_mode       1   24[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5555 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;Total ram usage:        3 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    4
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_init_dig_pot_SPI
  5566 ;;		_init_dac_SPI
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text25
  5571  003958                     __ptext25:
  5572                           	opt stack 0
  5573  003958                     _OpenSPI:
  5574                           	opt stack 24
  5575                           
  5576                           ;incstack = 0
  5577                           ;OpenSPI@sync_mode stored from wreg
  5578  003958  6E19               	movwf	OpenSPI@sync_mode,c
  5579  00395A  0E3F               	movlw	63
  5580  00395C  16C7               	andwf	4039,f,c	;volatile
  5581  00395E  0E00               	movlw	0
  5582  003960  6EC6               	movwf	4038,c	;volatile
  5583  003962  5019               	movf	OpenSPI@sync_mode,w,c
  5584  003964  12C6               	iorwf	4038,f,c	;volatile
  5585  003966  5018               	movf	OpenSPI@smp_phase,w,c
  5586  003968  12C7               	iorwf	4039,f,c	;volatile
  5587  00396A  D005               	goto	l3730
  5588  00396C                     l743:
  5589  00396C  8CC7               	bsf	4039,6,c	;volatile
  5590  00396E  D015               	goto	l3734
  5591  003970                     l745:
  5592  003970  8CC7               	bsf	4039,6,c	;volatile
  5593  003972                     l746:
  5594  003972  88C6               	bsf	4038,4,c	;volatile
  5595  003974  D012               	goto	l3734
  5596  003976                     l3730:
  5597  003976  5017               	movf	OpenSPI@bus_mode,w,c
  5598                           
  5599                           ; Switch size 1, requested type "space"
  5600                           ; Number of cases is 3, Range of values is 0 to 3
  5601                           ; switch strategies available:
  5602                           ; Name         Instructions Cycles
  5603                           ; simple_byte           10     6 (average)
  5604                           ;	Chosen strategy is simple_byte
  5605  003978  0A00               	xorlw	0	; case 0
  5606  00397A  B4D8               	btfsc	status,2,c
  5607  00397C  D7F7               	goto	l743
  5608  00397E  0A02               	xorlw	2	; case 2
  5609  003980  B4D8               	btfsc	status,2,c
  5610  003982  D7F6               	goto	l745
  5611  003984  0A01               	xorlw	1	; case 3
  5612  003986  B4D8               	btfsc	status,2,c
  5613  003988  D7F4               	goto	l746
  5614  00398A  D007               	goto	l3734
  5615  00398C                     l749:
  5616  00398C  8694               	bsf	3988,3,c	;volatile
  5617  00398E  8A92               	bsf	3986,5,c	;volatile
  5618  003990  D00C               	goto	l750
  5619  003992                     l751:
  5620  003992  8694               	bsf	3988,3,c	;volatile
  5621  003994  D00A               	goto	l750
  5622  003996                     l752:
  5623  003996  9694               	bcf	3988,3,c	;volatile
  5624  003998  D008               	goto	l750
  5625  00399A                     l3734:
  5626  00399A  5019               	movf	OpenSPI@sync_mode,w,c
  5627                           
  5628                           ; Switch size 1, requested type "space"
  5629                           ; Number of cases is 2, Range of values is 4 to 5
  5630                           ; switch strategies available:
  5631                           ; Name         Instructions Cycles
  5632                           ; simple_byte            7     4 (average)
  5633                           ;	Chosen strategy is simple_byte
  5634  00399C  0A04               	xorlw	4	; case 4
  5635  00399E  B4D8               	btfsc	status,2,c
  5636  0039A0  D7F5               	goto	l749
  5637  0039A2  0A01               	xorlw	1	; case 5
  5638  0039A4  B4D8               	btfsc	status,2,c
  5639  0039A6  D7F5               	goto	l751
  5640  0039A8  D7F6               	goto	l752
  5641  0039AA                     l750:
  5642  0039AA  8894               	bsf	3988,4,c	;volatile
  5643  0039AC  9A94               	bcf	3988,5,c	;volatile
  5644  0039AE  8AC6               	bsf	4038,5,c	;volatile
  5645  0039B0  0012               	return		;funcret
  5646  0039B2                     __end_of_OpenSPI:
  5647                           	opt stack 0
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           intcon	equ	0xFF2
  5653                           intcon2	equ	0xFF1
  5654                           postinc0	equ	0xFEE
  5655                           wreg	equ	0xFE8
  5656                           postdec1	equ	0xFE5
  5657                           fsr1l	equ	0xFE1
  5658                           indf2	equ	0xFDF
  5659                           fsr2h	equ	0xFDA
  5660                           fsr2l	equ	0xFD9
  5661                           status	equ	0xFD8
  5662                           
  5663 ;; *************** function _WriteSPI *****************
  5664 ;; Defined at:
  5665 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\SPI\spi_writ.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  data_out        1    wreg     unsigned char 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;  data_out        1   23[COMRAM] unsigned char 
  5670 ;;  TempVar         1   22[COMRAM] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      char 
  5673 ;; Registers used:
  5674 ;;		wreg
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;Total ram usage:        2 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    4
  5687 ;; This function calls:
  5688 ;;		Nothing
  5689 ;; This function is called by:
  5690 ;;		_send_contrast_spi
  5691 ;;		_send_backlight_spi
  5692 ;;		_send_dac_u_spi
  5693 ;;		_send_dac_i_spi
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text26
  5698  003EC2                     __ptext26:
  5699                           	opt stack 0
  5700  003EC2                     _WriteSPI:
  5701                           	opt stack 25
  5702                           
  5703                           ;incstack = 0
  5704                           ;WriteSPI@data_out stored from wreg
  5705  003EC2  6E18               	movwf	WriteSPI@data_out,c
  5706  003EC4  CFC9 F017          	movff	4041,WriteSPI@TempVar	;volatile
  5707  003EC8  969E               	bcf	3998,3,c	;volatile
  5708  003ECA  9EC6               	bcf	4038,7,c	;volatile
  5709  003ECC  C018  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  5710  003ED0  BEC6               	btfsc	4038,7,c	;volatile
  5711  003ED2  0012               	return	
  5712  003ED4                     l767:
  5713  003ED4  B69E               	btfsc	3998,3,c	;volatile
  5714  003ED6  0012               	return	
  5715  003ED8  D7FD               	goto	l767
  5716  003EDA                     __end_of_WriteSPI:
  5717                           	opt stack 0
  5718                           tblptru	equ	0xFF8
  5719                           tblptrh	equ	0xFF7
  5720                           tblptrl	equ	0xFF6
  5721                           tablat	equ	0xFF5
  5722                           intcon	equ	0xFF2
  5723                           intcon2	equ	0xFF1
  5724                           postinc0	equ	0xFEE
  5725                           wreg	equ	0xFE8
  5726                           postdec1	equ	0xFE5
  5727                           fsr1l	equ	0xFE1
  5728                           indf2	equ	0xFDF
  5729                           fsr2h	equ	0xFDA
  5730                           fsr2l	equ	0xFD9
  5731                           status	equ	0xFD8
  5732                           
  5733 ;; *************** function _contrast_display *****************
  5734 ;; Defined at:
  5735 ;;		line 179 in file "lcd_trials_4bits.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;Total ram usage:        0 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    8
  5756 ;; This function calls:
  5757 ;;		_SetDDRamAddr
  5758 ;;		___lwdiv
  5759 ;;		___lwtoft
  5760 ;;		___wmul
  5761 ;;		_putrsXLCD
  5762 ;;		_sprintf
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text27
  5769  0031E0                     __ptext27:
  5770                           	opt stack 0
  5771  0031E0                     _contrast_display:
  5772                           	opt stack 22
  5773                           
  5774                           ;lcd_trials_4bits.c: 181: display_contrast_percent = ((display_contrast)*100)/255;
  5775                           
  5776                           ;incstack = 0
  5777  0031E0  0E00               	movlw	0
  5778  0031E2  6E2E               	movwf	___lwdiv@divisor+1,c
  5779  0031E4  682D               	setf	___lwdiv@divisor,c
  5780  0031E6  C061  F025         	movff	_display_contrast,___wmul@multiplier
  5781  0031EA  C062  F026         	movff	_display_contrast+1,___wmul@multiplier+1
  5782  0031EE  0E00               	movlw	0
  5783  0031F0  6E28               	movwf	___wmul@multiplicand+1,c
  5784  0031F2  0E64               	movlw	100
  5785  0031F4  6E27               	movwf	___wmul@multiplicand,c
  5786  0031F6  ECD5  F01E         	call	___wmul	;wreg free
  5787  0031FA  C025  F02B         	movff	?___wmul,___lwdiv@dividend
  5788  0031FE  C026  F02C         	movff	?___wmul+1,___lwdiv@dividend+1
  5789  003202  EC06  F01D         	call	___lwdiv	;wreg free
  5790  003206  C02B  F032         	movff	?___lwdiv,___lwtoft@c
  5791  00320A  C02C  F033         	movff	?___lwdiv+1,___lwtoft@c+1
  5792  00320E  ECFA  F01E         	call	___lwtoft	;wreg free
  5793  003212  C032  F0CE         	movff	?___lwtoft,_display_contrast_percent
  5794  003216  C033  F0CF         	movff	?___lwtoft+1,_display_contrast_percent+1
  5795  00321A  C034  F0D0         	movff	?___lwtoft+2,_display_contrast_percent+2
  5796                           
  5797                           ;lcd_trials_4bits.c: 182: sprintf(ResultString_contrast, "%-3u", (display_contrast));
  5798  00321E  0E32               	movlw	low _ResultString_contrast
  5799  003220  0100               	movlb	0	; () banked
  5800  003222  6FB5               	movwf	sprintf@sp& (0+255),b
  5801  003224  0E01               	movlw	high _ResultString_contrast
  5802  003226  0100               	movlb	0	; () banked
  5803  003228  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  5804  00322A  0EE4               	movlw	low STR_14
  5805  00322C  0100               	movlb	0	; () banked
  5806  00322E  6FB7               	movwf	sprintf@f& (0+255),b
  5807  003230  0EBF               	movlw	high STR_14
  5808  003232  0100               	movlb	0	; () banked
  5809  003234  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  5810  003236  C061  F0B9         	movff	_display_contrast,?_sprintf+4
  5811  00323A  C062  F0BA         	movff	_display_contrast+1,?_sprintf+5
  5812  00323E  EC09  F000         	call	_sprintf	;wreg free
  5813                           
  5814                           ;lcd_trials_4bits.c: 183: sprintf(ResultString_contrast_percent, "%3.3g", display_contra
      +                          st_percent);
  5815  003242  0E37               	movlw	low _ResultString_contrast_percent
  5816  003244  0100               	movlb	0	; () banked
  5817  003246  6FB5               	movwf	sprintf@sp& (0+255),b
  5818  003248  0E01               	movlw	high _ResultString_contrast_percent
  5819  00324A  0100               	movlb	0	; () banked
  5820  00324C  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  5821  00324E  0ED4               	movlw	low STR_15
  5822  003250  0100               	movlb	0	; () banked
  5823  003252  6FB7               	movwf	sprintf@f& (0+255),b
  5824  003254  0EBF               	movlw	high STR_15
  5825  003256  0100               	movlb	0	; () banked
  5826  003258  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  5827  00325A  C0CE  F0B9         	movff	_display_contrast_percent,?_sprintf+4
  5828  00325E  C0CF  F0BA         	movff	_display_contrast_percent+1,?_sprintf+5
  5829  003262  C0D0  F0BB         	movff	_display_contrast_percent+2,?_sprintf+6
  5830  003266  EC09  F000         	call	_sprintf	;wreg free
  5831                           
  5832                           ;lcd_trials_4bits.c: 184: SetDDRamAddr (0x00);
  5833  00326A  0E00               	movlw	0
  5834  00326C  EC2F  F01D         	call	_SetDDRamAddr
  5835                           
  5836                           ;lcd_trials_4bits.c: 185: if (step_size_mode == 1) {
  5837  003270  0100               	movlb	0	; () banked
  5838  003272  05F9               	decf	_step_size_mode& (0+255),w,b
  5839  003274  A4D8               	btfss	status,2,c
  5840  003276  D007               	goto	l7032
  5841                           
  5842                           ; BSR set to: 0
  5843                           ;lcd_trials_4bits.c: 187: putrsXLCD("CONTRAST FINE:  ");
  5844  003278  0EDD               	movlw	low STR_16
  5845  00327A  6E18               	movwf	putrsXLCD@buffer,c
  5846  00327C  0EBE               	movlw	high STR_16
  5847  00327E  6E19               	movwf	putrsXLCD@buffer+1,c
  5848  003280  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5849                           
  5850                           ;lcd_trials_4bits.c: 188: } else{
  5851  003284  D006               	goto	l7034
  5852  003286                     l7032:
  5853                           
  5854                           ;lcd_trials_4bits.c: 190: putrsXLCD("CONTRAST ROUGH: ");
  5855  003286  0E10               	movlw	low STR_17
  5856  003288  6E18               	movwf	putrsXLCD@buffer,c
  5857  00328A  0EBF               	movlw	high STR_17
  5858  00328C  6E19               	movwf	putrsXLCD@buffer+1,c
  5859  00328E  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5860  003292                     l7034:
  5861                           
  5862                           ;lcd_trials_4bits.c: 191: }
  5863                           ;lcd_trials_4bits.c: 193: SetDDRamAddr (0x40);
  5864  003292  0E40               	movlw	64
  5865  003294  EC2F  F01D         	call	_SetDDRamAddr
  5866                           
  5867                           ;lcd_trials_4bits.c: 194: putrsXLCD("(1:255):");
  5868  003298  0E98               	movlw	low STR_18
  5869  00329A  6E18               	movwf	putrsXLCD@buffer,c
  5870  00329C  0EBF               	movlw	high STR_18
  5871  00329E  6E19               	movwf	putrsXLCD@buffer+1,c
  5872  0032A0  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5873                           
  5874                           ;lcd_trials_4bits.c: 195: putrsXLCD(ResultString_contrast);
  5875  0032A4  0E32               	movlw	low _ResultString_contrast
  5876  0032A6  6E18               	movwf	putrsXLCD@buffer,c
  5877  0032A8  0E01               	movlw	high _ResultString_contrast
  5878  0032AA  6E19               	movwf	putrsXLCD@buffer+1,c
  5879  0032AC  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5880                           
  5881                           ;lcd_trials_4bits.c: 196: SetDDRamAddr (0x4C);
  5882  0032B0  0E4C               	movlw	76
  5883  0032B2  EC2F  F01D         	call	_SetDDRamAddr
  5884                           
  5885                           ;lcd_trials_4bits.c: 197: putrsXLCD(ResultString_contrast_percent);
  5886  0032B6  0E37               	movlw	low _ResultString_contrast_percent
  5887  0032B8  6E18               	movwf	putrsXLCD@buffer,c
  5888  0032BA  0E01               	movlw	high _ResultString_contrast_percent
  5889  0032BC  6E19               	movwf	putrsXLCD@buffer+1,c
  5890  0032BE  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5891                           
  5892                           ;lcd_trials_4bits.c: 198: putrsXLCD("%");
  5893  0032C2  0EFD               	movlw	low STR_19
  5894  0032C4  6E18               	movwf	putrsXLCD@buffer,c
  5895  0032C6  0EBF               	movlw	high STR_19
  5896  0032C8  6E19               	movwf	putrsXLCD@buffer+1,c
  5897  0032CA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  5898  0032CE  0012               	return		;funcret
  5899  0032D0                     __end_of_contrast_display:
  5900                           	opt stack 0
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           intcon	equ	0xFF2
  5906                           intcon2	equ	0xFF1
  5907                           postinc0	equ	0xFEE
  5908                           wreg	equ	0xFE8
  5909                           postdec1	equ	0xFE5
  5910                           fsr1l	equ	0xFE1
  5911                           indf2	equ	0xFDF
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _brightness_display *****************
  5917 ;; Defined at:
  5918 ;;		line 201 in file "lcd_trials_4bits.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    8
  5939 ;; This function calls:
  5940 ;;		_SetDDRamAddr
  5941 ;;		___lwdiv
  5942 ;;		___lwtoft
  5943 ;;		___wmul
  5944 ;;		_putrsXLCD
  5945 ;;		_sprintf
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text28
  5952  0032D0                     __ptext28:
  5953                           	opt stack 0
  5954  0032D0                     _brightness_display:
  5955                           	opt stack 22
  5956                           
  5957                           ;lcd_trials_4bits.c: 203: display_brightness_percent = (display_brightness*100)/255;
  5958                           
  5959                           ;incstack = 0
  5960  0032D0  0E00               	movlw	0
  5961  0032D2  6E2E               	movwf	___lwdiv@divisor+1,c
  5962  0032D4  682D               	setf	___lwdiv@divisor,c
  5963  0032D6  C05F  F025         	movff	_display_brightness,___wmul@multiplier
  5964  0032DA  C060  F026         	movff	_display_brightness+1,___wmul@multiplier+1
  5965  0032DE  0E00               	movlw	0
  5966  0032E0  6E28               	movwf	___wmul@multiplicand+1,c
  5967  0032E2  0E64               	movlw	100
  5968  0032E4  6E27               	movwf	___wmul@multiplicand,c
  5969  0032E6  ECD5  F01E         	call	___wmul	;wreg free
  5970  0032EA  C025  F02B         	movff	?___wmul,___lwdiv@dividend
  5971  0032EE  C026  F02C         	movff	?___wmul+1,___lwdiv@dividend+1
  5972  0032F2  EC06  F01D         	call	___lwdiv	;wreg free
  5973  0032F6  C02B  F032         	movff	?___lwdiv,___lwtoft@c
  5974  0032FA  C02C  F033         	movff	?___lwdiv+1,___lwtoft@c+1
  5975  0032FE  ECFA  F01E         	call	___lwtoft	;wreg free
  5976  003302  C032  F052         	movff	?___lwtoft,_display_brightness_percent
  5977  003306  C033  F053         	movff	?___lwtoft+1,_display_brightness_percent+1
  5978  00330A  C034  F054         	movff	?___lwtoft+2,_display_brightness_percent+2
  5979                           
  5980                           ;lcd_trials_4bits.c: 204: sprintf(ResultString_brightness, "%-3u", display_brightness);
  5981  00330E  0E2D               	movlw	low _ResultString_brightness
  5982  003310  0100               	movlb	0	; () banked
  5983  003312  6FB5               	movwf	sprintf@sp& (0+255),b
  5984  003314  0E01               	movlw	high _ResultString_brightness
  5985  003316  0100               	movlb	0	; () banked
  5986  003318  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  5987  00331A  0EE4               	movlw	low STR_14
  5988  00331C  0100               	movlb	0	; () banked
  5989  00331E  6FB7               	movwf	sprintf@f& (0+255),b
  5990  003320  0EBF               	movlw	high STR_14
  5991  003322  0100               	movlb	0	; () banked
  5992  003324  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  5993  003326  C05F  F0B9         	movff	_display_brightness,?_sprintf+4
  5994  00332A  C060  F0BA         	movff	_display_brightness+1,?_sprintf+5
  5995  00332E  EC09  F000         	call	_sprintf	;wreg free
  5996                           
  5997                           ;lcd_trials_4bits.c: 205: sprintf(ResultString_brightness_percent, "%3.3g", display_brig
      +                          htness_percent);
  5998  003332  0E28               	movlw	low _ResultString_brightness_percent
  5999  003334  0100               	movlb	0	; () banked
  6000  003336  6FB5               	movwf	sprintf@sp& (0+255),b
  6001  003338  0E01               	movlw	high _ResultString_brightness_percent
  6002  00333A  0100               	movlb	0	; () banked
  6003  00333C  6FB6               	movwf	(sprintf@sp+1)& (0+255),b
  6004  00333E  0ED4               	movlw	low STR_15
  6005  003340  0100               	movlb	0	; () banked
  6006  003342  6FB7               	movwf	sprintf@f& (0+255),b
  6007  003344  0EBF               	movlw	high STR_15
  6008  003346  0100               	movlb	0	; () banked
  6009  003348  6FB8               	movwf	(sprintf@f+1)& (0+255),b
  6010  00334A  C052  F0B9         	movff	_display_brightness_percent,?_sprintf+4
  6011  00334E  C053  F0BA         	movff	_display_brightness_percent+1,?_sprintf+5
  6012  003352  C054  F0BB         	movff	_display_brightness_percent+2,?_sprintf+6
  6013  003356  EC09  F000         	call	_sprintf	;wreg free
  6014                           
  6015                           ;lcd_trials_4bits.c: 206: SetDDRamAddr (0x00);
  6016  00335A  0E00               	movlw	0
  6017  00335C  EC2F  F01D         	call	_SetDDRamAddr
  6018                           
  6019                           ;lcd_trials_4bits.c: 207: if (step_size_mode == 1) {
  6020  003360  0100               	movlb	0	; () banked
  6021  003362  05F9               	decf	_step_size_mode& (0+255),w,b
  6022  003364  A4D8               	btfss	status,2,c
  6023  003366  D007               	goto	l7054
  6024                           
  6025                           ; BSR set to: 0
  6026                           ;lcd_trials_4bits.c: 209: putrsXLCD("BACKLIGHT FINE: ");
  6027  003368  0EFF               	movlw	low STR_22
  6028  00336A  6E18               	movwf	putrsXLCD@buffer,c
  6029  00336C  0EBE               	movlw	high STR_22
  6030  00336E  6E19               	movwf	putrsXLCD@buffer+1,c
  6031  003370  EC7E  F01C         	call	_putrsXLCD	;wreg free
  6032                           
  6033                           ;lcd_trials_4bits.c: 210: } else{
  6034  003374  D006               	goto	l7056
  6035  003376                     l7054:
  6036                           
  6037                           ;lcd_trials_4bits.c: 212: putrsXLCD("BACKLIGHT ROUGH:");
  6038  003376  0E43               	movlw	low STR_23
  6039  003378  6E18               	movwf	putrsXLCD@buffer,c
  6040  00337A  0EBF               	movlw	high STR_23
  6041  00337C  6E19               	movwf	putrsXLCD@buffer+1,c
  6042  00337E  EC7E  F01C         	call	_putrsXLCD	;wreg free
  6043  003382                     l7056:
  6044                           
  6045                           ;lcd_trials_4bits.c: 213: }
  6046                           ;lcd_trials_4bits.c: 215: SetDDRamAddr (0x40);
  6047  003382  0E40               	movlw	64
  6048  003384  EC2F  F01D         	call	_SetDDRamAddr
  6049                           
  6050                           ;lcd_trials_4bits.c: 216: putrsXLCD("(1:255):");
  6051  003388  0E98               	movlw	low STR_18
  6052  00338A  6E18               	movwf	putrsXLCD@buffer,c
  6053  00338C  0EBF               	movlw	high STR_18
  6054  00338E  6E19               	movwf	putrsXLCD@buffer+1,c
  6055  003390  EC7E  F01C         	call	_putrsXLCD	;wreg free
  6056                           
  6057                           ;lcd_trials_4bits.c: 217: putrsXLCD(ResultString_brightness);
  6058  003394  0E2D               	movlw	low _ResultString_brightness
  6059  003396  6E18               	movwf	putrsXLCD@buffer,c
  6060  003398  0E01               	movlw	high _ResultString_brightness
  6061  00339A  6E19               	movwf	putrsXLCD@buffer+1,c
  6062  00339C  EC7E  F01C         	call	_putrsXLCD	;wreg free
  6063                           
  6064                           ;lcd_trials_4bits.c: 218: SetDDRamAddr (0x4C);
  6065  0033A0  0E4C               	movlw	76
  6066  0033A2  EC2F  F01D         	call	_SetDDRamAddr
  6067                           
  6068                           ;lcd_trials_4bits.c: 219: putrsXLCD(ResultString_brightness_percent);
  6069  0033A6  0E28               	movlw	low _ResultString_brightness_percent
  6070  0033A8  6E18               	movwf	putrsXLCD@buffer,c
  6071  0033AA  0E01               	movlw	high _ResultString_brightness_percent
  6072  0033AC  6E19               	movwf	putrsXLCD@buffer+1,c
  6073  0033AE  EC7E  F01C         	call	_putrsXLCD	;wreg free
  6074                           
  6075                           ;lcd_trials_4bits.c: 220: putrsXLCD("%");
  6076  0033B2  0EFD               	movlw	low STR_19
  6077  0033B4  6E18               	movwf	putrsXLCD@buffer,c
  6078  0033B6  0EBF               	movlw	high STR_19
  6079  0033B8  6E19               	movwf	putrsXLCD@buffer+1,c
  6080  0033BA  EC7E  F01C         	call	_putrsXLCD	;wreg free
  6081  0033BE  0012               	return		;funcret
  6082  0033C0                     __end_of_brightness_display:
  6083                           	opt stack 0
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           intcon	equ	0xFF2
  6089                           intcon2	equ	0xFF1
  6090                           postinc0	equ	0xFEE
  6091                           wreg	equ	0xFE8
  6092                           postdec1	equ	0xFE5
  6093                           fsr1l	equ	0xFE1
  6094                           indf2	equ	0xFDF
  6095                           fsr2h	equ	0xFDA
  6096                           fsr2l	equ	0xFD9
  6097                           status	equ	0xFD8
  6098                           
  6099 ;; *************** function _sprintf *****************
  6100 ;; Defined at:
  6101 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  sp              2   53[BANK0 ] PTR unsigned char 
  6104 ;;		 -> ResultString_set_u(10), ResultString_brightness_percent(5), ResultString_brightness(5), ResultString_contrast_pe
      +rcent(5), 
  6105 ;;		 -> ResultString_contrast(5), ResultString_set_i(10), ResultString_i(10), ResultString_u(10), 
  6106 ;;  f               2   55[BANK0 ] PTR const unsigned char 
  6107 ;;		 -> STR_59(6), STR_58(6), STR_50(6), STR_45(6), 
  6108 ;;		 -> STR_42(6), STR_37(6), STR_34(6), STR_30(6), 
  6109 ;;		 -> STR_26(6), STR_21(6), STR_20(5), STR_15(6), 
  6110 ;;		 -> STR_14(5), STR_12(6), STR_9(6), STR_6(6), 
  6111 ;; Auto vars:     Size  Location     Type
  6112 ;;  temp            3    3[BANK1 ] PTR const unsigned char 
  6113 ;;  val             4   14[BANK1 ] unsigned long 
  6114 ;;  tmpval          4    8[BANK1 ] struct .
  6115 ;;  fval            3   22[BANK1 ] struct .
  6116 ;;  cp              3    0        PTR const unsigned char 
  6117 ;;  prec            2   25[BANK1 ] int 
  6118 ;;  exp             2   20[BANK1 ] int 
  6119 ;;  flag            2   18[BANK1 ] unsigned short 
  6120 ;;  width           2   12[BANK1 ] int 
  6121 ;;  ap              2    6[BANK1 ] PTR void [1]
  6122 ;;		 -> ?_sprintf(2), 
  6123 ;;  len             2    0        unsigned int 
  6124 ;;  c               1   27[BANK1 ] char 
  6125 ;;  d               1    0        unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2   53[BANK0 ] int 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6135 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Totals:         0      13      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;Total ram usage:       41 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    7
  6142 ;; This function calls:
  6143 ;;		___awdiv
  6144 ;;		___awmod
  6145 ;;		___ftadd
  6146 ;;		___ftdiv
  6147 ;;		___ftge
  6148 ;;		___ftmul
  6149 ;;		___ftneg
  6150 ;;		___ftsub
  6151 ;;		___fttol
  6152 ;;		___lldiv
  6153 ;;		___llmod
  6154 ;;		___lltoft
  6155 ;;		___wmul
  6156 ;;		__div_to_l_
  6157 ;;		__tdiv_to_l_
  6158 ;;		_fround
  6159 ;;		_isdigit
  6160 ;;		_scale
  6161 ;; This function is called by:
  6162 ;;		_default_display
  6163 ;;		_contrast_display
  6164 ;;		_brightness_display
  6165 ;;		_voltage_set_display
  6166 ;;		_current_protection_set_display
  6167 ;;		_current_limit_set_display
  6168 ;;		_current_auto_limit_set_display
  6169 ;;		_main
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text29
  6174  000012                     __ptext29:
  6175                           	opt stack 0
  6176  000012                     _sprintf:
  6177                           	opt stack 22
  6178                           
  6179                           ;doprnt.c: 494: va_list ap;
  6180                           ;doprnt.c: 499: signed char c;
  6181                           ;doprnt.c: 501: int width;
  6182                           ;doprnt.c: 504: int prec;
  6183                           ;doprnt.c: 508: unsigned short flag;
  6184                           ;doprnt.c: 515: char d;
  6185                           ;doprnt.c: 516: double fval;
  6186                           ;doprnt.c: 517: int exp;
  6187                           ;doprnt.c: 523: union {
  6188                           ;doprnt.c: 524: unsigned long vd;
  6189                           ;doprnt.c: 525: double integ;
  6190                           ;doprnt.c: 526: } tmpval;
  6191                           ;doprnt.c: 528: unsigned long val;
  6192                           ;doprnt.c: 529: unsigned len;
  6193                           ;doprnt.c: 530: const char * cp;
  6194                           ;doprnt.c: 533: *ap = __va_start();
  6195                           
  6196                           ;incstack = 0
  6197  000012  0EB9               	movlw	low (?_sprintf+4)
  6198  000014  0101               	movlb	1	; () banked
  6199  000016  6F42               	movwf	sprintf@ap& (0+255),b
  6200  000018  0E00               	movlw	high (?_sprintf+4)
  6201  00001A  0101               	movlb	1	; () banked
  6202  00001C  6F43               	movwf	(sprintf@ap+1)& (0+255),b
  6203                           
  6204                           ;doprnt.c: 536: while(c = *f++) {
  6205  00001E  EF16  F00A         	goto	l6954
  6206  000022                     l6476:
  6207                           
  6208                           ; BSR set to: 1
  6209                           ;doprnt.c: 538: if(c != '%')
  6210  000022  0E25               	movlw	37
  6211  000024  0101               	movlb	1	; () banked
  6212  000026  1957               	xorwf	sprintf@c& (0+255),w,b
  6213  000028  B4D8               	btfsc	status,2,c
  6214  00002A  D00B               	goto	l6482
  6215                           
  6216                           ; BSR set to: 1
  6217                           ;doprnt.c: 540: {
  6218                           ;doprnt.c: 541: ((*sp++ = (c)));
  6219  00002C  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  6220  000030  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  6221  000034  C157  FFDF         	movff	sprintf@c,indf2
  6222                           
  6223                           ; BSR set to: 1
  6224  000038  0100               	movlb	0	; () banked
  6225  00003A  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  6226  00003C  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  6227                           
  6228                           ;doprnt.c: 542: continue;
  6229  00003E  EF16  F00A         	goto	l6954
  6230  000042                     l6482:
  6231                           
  6232                           ;doprnt.c: 543: }
  6233                           ;doprnt.c: 546: width = 0;
  6234  000042  0E00               	movlw	0
  6235  000044  0101               	movlb	1	; () banked
  6236  000046  6F49               	movwf	(sprintf@width+1)& (0+255),b
  6237  000048  0E00               	movlw	0
  6238  00004A  6F48               	movwf	sprintf@width& (0+255),b
  6239                           
  6240                           ;doprnt.c: 548: flag = 0;
  6241  00004C  0E00               	movlw	0
  6242  00004E  0101               	movlb	1	; () banked
  6243  000050  6F4F               	movwf	(sprintf@flag+1)& (0+255),b
  6244  000052  0E00               	movlw	0
  6245  000054  6F4E               	movwf	sprintf@flag& (0+255),b
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;doprnt.c: 551: switch(*f) {
  6249                           
  6250                           ;doprnt.c: 550: for(;;) {
  6251  000056  D005               	goto	l6488
  6252  000058                     l6484:
  6253                           
  6254                           ;doprnt.c: 554: flag |= 0x08;
  6255  000058  0101               	movlb	1	; () banked
  6256  00005A  874E               	bsf	sprintf@flag& (0+255),3,b
  6257                           
  6258                           ;doprnt.c: 555: f++;
  6259  00005C  0100               	movlb	0	; () banked
  6260  00005E  4BB7               	infsnz	sprintf@f& (0+255),f,b
  6261  000060  2BB8               	incf	(sprintf@f+1)& (0+255),f,b
  6262  000062                     l6488:
  6263  000062  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6264  000066  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6265  00006A                     	if	0	;tblptru may be non-zero
  6266  00006A                     	endif
  6267  00006A                     	if	0	;tblptru may be non-zero
  6268  00006A                     	endif
  6269  00006A  0008               	tblrd		*
  6270  00006C  50F5               	movf	tablat,w,c
  6271                           
  6272                           ; Switch size 1, requested type "space"
  6273                           ; Number of cases is 1, Range of values is 45 to 45
  6274                           ; switch strategies available:
  6275                           ; Name         Instructions Cycles
  6276                           ; simple_byte            4     3 (average)
  6277                           ;	Chosen strategy is simple_byte
  6278  00006E  0A2D               	xorlw	45	; case 45
  6279  000070  B4D8               	btfsc	status,2,c
  6280  000072  D7F2               	goto	l6484
  6281                           
  6282                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6283                           
  6284                           ;doprnt.c: 586: }
  6285                           
  6286                           ;doprnt.c: 585: break;
  6287  000074  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6288  000078  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6289  00007C                     	if	0	;tblptru may be non-zero
  6290  00007C                     	endif
  6291  00007C                     	if	0	;tblptru may be non-zero
  6292  00007C                     	endif
  6293  00007C  0008               	tblrd		*
  6294  00007E  50F5               	movf	tablat,w,c
  6295  000080  EC0C  F01F         	call	_isdigit
  6296  000084  A0D8               	btfss	status,0,c
  6297  000086  D03F               	goto	l6502
  6298                           
  6299                           ;doprnt.c: 598: width = 0;
  6300  000088  0E00               	movlw	0
  6301  00008A  0101               	movlb	1	; () banked
  6302  00008C  6F49               	movwf	(sprintf@width+1)& (0+255),b
  6303  00008E  0E00               	movlw	0
  6304  000090  6F48               	movwf	sprintf@width& (0+255),b
  6305  000092                     l6494:
  6306                           
  6307                           ;doprnt.c: 600: width *= 10;
  6308  000092  C148  F025         	movff	sprintf@width,___wmul@multiplier
  6309  000096  C149  F026         	movff	sprintf@width+1,___wmul@multiplier+1
  6310  00009A  0E00               	movlw	0
  6311  00009C  6E28               	movwf	___wmul@multiplicand+1,c
  6312  00009E  0E0A               	movlw	10
  6313  0000A0  6E27               	movwf	___wmul@multiplicand,c
  6314  0000A2  ECD5  F01E         	call	___wmul	;wreg free
  6315  0000A6  C025  F148         	movff	?___wmul,sprintf@width
  6316  0000AA  C026  F149         	movff	?___wmul+1,sprintf@width+1
  6317                           
  6318                           ;doprnt.c: 601: width += *f++ - '0';
  6319  0000AE  0ED0               	movlw	208
  6320  0000B0  0100               	movlb	0	; () banked
  6321  0000B2  6FBC               	movwf	??_sprintf& (0+255),b
  6322  0000B4  0EFF               	movlw	255
  6323  0000B6  0100               	movlb	0	; () banked
  6324  0000B8  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  6325  0000BA  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6326  0000BE  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6327  0000C2                     	if	0	;tblptru may be non-zero
  6328  0000C2                     	endif
  6329  0000C2                     	if	0	;tblptru may be non-zero
  6330  0000C2                     	endif
  6331  0000C2  0008               	tblrd		*
  6332  0000C4  50F5               	movf	tablat,w,c
  6333  0000C6  0100               	movlb	0	; () banked
  6334  0000C8  6FBE               	movwf	(??_sprintf+2)& (0+255),b
  6335  0000CA  6BBF               	clrf	(??_sprintf+3)& (0+255),b
  6336  0000CC  0100               	movlb	0	; () banked
  6337  0000CE  51BC               	movf	??_sprintf& (0+255),w,b
  6338  0000D0  0100               	movlb	0	; () banked
  6339  0000D2  27BE               	addwf	(??_sprintf+2)& (0+255),f,b
  6340  0000D4  0100               	movlb	0	; () banked
  6341  0000D6  51BD               	movf	(??_sprintf+1)& (0+255),w,b
  6342  0000D8  0100               	movlb	0	; () banked
  6343  0000DA  23BF               	addwfc	(??_sprintf+3)& (0+255),f,b
  6344  0000DC  0100               	movlb	0	; () banked
  6345  0000DE  51BE               	movf	(??_sprintf+2)& (0+255),w,b
  6346  0000E0  0101               	movlb	1	; () banked
  6347  0000E2  2748               	addwf	sprintf@width& (0+255),f,b
  6348  0000E4  0100               	movlb	0	; () banked
  6349  0000E6  51BF               	movf	(??_sprintf+3)& (0+255),w,b
  6350  0000E8  0101               	movlb	1	; () banked
  6351  0000EA  2349               	addwfc	(sprintf@width+1)& (0+255),f,b
  6352                           
  6353                           ; BSR set to: 1
  6354  0000EC  0100               	movlb	0	; () banked
  6355  0000EE  4BB7               	infsnz	sprintf@f& (0+255),f,b
  6356  0000F0  2BB8               	incf	(sprintf@f+1)& (0+255),f,b
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6360  0000F2  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6361  0000F6  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6362  0000FA                     	if	0	;tblptru may be non-zero
  6363  0000FA                     	endif
  6364  0000FA                     	if	0	;tblptru may be non-zero
  6365  0000FA                     	endif
  6366  0000FA  0008               	tblrd		*
  6367  0000FC  50F5               	movf	tablat,w,c
  6368  0000FE  EC0C  F01F         	call	_isdigit
  6369  000102  B0D8               	btfsc	status,0,c
  6370  000104  D7C6               	goto	l6494
  6371  000106                     l6502:
  6372                           
  6373                           ;doprnt.c: 608: }
  6374                           ;doprnt.c: 611: if(*f == '.') {
  6375  000106  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6376  00010A  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6377  00010E                     	if	0	;tblptru may be non-zero
  6378  00010E                     	endif
  6379  00010E                     	if	0	;tblptru may be non-zero
  6380  00010E                     	endif
  6381  00010E  0008               	tblrd		*
  6382  000110  50F5               	movf	tablat,w,c
  6383  000112  0A2E               	xorlw	46
  6384  000114  A4D8               	btfss	status,2,c
  6385  000116  D034               	goto	l6514
  6386                           
  6387                           ;doprnt.c: 612: flag |= 0x4000;
  6388  000118  0101               	movlb	1	; () banked
  6389  00011A  8D4F               	bsf	(sprintf@flag+1)& (0+255),6,b
  6390                           
  6391                           ;doprnt.c: 613: f++;
  6392  00011C  0100               	movlb	0	; () banked
  6393  00011E  4BB7               	infsnz	sprintf@f& (0+255),f,b
  6394  000120  2BB8               	incf	(sprintf@f+1)& (0+255),f,b
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;doprnt.c: 620: {
  6398                           ;doprnt.c: 621: prec = 0;
  6399  000122  0E00               	movlw	0
  6400  000124  0101               	movlb	1	; () banked
  6401  000126  6F56               	movwf	(sprintf@prec+1)& (0+255),b
  6402  000128  0E00               	movlw	0
  6403  00012A  6F55               	movwf	sprintf@prec& (0+255),b
  6404                           
  6405                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6406  00012C  D01E               	goto	l6512
  6407  00012E                     l6508:
  6408                           
  6409                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6410  00012E  C155  F025         	movff	sprintf@prec,___wmul@multiplier
  6411  000132  C156  F026         	movff	sprintf@prec+1,___wmul@multiplier+1
  6412  000136  0E00               	movlw	0
  6413  000138  6E28               	movwf	___wmul@multiplicand+1,c
  6414  00013A  0E0A               	movlw	10
  6415  00013C  6E27               	movwf	___wmul@multiplicand,c
  6416  00013E  ECD5  F01E         	call	___wmul	;wreg free
  6417  000142  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6418  000146  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6419  00014A                     	if	0	;tblptru may be non-zero
  6420  00014A                     	endif
  6421  00014A                     	if	0	;tblptru may be non-zero
  6422  00014A                     	endif
  6423  00014A  0008               	tblrd		*
  6424  00014C  50F5               	movf	tablat,w,c
  6425  00014E  2625               	addwf	?___wmul,f,c
  6426  000150  0E00               	movlw	0
  6427  000152  2226               	addwfc	?___wmul+1,f,c
  6428  000154  0ED0               	movlw	208
  6429  000156  2425               	addwf	?___wmul,w,c
  6430  000158  0101               	movlb	1	; () banked
  6431  00015A  6F55               	movwf	sprintf@prec& (0+255),b
  6432  00015C  0EFF               	movlw	255
  6433  00015E  2026               	addwfc	?___wmul+1,w,c
  6434  000160  0101               	movlb	1	; () banked
  6435  000162  6F56               	movwf	(sprintf@prec+1)& (0+255),b
  6436                           
  6437                           ; BSR set to: 1
  6438  000164  0100               	movlb	0	; () banked
  6439  000166  4BB7               	infsnz	sprintf@f& (0+255),f,b
  6440  000168  2BB8               	incf	(sprintf@f+1)& (0+255),f,b
  6441  00016A                     l6512:
  6442  00016A  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6443  00016E  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6444  000172                     	if	0	;tblptru may be non-zero
  6445  000172                     	endif
  6446  000172                     	if	0	;tblptru may be non-zero
  6447  000172                     	endif
  6448  000172  0008               	tblrd		*
  6449  000174  50F5               	movf	tablat,w,c
  6450  000176  EC0C  F01F         	call	_isdigit
  6451  00017A  A0D8               	btfss	status,0,c
  6452  00017C  D010               	goto	l6524
  6453  00017E  D7D7               	goto	l6508
  6454  000180                     l6514:
  6455                           
  6456                           ;doprnt.c: 626: prec = 0;
  6457  000180  0E00               	movlw	0
  6458  000182  0101               	movlb	1	; () banked
  6459  000184  6F56               	movwf	(sprintf@prec+1)& (0+255),b
  6460  000186  0E00               	movlw	0
  6461  000188  6F55               	movwf	sprintf@prec& (0+255),b
  6462                           
  6463                           ; BSR set to: 1
  6464                           ;doprnt.c: 628: flag |= 0x1000;
  6465  00018A  0101               	movlb	1	; () banked
  6466  00018C  894F               	bsf	(sprintf@flag+1)& (0+255),4,b
  6467                           
  6468                           ; BSR set to: 1
  6469                           ;doprnt.c: 630: }
  6470                           ;doprnt.c: 635: switch(c = *f++) {
  6471  00018E  D007               	goto	l6524
  6472  000190                     l6518:
  6473                           
  6474                           ; BSR set to: 1
  6475                           ;doprnt.c: 683: flag |= 0x200;
  6476  000190  0101               	movlb	1	; () banked
  6477  000192  834F               	bsf	(sprintf@flag+1)& (0+255),1,b
  6478                           
  6479                           ;doprnt.c: 684: break;
  6480  000194  D01C               	goto	l6526
  6481  000196                     l6520:
  6482                           
  6483                           ; BSR set to: 1
  6484                           ;doprnt.c: 818: flag |= 0xC0;
  6485  000196  0EC0               	movlw	192
  6486  000198  0101               	movlb	1	; () banked
  6487  00019A  134E               	iorwf	sprintf@flag& (0+255),f,b
  6488                           
  6489                           ; BSR set to: 1
  6490                           ;doprnt.c: 822: }
  6491                           
  6492                           ;doprnt.c: 819: break;
  6493  00019C  D018               	goto	l6526
  6494  00019E                     l6524:
  6495  00019E  C0B7  FFF6         	movff	sprintf@f,tblptrl
  6496  0001A2  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  6497  0001A6  0100               	movlb	0	; () banked
  6498  0001A8  4BB7               	infsnz	sprintf@f& (0+255),f,b
  6499  0001AA  2BB8               	incf	(sprintf@f+1)& (0+255),f,b
  6500  0001AC                     	if	0	;tblptru may be non-zero
  6501  0001AC                     	endif
  6502  0001AC                     	if	0	;tblptru may be non-zero
  6503  0001AC                     	endif
  6504  0001AC  0008               	tblrd		*
  6505  0001AE  CFF5 F157          	movff	tablat,sprintf@c
  6506  0001B2  0101               	movlb	1	; () banked
  6507  0001B4  5157               	movf	sprintf@c& (0+255),w,b
  6508                           
  6509                           ; Switch size 1, requested type "space"
  6510                           ; Number of cases is 3, Range of values is 0 to 117
  6511                           ; switch strategies available:
  6512                           ; Name         Instructions Cycles
  6513                           ; simple_byte           10     6 (average)
  6514                           ;	Chosen strategy is simple_byte
  6515  0001B6  0A00               	xorlw	0	; case 0
  6516  0001B8  B4D8               	btfsc	status,2,c
  6517  0001BA  EF25  F00A         	goto	l6956
  6518  0001BE  0A67               	xorlw	103	; case 103
  6519  0001C0  B4D8               	btfsc	status,2,c
  6520  0001C2  D7E6               	goto	l6518
  6521  0001C4  0A12               	xorlw	18	; case 117
  6522  0001C6  B4D8               	btfsc	status,2,c
  6523  0001C8  D7E6               	goto	l6520
  6524  0001CA  EF16  F00A         	goto	l6954
  6525  0001CE                     l6526:
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;doprnt.c: 825: if(flag & (0x700)) {
  6529  0001CE  0E07               	movlw	7
  6530  0001D0  0101               	movlb	1	; () banked
  6531  0001D2  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  6532  0001D4  B4D8               	btfsc	status,2,c
  6533  0001D6  EF9B  F008         	goto	l6870
  6534                           
  6535                           ; BSR set to: 1
  6536                           ;doprnt.c: 827: if(flag & 0x1000)
  6537  0001DA  0101               	movlb	1	; () banked
  6538  0001DC  A94F               	btfss	(sprintf@flag+1)& (0+255),4,b
  6539  0001DE  D005               	goto	l6532
  6540                           
  6541                           ; BSR set to: 1
  6542                           ;doprnt.c: 829: prec = 6;
  6543  0001E0  0E00               	movlw	0
  6544  0001E2  0101               	movlb	1	; () banked
  6545  0001E4  6F56               	movwf	(sprintf@prec+1)& (0+255),b
  6546  0001E6  0E06               	movlw	6
  6547  0001E8  6F55               	movwf	sprintf@prec& (0+255),b
  6548  0001EA                     l6532:
  6549                           
  6550                           ; BSR set to: 1
  6551                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6552  0001EA  C142  FFD9         	movff	sprintf@ap,fsr2l
  6553  0001EE  C143  FFDA         	movff	sprintf@ap+1,fsr2h
  6554  0001F2  CFDE F152          	movff	postinc2,sprintf@fval
  6555  0001F6  CFDE F153          	movff	postinc2,sprintf@fval+1
  6556  0001FA  CFDD F154          	movff	postdec2,sprintf@fval+2
  6557                           
  6558                           ; BSR set to: 1
  6559  0001FE  0E03               	movlw	3
  6560  000200  0101               	movlb	1	; () banked
  6561  000202  2742               	addwf	sprintf@ap& (0+255),f,b
  6562  000204  0E00               	movlw	0
  6563  000206  2343               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6564                           
  6565                           ; BSR set to: 1
  6566                           ;doprnt.c: 831: if(fval < 0.0) {
  6567  000208  0101               	movlb	1	; () banked
  6568  00020A  AF54               	btfss	(sprintf@fval+2)& (0+255),7,b
  6569  00020C  D011               	goto	l6542
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;doprnt.c: 832: fval = -fval;
  6573  00020E  C152  F01F         	movff	sprintf@fval,___ftneg@f1
  6574  000212  C153  F020         	movff	sprintf@fval+1,___ftneg@f1+1
  6575  000216  C154  F021         	movff	sprintf@fval+2,___ftneg@f1+2
  6576  00021A  ECE8  F01E         	call	___ftneg	;wreg free
  6577  00021E  C01F  F152         	movff	?___ftneg,sprintf@fval
  6578  000222  C020  F153         	movff	?___ftneg+1,sprintf@fval+1
  6579  000226  C021  F154         	movff	?___ftneg+2,sprintf@fval+2
  6580                           
  6581                           ;doprnt.c: 833: flag |= 0x03;
  6582  00022A  0E03               	movlw	3
  6583  00022C  0101               	movlb	1	; () banked
  6584  00022E  134E               	iorwf	sprintf@flag& (0+255),f,b
  6585  000230                     l6542:
  6586                           
  6587                           ; BSR set to: 1
  6588                           ;doprnt.c: 834: }
  6589                           ;doprnt.c: 835: exp = 0;
  6590  000230  0E00               	movlw	0
  6591  000232  0101               	movlb	1	; () banked
  6592  000234  6F51               	movwf	(sprintf@exp+1)& (0+255),b
  6593  000236  0E00               	movlw	0
  6594  000238  6F50               	movwf	sprintf@exp& (0+255),b
  6595                           
  6596                           ; BSR set to: 1
  6597                           ;doprnt.c: 836: if( fval!=0) {
  6598  00023A  0101               	movlb	1	; () banked
  6599  00023C  5152               	movf	sprintf@fval& (0+255),w,b
  6600  00023E  0101               	movlb	1	; () banked
  6601  000240  1153               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6602  000242  0101               	movlb	1	; () banked
  6603  000244  1154               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6604  000246  B4D8               	btfsc	status,2,c
  6605  000248  D099               	goto	l6570
  6606                           
  6607                           ; BSR set to: 1
  6608                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  6609  00024A  0E82               	movlw	130
  6610  00024C  0100               	movlb	0	; () banked
  6611  00024E  6FBC               	movwf	??_sprintf& (0+255),b
  6612  000250  0EFF               	movlw	255
  6613  000252  0100               	movlb	0	; () banked
  6614  000254  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  6615  000256  C152  F0BE         	movff	sprintf@fval,??_sprintf+2
  6616  00025A  C153  F0BF         	movff	sprintf@fval+1,??_sprintf+3
  6617  00025E  C154  F0C0         	movff	sprintf@fval+2,??_sprintf+4
  6618  000262  C155  F0C1         	movff	sprintf@fval+3,??_sprintf+5
  6619  000266  0E10               	movlw	16
  6620  000268  D006               	goto	u6470
  6621  00026A                     u6475:
  6622  00026A  0100               	movlb	0	; () banked
  6623  00026C  90D8               	bcf	status,0,c
  6624  00026E  33C1               	rrcf	(??_sprintf+5)& (0+255),f,b
  6625  000270  33C0               	rrcf	(??_sprintf+4)& (0+255),f,b
  6626  000272  33BF               	rrcf	(??_sprintf+3)& (0+255),f,b
  6627  000274  33BE               	rrcf	(??_sprintf+2)& (0+255),f,b
  6628  000276                     u6470:
  6629  000276  2EE8               	decfsz	wreg,f,c
  6630  000278  D7F8               	goto	u6475
  6631  00027A  0100               	movlb	0	; () banked
  6632  00027C  51BE               	movf	(??_sprintf+2)& (0+255),w,b
  6633  00027E  0100               	movlb	0	; () banked
  6634  000280  25BC               	addwf	??_sprintf& (0+255),w,b
  6635  000282  0101               	movlb	1	; () banked
  6636  000284  6F50               	movwf	sprintf@exp& (0+255),b
  6637  000286  0E00               	movlw	0
  6638  000288  0100               	movlb	0	; () banked
  6639  00028A  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
  6640  00028C  0101               	movlb	1	; () banked
  6641  00028E  6F51               	movwf	(sprintf@exp+1)& (0+255),b
  6642                           
  6643                           ; BSR set to: 1
  6644                           ;doprnt.c: 838: exp--;
  6645  000290  0101               	movlb	1	; () banked
  6646  000292  0750               	decf	sprintf@exp& (0+255),f,b
  6647  000294  A0D8               	btfss	status,0,c
  6648  000296  0751               	decf	(sprintf@exp+1)& (0+255),f,b
  6649                           
  6650                           ; BSR set to: 1
  6651                           ;doprnt.c: 839: exp *= 3;
  6652  000298  C150  F025         	movff	sprintf@exp,___wmul@multiplier
  6653  00029C  C151  F026         	movff	sprintf@exp+1,___wmul@multiplier+1
  6654  0002A0  0E00               	movlw	0
  6655  0002A2  6E28               	movwf	___wmul@multiplicand+1,c
  6656  0002A4  0E03               	movlw	3
  6657  0002A6  6E27               	movwf	___wmul@multiplicand,c
  6658  0002A8  ECD5  F01E         	call	___wmul	;wreg free
  6659  0002AC  C025  F150         	movff	?___wmul,sprintf@exp
  6660  0002B0  C026  F151         	movff	?___wmul+1,sprintf@exp+1
  6661                           
  6662                           ;doprnt.c: 840: exp /= 10;
  6663  0002B4  C150  F01D         	movff	sprintf@exp,___awdiv@dividend
  6664  0002B8  C151  F01E         	movff	sprintf@exp+1,___awdiv@dividend+1
  6665  0002BC  0E00               	movlw	0
  6666  0002BE  6E20               	movwf	___awdiv@divisor+1,c
  6667  0002C0  0E0A               	movlw	10
  6668  0002C2  6E1F               	movwf	___awdiv@divisor,c
  6669  0002C4  ECED  F01A         	call	___awdiv	;wreg free
  6670  0002C8  C01D  F150         	movff	?___awdiv,sprintf@exp
  6671  0002CC  C01E  F151         	movff	?___awdiv+1,sprintf@exp+1
  6672                           
  6673                           ;doprnt.c: 841: if(exp < 0)
  6674  0002D0  0101               	movlb	1	; () banked
  6675  0002D2  AF51               	btfss	(sprintf@exp+1)& (0+255),7,b
  6676  0002D4  D004               	goto	l6558
  6677                           
  6678                           ; BSR set to: 1
  6679                           ;doprnt.c: 842: exp--;
  6680  0002D6  0101               	movlb	1	; () banked
  6681  0002D8  0750               	decf	sprintf@exp& (0+255),f,b
  6682  0002DA  A0D8               	btfss	status,0,c
  6683  0002DC  0751               	decf	(sprintf@exp+1)& (0+255),f,b
  6684  0002DE                     l6558:
  6685                           
  6686                           ; BSR set to: 1
  6687                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6688  0002DE  0101               	movlb	1	; () banked
  6689  0002E0  5150               	movf	sprintf@exp& (0+255),w,b
  6690  0002E2  0800               	sublw	0
  6691  0002E4  EC42  F00D         	call	_scale
  6692  0002E8  C044  F144         	movff	?_scale,sprintf@tmpval
  6693  0002EC  C045  F145         	movff	?_scale+1,sprintf@tmpval+1
  6694  0002F0  C046  F146         	movff	?_scale+2,sprintf@tmpval+2
  6695                           
  6696                           ;doprnt.c: 847: tmpval.integ *= fval;
  6697  0002F4  C144  F035         	movff	sprintf@tmpval,___ftmul@f1
  6698  0002F8  C145  F036         	movff	sprintf@tmpval+1,___ftmul@f1+1
  6699  0002FC  C146  F037         	movff	sprintf@tmpval+2,___ftmul@f1+2
  6700  000300  C152  F038         	movff	sprintf@fval,___ftmul@f2
  6701  000304  C153  F039         	movff	sprintf@fval+1,___ftmul@f2+1
  6702  000308  C154  F03A         	movff	sprintf@fval+2,___ftmul@f2+2
  6703  00030C  EC76  F018         	call	___ftmul	;wreg free
  6704  000310  C035  F144         	movff	?___ftmul,sprintf@tmpval
  6705  000314  C036  F145         	movff	?___ftmul+1,sprintf@tmpval+1
  6706  000318  C037  F146         	movff	?___ftmul+2,sprintf@tmpval+2
  6707                           
  6708                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6709  00031C  C144  F0AC         	movff	sprintf@tmpval,___ftge@ff1
  6710  000320  C145  F0AD         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6711  000324  C146  F0AE         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6712  000328  0E00               	movlw	0
  6713  00032A  0100               	movlb	0	; () banked
  6714  00032C  6FAF               	movwf	___ftge@ff2& (0+255),b
  6715  00032E  0E80               	movlw	128
  6716  000330  0100               	movlb	0	; () banked
  6717  000332  6FB0               	movwf	(___ftge@ff2+1)& (0+255),b
  6718  000334  0E3F               	movlw	63
  6719  000336  0100               	movlb	0	; () banked
  6720  000338  6FB1               	movwf	(___ftge@ff2+2)& (0+255),b
  6721  00033A  ECE0  F019         	call	___ftge	;wreg free
  6722  00033E  0100               	movlb	0	; () banked
  6723  000340  B0D8               	btfsc	status,0,c
  6724  000342  D005               	goto	l6566
  6725                           
  6726                           ; BSR set to: 0
  6727                           ;doprnt.c: 849: exp--;
  6728  000344  0101               	movlb	1	; () banked
  6729  000346  0750               	decf	sprintf@exp& (0+255),f,b
  6730  000348  A0D8               	btfss	status,0,c
  6731  00034A  0751               	decf	(sprintf@exp+1)& (0+255),f,b
  6732  00034C  D017               	goto	l6570
  6733  00034E                     l6566:
  6734                           
  6735                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6736  00034E  C144  F0AC         	movff	sprintf@tmpval,___ftge@ff1
  6737  000352  C145  F0AD         	movff	sprintf@tmpval+1,___ftge@ff1+1
  6738  000356  C146  F0AE         	movff	sprintf@tmpval+2,___ftge@ff1+2
  6739  00035A  0E00               	movlw	0
  6740  00035C  0100               	movlb	0	; () banked
  6741  00035E  6FAF               	movwf	___ftge@ff2& (0+255),b
  6742  000360  0E20               	movlw	32
  6743  000362  0100               	movlb	0	; () banked
  6744  000364  6FB0               	movwf	(___ftge@ff2+1)& (0+255),b
  6745  000366  0E41               	movlw	65
  6746  000368  0100               	movlb	0	; () banked
  6747  00036A  6FB1               	movwf	(___ftge@ff2+2)& (0+255),b
  6748  00036C  ECE0  F019         	call	___ftge	;wreg free
  6749  000370  0100               	movlb	0	; () banked
  6750  000372  A0D8               	btfss	status,0,c
  6751  000374  D003               	goto	l6570
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;doprnt.c: 851: exp++;
  6755  000376  0101               	movlb	1	; () banked
  6756  000378  4B50               	infsnz	sprintf@exp& (0+255),f,b
  6757  00037A  2B51               	incf	(sprintf@exp+1)& (0+255),f,b
  6758  00037C                     l6570:
  6759                           
  6760                           ;doprnt.c: 852: }
  6761                           ;doprnt.c: 854: if(exp <= 0)
  6762  00037C  0101               	movlb	1	; () banked
  6763  00037E  BF51               	btfsc	(sprintf@exp+1)& (0+255),7,b
  6764  000380  D007               	goto	l6572
  6765  000382  0101               	movlb	1	; () banked
  6766  000384  5151               	movf	(sprintf@exp+1)& (0+255),w,b
  6767  000386  E108               	bnz	l573
  6768  000388  0101               	movlb	1	; () banked
  6769  00038A  0550               	decf	sprintf@exp& (0+255),w,b
  6770  00038C  B0D8               	btfsc	status,0,c
  6771  00038E  D004               	goto	l573
  6772  000390                     l6572:
  6773                           
  6774                           ; BSR set to: 1
  6775                           ;doprnt.c: 855: c = 1;
  6776  000390  0E01               	movlw	1
  6777  000392  0101               	movlb	1	; () banked
  6778  000394  6F57               	movwf	sprintf@c& (0+255),b
  6779  000396  D002               	goto	l574
  6780  000398                     l573:
  6781                           
  6782                           ; BSR set to: 1
  6783                           ;doprnt.c: 856: else
  6784                           ;doprnt.c: 857: c = exp;
  6785  000398  C150  F157         	movff	sprintf@exp,sprintf@c
  6786  00039C                     l574:
  6787                           
  6788                           ; BSR set to: 1
  6789                           ;doprnt.c: 858: if(
  6790                           ;doprnt.c: 866: flag & 0x200 && (exp < -4 || exp >= (int)prec)
  6791                           ;doprnt.c: 868: ) {
  6792  00039C  0101               	movlb	1	; () banked
  6793  00039E  A34F               	btfss	(sprintf@flag+1)& (0+255),1,b
  6794  0003A0  D2F8               	goto	l575
  6795                           
  6796                           ; BSR set to: 1
  6797  0003A2  0101               	movlb	1	; () banked
  6798  0003A4  AF51               	btfss	(sprintf@exp+1)& (0+255),7,b
  6799  0003A6  D008               	goto	l6576
  6800  0003A8  0EFC               	movlw	252
  6801  0003AA  0101               	movlb	1	; () banked
  6802  0003AC  5D50               	subwf	sprintf@exp& (0+255),w,b
  6803  0003AE  0EFF               	movlw	255
  6804  0003B0  0101               	movlb	1	; () banked
  6805  0003B2  5951               	subwfb	(sprintf@exp+1)& (0+255),w,b
  6806  0003B4  A0D8               	btfss	status,0,c
  6807  0003B6  D010               	goto	l6578
  6808  0003B8                     l6576:
  6809                           
  6810                           ; BSR set to: 1
  6811  0003B8  0101               	movlb	1	; () banked
  6812  0003BA  5155               	movf	sprintf@prec& (0+255),w,b
  6813  0003BC  0101               	movlb	1	; () banked
  6814  0003BE  5D50               	subwf	sprintf@exp& (0+255),w,b
  6815  0003C0  0101               	movlb	1	; () banked
  6816  0003C2  5151               	movf	(sprintf@exp+1)& (0+255),w,b
  6817  0003C4  0A80               	xorlw	128
  6818  0003C6  0100               	movlb	0	; () banked
  6819  0003C8  6FBC               	movwf	??_sprintf& (0+255),b
  6820  0003CA  0101               	movlb	1	; () banked
  6821  0003CC  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  6822  0003CE  0A80               	xorlw	128
  6823  0003D0  0100               	movlb	0	; () banked
  6824  0003D2  59BC               	subwfb	??_sprintf& (0+255),w,b
  6825  0003D4  A0D8               	btfss	status,0,c
  6826  0003D6  D2DD               	goto	l575
  6827  0003D8                     l6578:
  6828                           
  6829                           ;doprnt.c: 870: if(prec && flag & 0x200)
  6830  0003D8  0101               	movlb	1	; () banked
  6831  0003DA  5155               	movf	sprintf@prec& (0+255),w,b
  6832  0003DC  0101               	movlb	1	; () banked
  6833  0003DE  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6834  0003E0  B4D8               	btfsc	status,2,c
  6835  0003E2  D007               	goto	l6584
  6836                           
  6837                           ; BSR set to: 1
  6838  0003E4  0101               	movlb	1	; () banked
  6839  0003E6  A34F               	btfss	(sprintf@flag+1)& (0+255),1,b
  6840  0003E8  D004               	goto	l6584
  6841                           
  6842                           ; BSR set to: 1
  6843                           ;doprnt.c: 871: prec--;
  6844  0003EA  0101               	movlb	1	; () banked
  6845  0003EC  0755               	decf	sprintf@prec& (0+255),f,b
  6846  0003EE  A0D8               	btfss	status,0,c
  6847  0003F0  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  6848  0003F2                     l6584:
  6849                           
  6850                           ; BSR set to: 1
  6851                           ;doprnt.c: 873: if((unsigned)prec > (sizeof dpowers/sizeof dpowers[0]) - 2)
  6852  0003F2  0101               	movlb	1	; () banked
  6853  0003F4  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  6854  0003F6  E105               	bnz	u6570
  6855  0003F8  0E09               	movlw	9
  6856  0003FA  0101               	movlb	1	; () banked
  6857  0003FC  5D55               	subwf	sprintf@prec& (0+255),w,b
  6858  0003FE  A0D8               	btfss	status,0,c
  6859  000400  D004               	goto	l579
  6860  000402                     u6570:
  6861                           
  6862                           ; BSR set to: 1
  6863                           ;doprnt.c: 874: c = (sizeof dpowers/sizeof dpowers[0]) - 2;
  6864  000402  0E08               	movlw	8
  6865  000404  0101               	movlb	1	; () banked
  6866  000406  6F57               	movwf	sprintf@c& (0+255),b
  6867  000408  D002               	goto	l6588
  6868  00040A                     l579:
  6869                           
  6870                           ; BSR set to: 1
  6871                           ;doprnt.c: 875: else
  6872                           ;doprnt.c: 876: c = prec;
  6873  00040A  C155  F157         	movff	sprintf@prec,sprintf@c
  6874  00040E                     l6588:
  6875                           
  6876                           ; BSR set to: 1
  6877                           ;doprnt.c: 877: if( fval!=0) {
  6878  00040E  0101               	movlb	1	; () banked
  6879  000410  5152               	movf	sprintf@fval& (0+255),w,b
  6880  000412  0101               	movlb	1	; () banked
  6881  000414  1153               	iorwf	(sprintf@fval+1)& (0+255),w,b
  6882  000416  0101               	movlb	1	; () banked
  6883  000418  1154               	iorwf	(sprintf@fval+2)& (0+255),w,b
  6884  00041A  B4D8               	btfsc	status,2,c
  6885  00041C  D0F5               	goto	l6608
  6886                           
  6887                           ; BSR set to: 1
  6888                           ;doprnt.c: 878: fval /= scale(exp-c);
  6889  00041E  C152  F04B         	movff	sprintf@fval,___ftdiv@f1
  6890  000422  C153  F04C         	movff	sprintf@fval+1,___ftdiv@f1+1
  6891  000426  C154  F04D         	movff	sprintf@fval+2,___ftdiv@f1+2
  6892  00042A  0101               	movlb	1	; () banked
  6893  00042C  5157               	movf	sprintf@c& (0+255),w,b
  6894  00042E  0800               	sublw	0
  6895  000430  0101               	movlb	1	; () banked
  6896  000432  2550               	addwf	sprintf@exp& (0+255),w,b
  6897  000434  EC42  F00D         	call	_scale
  6898  000438  C044  F04E         	movff	?_scale,___ftdiv@f2
  6899  00043C  C045  F04F         	movff	?_scale+1,___ftdiv@f2+1
  6900  000440  C046  F050         	movff	?_scale+2,___ftdiv@f2+2
  6901  000444  EC67  F017         	call	___ftdiv	;wreg free
  6902  000448  C04B  F152         	movff	?___ftdiv,sprintf@fval
  6903  00044C  C04C  F153         	movff	?___ftdiv+1,sprintf@fval+1
  6904  000450  C04D  F154         	movff	?___ftdiv+2,sprintf@fval+2
  6905                           
  6906                           ;doprnt.c: 893: if(fval - (double)(unsigned long)fval >= 0.5)
  6907  000454  C152  F0A3         	movff	sprintf@fval,___ftadd@f2
  6908  000458  C153  F0A4         	movff	sprintf@fval+1,___ftadd@f2+1
  6909  00045C  C154  F0A5         	movff	sprintf@fval+2,___ftadd@f2+2
  6910  000460  C152  F089         	movff	sprintf@fval,___fttol@f1
  6911  000464  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  6912  000468  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  6913  00046C  EC7A  F014         	call	___fttol	;wreg free
  6914  000470  C089  F098         	movff	?___fttol,___lltoft@c
  6915  000474  C08A  F099         	movff	?___fttol+1,___lltoft@c+1
  6916  000478  C08B  F09A         	movff	?___fttol+2,___lltoft@c+2
  6917  00047C  C08C  F09B         	movff	?___fttol+3,___lltoft@c+3
  6918  000480  EC70  F01B         	call	___lltoft	;wreg free
  6919  000484  C098  F01F         	movff	?___lltoft,___ftneg@f1
  6920  000488  C099  F020         	movff	?___lltoft+1,___ftneg@f1+1
  6921  00048C  C09A  F021         	movff	?___lltoft+2,___ftneg@f1+2
  6922  000490  ECE8  F01E         	call	___ftneg	;wreg free
  6923  000494  C01F  F0A0         	movff	?___ftneg,___ftadd@f1
  6924  000498  C020  F0A1         	movff	?___ftneg+1,___ftadd@f1+1
  6925  00049C  C021  F0A2         	movff	?___ftneg+2,___ftadd@f1+2
  6926  0004A0  EC70  F010         	call	___ftadd	;wreg free
  6927  0004A4  C0A0  F0AC         	movff	?___ftadd,___ftge@ff1
  6928  0004A8  C0A1  F0AD         	movff	?___ftadd+1,___ftge@ff1+1
  6929  0004AC  C0A2  F0AE         	movff	?___ftadd+2,___ftge@ff1+2
  6930  0004B0  0E00               	movlw	0
  6931  0004B2  0100               	movlb	0	; () banked
  6932  0004B4  6FAF               	movwf	___ftge@ff2& (0+255),b
  6933  0004B6  0E00               	movlw	0
  6934  0004B8  0100               	movlb	0	; () banked
  6935  0004BA  6FB0               	movwf	(___ftge@ff2+1)& (0+255),b
  6936  0004BC  0E3F               	movlw	63
  6937  0004BE  0100               	movlb	0	; () banked
  6938  0004C0  6FB1               	movwf	(___ftge@ff2+2)& (0+255),b
  6939  0004C2  ECE0  F019         	call	___ftge	;wreg free
  6940  0004C6  0100               	movlb	0	; () banked
  6941  0004C8  A0D8               	btfss	status,0,c
  6942  0004CA  D017               	goto	l6596
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;doprnt.c: 894: fval += 0.5;
  6946  0004CC  C152  F0A0         	movff	sprintf@fval,___ftadd@f1
  6947  0004D0  C153  F0A1         	movff	sprintf@fval+1,___ftadd@f1+1
  6948  0004D4  C154  F0A2         	movff	sprintf@fval+2,___ftadd@f1+2
  6949  0004D8  0E00               	movlw	0
  6950  0004DA  0100               	movlb	0	; () banked
  6951  0004DC  6FA3               	movwf	___ftadd@f2& (0+255),b
  6952  0004DE  0E00               	movlw	0
  6953  0004E0  0100               	movlb	0	; () banked
  6954  0004E2  6FA4               	movwf	(___ftadd@f2+1)& (0+255),b
  6955  0004E4  0E3F               	movlw	63
  6956  0004E6  0100               	movlb	0	; () banked
  6957  0004E8  6FA5               	movwf	(___ftadd@f2+2)& (0+255),b
  6958  0004EA  EC70  F010         	call	___ftadd	;wreg free
  6959  0004EE  C0A0  F152         	movff	?___ftadd,sprintf@fval
  6960  0004F2  C0A1  F153         	movff	?___ftadd+1,sprintf@fval+1
  6961  0004F6  C0A2  F154         	movff	?___ftadd+2,sprintf@fval+2
  6962  0004FA                     l6596:
  6963                           
  6964                           ;doprnt.c: 895: if((unsigned long)fval >= dpowers[c+1]) {
  6965  0004FA  C157  F0BC         	movff	sprintf@c,??_sprintf
  6966  0004FE  0100               	movlb	0	; () banked
  6967  000500  6BBD               	clrf	(??_sprintf+1)& (0+255),b
  6968  000502  BFBC               	btfsc	??_sprintf& (0+255),7,b
  6969  000504  07BD               	decf	(??_sprintf+1)& (0+255),f,b
  6970  000506  0100               	movlb	0	; () banked
  6971  000508  90D8               	bcf	status,0,c
  6972  00050A  37BC               	rlcf	??_sprintf& (0+255),f,b
  6973  00050C  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
  6974  00050E  0100               	movlb	0	; () banked
  6975  000510  90D8               	bcf	status,0,c
  6976  000512  37BC               	rlcf	??_sprintf& (0+255),f,b
  6977  000514  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
  6978  000516  0E04               	movlw	4
  6979  000518  0100               	movlb	0	; () banked
  6980  00051A  27BC               	addwf	??_sprintf& (0+255),f,b
  6981  00051C  0E00               	movlw	0
  6982  00051E  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
  6983  000520  0E55               	movlw	low _dpowers
  6984  000522  0100               	movlb	0	; () banked
  6985  000524  25BC               	addwf	??_sprintf& (0+255),w,b
  6986  000526  6EF6               	movwf	tblptrl,c
  6987  000528  0EBE               	movlw	high _dpowers
  6988  00052A  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
  6989  00052C  6EF7               	movwf	tblptrh,c
  6990  00052E                     	if	0	;There are less than 3 active tblptr bytes
  6991  00052E                     	endif
  6992  00052E  C152  F089         	movff	sprintf@fval,___fttol@f1
  6993  000532  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  6994  000536  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  6995  00053A  EC7A  F014         	call	___fttol	;wreg free
  6996  00053E  0009               	tblrd		*+
  6997  000540  50F5               	movf	tablat,w,c
  6998  000542  0100               	movlb	0	; () banked
  6999  000544  5D89               	subwf	?___fttol& (0+255),w,b
  7000  000546  0009               	tblrd		*+
  7001  000548  50F5               	movf	tablat,w,c
  7002  00054A  0100               	movlb	0	; () banked
  7003  00054C  598A               	subwfb	(?___fttol+1)& (0+255),w,b
  7004  00054E  0009               	tblrd		*+
  7005  000550  50F5               	movf	tablat,w,c
  7006  000552  0100               	movlb	0	; () banked
  7007  000554  598B               	subwfb	(?___fttol+2)& (0+255),w,b
  7008  000556  0009               	tblrd		*+
  7009  000558  50F5               	movf	tablat,w,c
  7010  00055A  0100               	movlb	0	; () banked
  7011  00055C  598C               	subwfb	(?___fttol+3)& (0+255),w,b
  7012  00055E  A0D8               	btfss	status,0,c
  7013  000560  D018               	goto	l6602
  7014                           
  7015                           ; BSR set to: 0
  7016                           ;doprnt.c: 896: fval *= 1e-1;
  7017  000562  C152  F035         	movff	sprintf@fval,___ftmul@f1
  7018  000566  C153  F036         	movff	sprintf@fval+1,___ftmul@f1+1
  7019  00056A  C154  F037         	movff	sprintf@fval+2,___ftmul@f1+2
  7020  00056E  0ECD               	movlw	205
  7021  000570  6E38               	movwf	___ftmul@f2,c
  7022  000572  0ECC               	movlw	204
  7023  000574  6E39               	movwf	___ftmul@f2+1,c
  7024  000576  0E3D               	movlw	61
  7025  000578  6E3A               	movwf	___ftmul@f2+2,c
  7026  00057A  EC76  F018         	call	___ftmul	;wreg free
  7027  00057E  C035  F152         	movff	?___ftmul,sprintf@fval
  7028  000582  C036  F153         	movff	?___ftmul+1,sprintf@fval+1
  7029  000586  C037  F154         	movff	?___ftmul+2,sprintf@fval+2
  7030                           
  7031                           ;doprnt.c: 897: exp++;
  7032  00058A  0101               	movlb	1	; () banked
  7033  00058C  4B50               	infsnz	sprintf@exp& (0+255),f,b
  7034  00058E  2B51               	incf	(sprintf@exp+1)& (0+255),f,b
  7035                           
  7036                           ;doprnt.c: 898: } else if((unsigned long)fval < dpowers[c]) {
  7037  000590  D03B               	goto	l6608
  7038  000592                     l6602:
  7039  000592  0101               	movlb	1	; () banked
  7040  000594  5157               	movf	sprintf@c& (0+255),w,b
  7041  000596  0D04               	mullw	4
  7042  000598  0E55               	movlw	low _dpowers
  7043  00059A  24F3               	addwf	prodl,w,c
  7044  00059C  6EF6               	movwf	tblptrl,c
  7045  00059E  0EBE               	movlw	high _dpowers
  7046  0005A0  20F4               	addwfc	prodh,w,c
  7047  0005A2  6EF7               	movwf	tblptrh,c
  7048  0005A4                     	if	0	;There are less than 3 active tblptr bytes
  7049  0005A4                     	endif
  7050  0005A4  C152  F089         	movff	sprintf@fval,___fttol@f1
  7051  0005A8  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  7052  0005AC  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  7053  0005B0  EC7A  F014         	call	___fttol	;wreg free
  7054  0005B4  0009               	tblrd		*+
  7055  0005B6  50F5               	movf	tablat,w,c
  7056  0005B8  0100               	movlb	0	; () banked
  7057  0005BA  5D89               	subwf	?___fttol& (0+255),w,b
  7058  0005BC  0009               	tblrd		*+
  7059  0005BE  50F5               	movf	tablat,w,c
  7060  0005C0  0100               	movlb	0	; () banked
  7061  0005C2  598A               	subwfb	(?___fttol+1)& (0+255),w,b
  7062  0005C4  0009               	tblrd		*+
  7063  0005C6  50F5               	movf	tablat,w,c
  7064  0005C8  0100               	movlb	0	; () banked
  7065  0005CA  598B               	subwfb	(?___fttol+2)& (0+255),w,b
  7066  0005CC  0009               	tblrd		*+
  7067  0005CE  50F5               	movf	tablat,w,c
  7068  0005D0  0100               	movlb	0	; () banked
  7069  0005D2  598C               	subwfb	(?___fttol+3)& (0+255),w,b
  7070  0005D4  B0D8               	btfsc	status,0,c
  7071  0005D6  D018               	goto	l6608
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;doprnt.c: 899: fval *= 10.0;
  7075  0005D8  C152  F035         	movff	sprintf@fval,___ftmul@f1
  7076  0005DC  C153  F036         	movff	sprintf@fval+1,___ftmul@f1+1
  7077  0005E0  C154  F037         	movff	sprintf@fval+2,___ftmul@f1+2
  7078  0005E4  0E00               	movlw	0
  7079  0005E6  6E38               	movwf	___ftmul@f2,c
  7080  0005E8  0E20               	movlw	32
  7081  0005EA  6E39               	movwf	___ftmul@f2+1,c
  7082  0005EC  0E41               	movlw	65
  7083  0005EE  6E3A               	movwf	___ftmul@f2+2,c
  7084  0005F0  EC76  F018         	call	___ftmul	;wreg free
  7085  0005F4  C035  F152         	movff	?___ftmul,sprintf@fval
  7086  0005F8  C036  F153         	movff	?___ftmul+1,sprintf@fval+1
  7087  0005FC  C037  F154         	movff	?___ftmul+2,sprintf@fval+2
  7088                           
  7089                           ;doprnt.c: 900: exp--;
  7090  000600  0101               	movlb	1	; () banked
  7091  000602  0750               	decf	sprintf@exp& (0+255),f,b
  7092  000604  A0D8               	btfss	status,0,c
  7093  000606  0751               	decf	(sprintf@exp+1)& (0+255),f,b
  7094  000608                     l6608:
  7095                           
  7096                           ;doprnt.c: 901: }
  7097                           ;doprnt.c: 903: }
  7098                           ;doprnt.c: 929: width -= prec + 5;
  7099  000608  0E05               	movlw	5
  7100  00060A  0101               	movlb	1	; () banked
  7101  00060C  2555               	addwf	sprintf@prec& (0+255),w,b
  7102  00060E  0100               	movlb	0	; () banked
  7103  000610  6FBC               	movwf	??_sprintf& (0+255),b
  7104  000612  0E00               	movlw	0
  7105  000614  0101               	movlb	1	; () banked
  7106  000616  2156               	addwfc	(sprintf@prec+1)& (0+255),w,b
  7107  000618  0100               	movlb	0	; () banked
  7108  00061A  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  7109  00061C  0100               	movlb	0	; () banked
  7110  00061E  51BC               	movf	??_sprintf& (0+255),w,b
  7111  000620  0101               	movlb	1	; () banked
  7112  000622  5F48               	subwf	sprintf@width& (0+255),f,b
  7113  000624  0100               	movlb	0	; () banked
  7114  000626  51BD               	movf	(??_sprintf+1)& (0+255),w,b
  7115  000628  0101               	movlb	1	; () banked
  7116  00062A  5B49               	subwfb	(sprintf@width+1)& (0+255),f,b
  7117                           
  7118                           ; BSR set to: 1
  7119                           ;doprnt.c: 934: if(flag & 0x03)
  7120  00062C  0E03               	movlw	3
  7121  00062E  0101               	movlb	1	; () banked
  7122  000630  154E               	andwf	sprintf@flag& (0+255),w,b
  7123  000632  0100               	movlb	0	; () banked
  7124  000634  6FBC               	movwf	??_sprintf& (0+255),b
  7125  000636  0E00               	movlw	0
  7126  000638  0101               	movlb	1	; () banked
  7127  00063A  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7128  00063C  0100               	movlb	0	; () banked
  7129  00063E  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  7130  000640  0100               	movlb	0	; () banked
  7131  000642  51BC               	movf	??_sprintf& (0+255),w,b
  7132  000644  0100               	movlb	0	; () banked
  7133  000646  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
  7134  000648  B4D8               	btfsc	status,2,c
  7135  00064A  D004               	goto	l6614
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;doprnt.c: 935: width--;
  7139  00064C  0101               	movlb	1	; () banked
  7140  00064E  0748               	decf	sprintf@width& (0+255),f,b
  7141  000650  A0D8               	btfss	status,0,c
  7142  000652  0749               	decf	(sprintf@width+1)& (0+255),f,b
  7143  000654                     l6614:
  7144                           
  7145                           ;doprnt.c: 959: {
  7146                           ;doprnt.c: 962: if(!(flag & 0x08))
  7147  000654  0101               	movlb	1	; () banked
  7148  000656  A74E               	btfss	sprintf@flag& (0+255),3,b
  7149  000658  D00E               	goto	l6624
  7150  00065A  D017               	goto	l6626
  7151  00065C                     l6618:
  7152                           
  7153                           ; BSR set to: 1
  7154                           ;doprnt.c: 965: ((*sp++ = (' ')));
  7155  00065C  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7156  000660  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7157  000664  0E20               	movlw	32
  7158  000666  6EDF               	movwf	indf2,c
  7159                           
  7160                           ; BSR set to: 1
  7161  000668  0100               	movlb	0	; () banked
  7162  00066A  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7163  00066C  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7164                           
  7165                           ; BSR set to: 0
  7166                           ;doprnt.c: 966: width--;
  7167  00066E  0101               	movlb	1	; () banked
  7168  000670  0748               	decf	sprintf@width& (0+255),f,b
  7169  000672  A0D8               	btfss	status,0,c
  7170  000674  0749               	decf	(sprintf@width+1)& (0+255),f,b
  7171  000676                     l6624:
  7172                           
  7173                           ; BSR set to: 1
  7174  000676  0101               	movlb	1	; () banked
  7175  000678  BF49               	btfsc	(sprintf@width+1)& (0+255),7,b
  7176  00067A  D007               	goto	l6626
  7177  00067C  0101               	movlb	1	; () banked
  7178  00067E  5149               	movf	(sprintf@width+1)& (0+255),w,b
  7179  000680  E1ED               	bnz	l6618
  7180  000682  0101               	movlb	1	; () banked
  7181  000684  0548               	decf	sprintf@width& (0+255),w,b
  7182  000686  B0D8               	btfsc	status,0,c
  7183  000688  D7E9               	goto	l6618
  7184  00068A                     l6626:
  7185                           
  7186                           ; BSR set to: 1
  7187                           ;doprnt.c: 967: }
  7188                           ;doprnt.c: 973: if(flag & 0x03)
  7189  00068A  0E03               	movlw	3
  7190  00068C  0101               	movlb	1	; () banked
  7191  00068E  154E               	andwf	sprintf@flag& (0+255),w,b
  7192  000690  0100               	movlb	0	; () banked
  7193  000692  6FBC               	movwf	??_sprintf& (0+255),b
  7194  000694  0E00               	movlw	0
  7195  000696  0101               	movlb	1	; () banked
  7196  000698  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  7197  00069A  0100               	movlb	0	; () banked
  7198  00069C  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  7199  00069E  0100               	movlb	0	; () banked
  7200  0006A0  51BC               	movf	??_sprintf& (0+255),w,b
  7201  0006A2  0100               	movlb	0	; () banked
  7202  0006A4  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
  7203  0006A6  B4D8               	btfsc	status,2,c
  7204  0006A8  D009               	goto	l6632
  7205                           
  7206                           ; BSR set to: 0
  7207                           ;doprnt.c: 974: ((*sp++ = ('-')));
  7208  0006AA  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7209  0006AE  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7210  0006B2  0E2D               	movlw	45
  7211  0006B4  6EDF               	movwf	indf2,c
  7212                           
  7213                           ; BSR set to: 0
  7214  0006B6  0100               	movlb	0	; () banked
  7215  0006B8  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7216  0006BA  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7217  0006BC                     l6632:
  7218                           
  7219                           ; BSR set to: 0
  7220                           ;doprnt.c: 980: }
  7221                           ;doprnt.c: 985: val = (unsigned long)fval;
  7222  0006BC  C152  F089         	movff	sprintf@fval,___fttol@f1
  7223  0006C0  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  7224  0006C4  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  7225  0006C8  EC7A  F014         	call	___fttol	;wreg free
  7226  0006CC  C089  F14A         	movff	?___fttol,sprintf@val
  7227  0006D0  C08A  F14B         	movff	?___fttol+1,sprintf@val+1
  7228  0006D4  C08B  F14C         	movff	?___fttol+2,sprintf@val+2
  7229  0006D8  C08C  F14D         	movff	?___fttol+3,sprintf@val+3
  7230                           
  7231                           ;doprnt.c: 986: ((*sp++ = (val/dpowers[c] + '0')));
  7232  0006DC  C14A  F017         	movff	sprintf@val,___lldiv@dividend
  7233  0006E0  C14B  F018         	movff	sprintf@val+1,___lldiv@dividend+1
  7234  0006E4  C14C  F019         	movff	sprintf@val+2,___lldiv@dividend+2
  7235  0006E8  C14D  F01A         	movff	sprintf@val+3,___lldiv@dividend+3
  7236  0006EC  0101               	movlb	1	; () banked
  7237  0006EE  5157               	movf	sprintf@c& (0+255),w,b
  7238  0006F0  0D04               	mullw	4
  7239  0006F2  0E55               	movlw	low _dpowers
  7240  0006F4  24F3               	addwf	prodl,w,c
  7241  0006F6  6EF6               	movwf	tblptrl,c
  7242  0006F8  0EBE               	movlw	high _dpowers
  7243  0006FA  20F4               	addwfc	prodh,w,c
  7244  0006FC  6EF7               	movwf	tblptrh,c
  7245  0006FE                     	if	0	;There are less than 3 active tblptr bytes
  7246  0006FE                     	endif
  7247  0006FE  0009               	tblrd		*+
  7248  000700  CFF5 F01B          	movff	tablat,___lldiv@divisor
  7249  000704  0009               	tblrd		*+
  7250  000706  CFF5 F01C          	movff	tablat,___lldiv@divisor+1
  7251  00070A  0009               	tblrd		*+
  7252  00070C  CFF5 F01D          	movff	tablat,___lldiv@divisor+2
  7253  000710  000A               	tblrd		*-
  7254  000712  CFF5 F01E          	movff	tablat,___lldiv@divisor+3
  7255  000716  EC2F  F01B         	call	___lldiv	;wreg free
  7256  00071A  5017               	movf	?___lldiv,w,c
  7257  00071C  0F30               	addlw	48
  7258  00071E  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7259  000722  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7260  000726  6EDF               	movwf	indf2,c
  7261  000728  0100               	movlb	0	; () banked
  7262  00072A  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7263  00072C  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7264                           
  7265                           ; BSR set to: 0
  7266                           ;doprnt.c: 987: val %= dpowers[c];
  7267  00072E  C14A  F024         	movff	sprintf@val,___llmod@dividend
  7268  000732  C14B  F025         	movff	sprintf@val+1,___llmod@dividend+1
  7269  000736  C14C  F026         	movff	sprintf@val+2,___llmod@dividend+2
  7270  00073A  C14D  F027         	movff	sprintf@val+3,___llmod@dividend+3
  7271  00073E  0101               	movlb	1	; () banked
  7272  000740  5157               	movf	sprintf@c& (0+255),w,b
  7273  000742  0D04               	mullw	4
  7274  000744  0E55               	movlw	low _dpowers
  7275  000746  24F3               	addwf	prodl,w,c
  7276  000748  6EF6               	movwf	tblptrl,c
  7277  00074A  0EBE               	movlw	high _dpowers
  7278  00074C  20F4               	addwfc	prodh,w,c
  7279  00074E  6EF7               	movwf	tblptrh,c
  7280  000750                     	if	0	;There are less than 3 active tblptr bytes
  7281  000750                     	endif
  7282  000750  0009               	tblrd		*+
  7283  000752  CFF5 F028          	movff	tablat,___llmod@divisor
  7284  000756  0009               	tblrd		*+
  7285  000758  CFF5 F029          	movff	tablat,___llmod@divisor+1
  7286  00075C  0009               	tblrd		*+
  7287  00075E  CFF5 F02A          	movff	tablat,___llmod@divisor+2
  7288  000762  000A               	tblrd		*-
  7289  000764  CFF5 F02B          	movff	tablat,___llmod@divisor+3
  7290  000768  EC1C  F01C         	call	___llmod	;wreg free
  7291  00076C  C024  F14A         	movff	?___llmod,sprintf@val
  7292  000770  C025  F14B         	movff	?___llmod+1,sprintf@val+1
  7293  000774  C026  F14C         	movff	?___llmod+2,sprintf@val+2
  7294  000778  C027  F14D         	movff	?___llmod+3,sprintf@val+3
  7295                           
  7296                           ;doprnt.c: 992: if(prec)
  7297  00077C  0101               	movlb	1	; () banked
  7298  00077E  5155               	movf	sprintf@prec& (0+255),w,b
  7299  000780  0101               	movlb	1	; () banked
  7300  000782  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7301  000784  B4D8               	btfsc	status,2,c
  7302  000786  D096               	goto	l6668
  7303                           
  7304                           ; BSR set to: 1
  7305                           ;doprnt.c: 994: {
  7306                           ;doprnt.c: 995: ((*sp++ = ('.')));
  7307  000788  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7308  00078C  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7309  000790  0E2E               	movlw	46
  7310  000792  6EDF               	movwf	indf2,c
  7311                           
  7312                           ; BSR set to: 1
  7313  000794  0100               	movlb	0	; () banked
  7314  000796  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7315  000798  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;doprnt.c: 996: prec -= c;
  7319  00079A  0101               	movlb	1	; () banked
  7320  00079C  5157               	movf	sprintf@c& (0+255),w,b
  7321  00079E  0101               	movlb	1	; () banked
  7322  0007A0  5F55               	subwf	sprintf@prec& (0+255),f,b
  7323  0007A2  0E00               	movlw	0
  7324  0007A4  0101               	movlb	1	; () banked
  7325  0007A6  BF57               	btfsc	sprintf@c& (0+255),7,b
  7326  0007A8  0EFF               	movlw	255
  7327  0007AA  0101               	movlb	1	; () banked
  7328  0007AC  5B56               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7329                           
  7330                           ;doprnt.c: 997: while(c--) {
  7331  0007AE  D068               	goto	l6658
  7332  0007B0                     l594:
  7333                           
  7334                           ; BSR set to: 1
  7335                           ;doprnt.c: 1002: if(flag & 0x200 && val == 0) {
  7336  0007B0  0101               	movlb	1	; () banked
  7337  0007B2  A34F               	btfss	(sprintf@flag+1)& (0+255),1,b
  7338  0007B4  D015               	goto	l6652
  7339                           
  7340                           ; BSR set to: 1
  7341  0007B6  0101               	movlb	1	; () banked
  7342  0007B8  514A               	movf	sprintf@val& (0+255),w,b
  7343  0007BA  0101               	movlb	1	; () banked
  7344  0007BC  114B               	iorwf	(sprintf@val+1)& (0+255),w,b
  7345  0007BE  0101               	movlb	1	; () banked
  7346  0007C0  114C               	iorwf	(sprintf@val+2)& (0+255),w,b
  7347  0007C2  0101               	movlb	1	; () banked
  7348  0007C4  114D               	iorwf	(sprintf@val+3)& (0+255),w,b
  7349  0007C6  A4D8               	btfss	status,2,c
  7350  0007C8  D00B               	goto	l6652
  7351                           
  7352                           ; BSR set to: 1
  7353                           ;doprnt.c: 1003: prec = c = 0;
  7354  0007CA  0E00               	movlw	0
  7355  0007CC  0101               	movlb	1	; () banked
  7356  0007CE  6F57               	movwf	sprintf@c& (0+255),b
  7357  0007D0  0101               	movlb	1	; () banked
  7358  0007D2  5157               	movf	sprintf@c& (0+255),w,b
  7359  0007D4  0101               	movlb	1	; () banked
  7360  0007D6  6F55               	movwf	sprintf@prec& (0+255),b
  7361  0007D8  6B56               	clrf	(sprintf@prec+1)& (0+255),b
  7362  0007DA  BF55               	btfsc	sprintf@prec& (0+255),7,b
  7363  0007DC  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  7364                           
  7365                           ;doprnt.c: 1004: break;
  7366  0007DE  D064               	goto	l6666
  7367  0007E0                     l6652:
  7368                           
  7369                           ; BSR set to: 1
  7370                           ;doprnt.c: 1005: }
  7371                           ;doprnt.c: 1007: ((*sp++ = ('0' + (val/dpowers[c]))));
  7372  0007E0  C14A  F017         	movff	sprintf@val,___lldiv@dividend
  7373  0007E4  C14B  F018         	movff	sprintf@val+1,___lldiv@dividend+1
  7374  0007E8  C14C  F019         	movff	sprintf@val+2,___lldiv@dividend+2
  7375  0007EC  C14D  F01A         	movff	sprintf@val+3,___lldiv@dividend+3
  7376  0007F0  0101               	movlb	1	; () banked
  7377  0007F2  5157               	movf	sprintf@c& (0+255),w,b
  7378  0007F4  0D04               	mullw	4
  7379  0007F6  0E55               	movlw	low _dpowers
  7380  0007F8  24F3               	addwf	prodl,w,c
  7381  0007FA  6EF6               	movwf	tblptrl,c
  7382  0007FC  0EBE               	movlw	high _dpowers
  7383  0007FE  20F4               	addwfc	prodh,w,c
  7384  000800  6EF7               	movwf	tblptrh,c
  7385  000802                     	if	0	;There are less than 3 active tblptr bytes
  7386  000802                     	endif
  7387  000802  0009               	tblrd		*+
  7388  000804  CFF5 F01B          	movff	tablat,___lldiv@divisor
  7389  000808  0009               	tblrd		*+
  7390  00080A  CFF5 F01C          	movff	tablat,___lldiv@divisor+1
  7391  00080E  0009               	tblrd		*+
  7392  000810  CFF5 F01D          	movff	tablat,___lldiv@divisor+2
  7393  000814  000A               	tblrd		*-
  7394  000816  CFF5 F01E          	movff	tablat,___lldiv@divisor+3
  7395  00081A  EC2F  F01B         	call	___lldiv	;wreg free
  7396  00081E  5017               	movf	?___lldiv,w,c
  7397  000820  0F30               	addlw	48
  7398  000822  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7399  000826  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7400  00082A  6EDF               	movwf	indf2,c
  7401  00082C  0100               	movlb	0	; () banked
  7402  00082E  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7403  000830  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7404                           
  7405                           ; BSR set to: 0
  7406                           ;doprnt.c: 1008: val %= dpowers[c];
  7407  000832  C14A  F024         	movff	sprintf@val,___llmod@dividend
  7408  000836  C14B  F025         	movff	sprintf@val+1,___llmod@dividend+1
  7409  00083A  C14C  F026         	movff	sprintf@val+2,___llmod@dividend+2
  7410  00083E  C14D  F027         	movff	sprintf@val+3,___llmod@dividend+3
  7411  000842  0101               	movlb	1	; () banked
  7412  000844  5157               	movf	sprintf@c& (0+255),w,b
  7413  000846  0D04               	mullw	4
  7414  000848  0E55               	movlw	low _dpowers
  7415  00084A  24F3               	addwf	prodl,w,c
  7416  00084C  6EF6               	movwf	tblptrl,c
  7417  00084E  0EBE               	movlw	high _dpowers
  7418  000850  20F4               	addwfc	prodh,w,c
  7419  000852  6EF7               	movwf	tblptrh,c
  7420  000854                     	if	0	;There are less than 3 active tblptr bytes
  7421  000854                     	endif
  7422  000854  0009               	tblrd		*+
  7423  000856  CFF5 F028          	movff	tablat,___llmod@divisor
  7424  00085A  0009               	tblrd		*+
  7425  00085C  CFF5 F029          	movff	tablat,___llmod@divisor+1
  7426  000860  0009               	tblrd		*+
  7427  000862  CFF5 F02A          	movff	tablat,___llmod@divisor+2
  7428  000866  000A               	tblrd		*-
  7429  000868  CFF5 F02B          	movff	tablat,___llmod@divisor+3
  7430  00086C  EC1C  F01C         	call	___llmod	;wreg free
  7431  000870  C024  F14A         	movff	?___llmod,sprintf@val
  7432  000874  C025  F14B         	movff	?___llmod+1,sprintf@val+1
  7433  000878  C026  F14C         	movff	?___llmod+2,sprintf@val+2
  7434  00087C  C027  F14D         	movff	?___llmod+3,sprintf@val+3
  7435  000880                     l6658:
  7436  000880  0101               	movlb	1	; () banked
  7437  000882  0757               	decf	sprintf@c& (0+255),f,b
  7438  000884  0101               	movlb	1	; () banked
  7439  000886  2957               	incf	sprintf@c& (0+255),w,b
  7440  000888  B4D8               	btfsc	status,2,c
  7441  00088A  D00E               	goto	l6666
  7442  00088C  D791               	goto	l594
  7443  00088E                     l6660:
  7444                           
  7445                           ; BSR set to: 1
  7446                           ;doprnt.c: 1012: ((*sp++ = ('0')));
  7447  00088E  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7448  000892  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7449  000896  0E30               	movlw	48
  7450  000898  6EDF               	movwf	indf2,c
  7451                           
  7452                           ; BSR set to: 1
  7453  00089A  0100               	movlb	0	; () banked
  7454  00089C  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7455  00089E  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7456                           
  7457                           ; BSR set to: 0
  7458                           ;doprnt.c: 1013: prec--;
  7459  0008A0  0101               	movlb	1	; () banked
  7460  0008A2  0755               	decf	sprintf@prec& (0+255),f,b
  7461  0008A4  A0D8               	btfss	status,0,c
  7462  0008A6  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  7463  0008A8                     l6666:
  7464                           
  7465                           ; BSR set to: 1
  7466  0008A8  0101               	movlb	1	; () banked
  7467  0008AA  5155               	movf	sprintf@prec& (0+255),w,b
  7468  0008AC  0101               	movlb	1	; () banked
  7469  0008AE  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7470  0008B0  A4D8               	btfss	status,2,c
  7471  0008B2  D7ED               	goto	l6660
  7472  0008B4                     l6668:
  7473                           
  7474                           ; BSR set to: 1
  7475                           ;doprnt.c: 1014: }
  7476                           ;doprnt.c: 1015: }
  7477                           ;doprnt.c: 1021: ((*sp++ = ('e')));
  7478  0008B4  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7479  0008B8  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7480  0008BC  0E65               	movlw	101
  7481  0008BE  6EDF               	movwf	indf2,c
  7482                           
  7483                           ; BSR set to: 1
  7484  0008C0  0100               	movlb	0	; () banked
  7485  0008C2  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7486  0008C4  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;doprnt.c: 1022: if(exp < 0) {
  7490  0008C6  0101               	movlb	1	; () banked
  7491  0008C8  AF51               	btfss	(sprintf@exp+1)& (0+255),7,b
  7492  0008CA  D00F               	goto	l6680
  7493                           
  7494                           ; BSR set to: 1
  7495                           ;doprnt.c: 1023: exp = -exp;
  7496  0008CC  0101               	movlb	1	; () banked
  7497  0008CE  6D50               	negf	sprintf@exp& (0+255),b
  7498  0008D0  1F51               	comf	(sprintf@exp+1)& (0+255),f,b
  7499  0008D2  B0D8               	btfsc	status,0,c
  7500  0008D4  2B51               	incf	(sprintf@exp+1)& (0+255),f,b
  7501                           
  7502                           ; BSR set to: 1
  7503                           ;doprnt.c: 1024: ((*sp++ = ('-')));
  7504  0008D6  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7505  0008DA  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7506  0008DE  0E2D               	movlw	45
  7507  0008E0  D009               	goto	L4
  7508  0008E2                     l6678:
  7509                           
  7510                           ; BSR set to: 1
  7511  0008E2  0100               	movlb	0	; () banked
  7512  0008E4  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7513  0008E6  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7514                           
  7515                           ;doprnt.c: 1025: } else
  7516  0008E8  D007               	goto	l6684
  7517  0008EA                     l6680:
  7518                           
  7519                           ;doprnt.c: 1026: ((*sp++ = ('+')));
  7520  0008EA  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7521  0008EE  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7522  0008F2  0E2B               	movlw	43
  7523  0008F4                     L4:
  7524  0008F4  6EDF               	movwf	indf2,c
  7525  0008F6  D7F5               	goto	l6678
  7526  0008F8                     l6684:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;doprnt.c: 1039: ((*sp++ = (exp / 10 + '0')));
  7530  0008F8  C150  F01D         	movff	sprintf@exp,___awdiv@dividend
  7531  0008FC  C151  F01E         	movff	sprintf@exp+1,___awdiv@dividend+1
  7532  000900  0E00               	movlw	0
  7533  000902  6E20               	movwf	___awdiv@divisor+1,c
  7534  000904  0E0A               	movlw	10
  7535  000906  6E1F               	movwf	___awdiv@divisor,c
  7536  000908  ECED  F01A         	call	___awdiv	;wreg free
  7537  00090C  501D               	movf	?___awdiv,w,c
  7538  00090E  0F30               	addlw	48
  7539  000910  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7540  000914  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7541  000918  6EDF               	movwf	indf2,c
  7542  00091A  0100               	movlb	0	; () banked
  7543  00091C  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7544  00091E  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;doprnt.c: 1040: ((*sp++ = (exp % 10 + '0')));
  7548  000920  C150  F017         	movff	sprintf@exp,___awmod@dividend
  7549  000924  C151  F018         	movff	sprintf@exp+1,___awmod@dividend+1
  7550  000928  0E00               	movlw	0
  7551  00092A  6E1A               	movwf	___awmod@divisor+1,c
  7552  00092C  0E0A               	movlw	10
  7553  00092E  6E19               	movwf	___awmod@divisor,c
  7554  000930  ECE4  F01B         	call	___awmod	;wreg free
  7555  000934  5017               	movf	?___awmod,w,c
  7556  000936  0F30               	addlw	48
  7557  000938  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7558  00093C  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7559  000940  6EDF               	movwf	indf2,c
  7560  000942  0100               	movlb	0	; () banked
  7561  000944  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7562  000946  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;doprnt.c: 1042: if((flag & 0x08) && width > 0)
  7566  000948  0101               	movlb	1	; () banked
  7567  00094A  A74E               	btfss	sprintf@flag& (0+255),3,b
  7568  00094C  EF16  F00A         	goto	l6954
  7569                           
  7570                           ; BSR set to: 1
  7571  000950  0101               	movlb	1	; () banked
  7572  000952  BF49               	btfsc	(sprintf@width+1)& (0+255),7,b
  7573  000954  EF16  F00A         	goto	l6954
  7574  000958  0101               	movlb	1	; () banked
  7575  00095A  5149               	movf	(sprintf@width+1)& (0+255),w,b
  7576  00095C  E105               	bnz	l6696
  7577  00095E  0101               	movlb	1	; () banked
  7578  000960  0548               	decf	sprintf@width& (0+255),w,b
  7579  000962  A0D8               	btfss	status,0,c
  7580  000964  EF16  F00A         	goto	l6954
  7581  000968                     l6696:
  7582                           
  7583                           ; BSR set to: 1
  7584                           ;doprnt.c: 1044: ((*sp++ = (' ')));
  7585  000968  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  7586  00096C  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  7587  000970  0E20               	movlw	32
  7588  000972  6EDF               	movwf	indf2,c
  7589                           
  7590                           ; BSR set to: 1
  7591  000974  0100               	movlb	0	; () banked
  7592  000976  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  7593  000978  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;doprnt.c: 1045: while(--width);
  7597  00097A  0101               	movlb	1	; () banked
  7598  00097C  0748               	decf	sprintf@width& (0+255),f,b
  7599  00097E  A0D8               	btfss	status,0,c
  7600  000980  0749               	decf	(sprintf@width+1)& (0+255),f,b
  7601  000982  0101               	movlb	1	; () banked
  7602  000984  5148               	movf	sprintf@width& (0+255),w,b
  7603  000986  0101               	movlb	1	; () banked
  7604  000988  1149               	iorwf	(sprintf@width+1)& (0+255),w,b
  7605  00098A  B4D8               	btfsc	status,2,c
  7606  00098C  EF16  F00A         	goto	l6954
  7607  000990  D7EB               	goto	l6696
  7608  000992                     l575:
  7609                           
  7610                           ;doprnt.c: 1048: }
  7611                           ;doprnt.c: 1087: if(flag & 0x200) {
  7612  000992  0101               	movlb	1	; () banked
  7613  000994  A34F               	btfss	(sprintf@flag+1)& (0+255),1,b
  7614  000996  D104               	goto	l6738
  7615                           
  7616                           ; BSR set to: 1
  7617                           ;doprnt.c: 1088: if(exp < 0)
  7618  000998  0101               	movlb	1	; () banked
  7619  00099A  AF51               	btfss	(sprintf@exp+1)& (0+255),7,b
  7620  00099C  D012               	goto	l6706
  7621                           
  7622                           ; BSR set to: 1
  7623                           ;doprnt.c: 1089: prec -= (exp+1);
  7624  00099E  0E01               	movlw	1
  7625  0009A0  0101               	movlb	1	; () banked
  7626  0009A2  2550               	addwf	sprintf@exp& (0+255),w,b
  7627  0009A4  0100               	movlb	0	; () banked
  7628  0009A6  6FBC               	movwf	??_sprintf& (0+255),b
  7629  0009A8  0E00               	movlw	0
  7630  0009AA  0101               	movlb	1	; () banked
  7631  0009AC  2151               	addwfc	(sprintf@exp+1)& (0+255),w,b
  7632  0009AE  0100               	movlb	0	; () banked
  7633  0009B0  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  7634  0009B2  0100               	movlb	0	; () banked
  7635  0009B4  51BC               	movf	??_sprintf& (0+255),w,b
  7636  0009B6  0101               	movlb	1	; () banked
  7637  0009B8  5F55               	subwf	sprintf@prec& (0+255),f,b
  7638  0009BA  0100               	movlb	0	; () banked
  7639  0009BC  51BD               	movf	(??_sprintf+1)& (0+255),w,b
  7640  0009BE  0101               	movlb	1	; () banked
  7641  0009C0  5B56               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7642  0009C2                     l6706:
  7643                           
  7644                           ; BSR set to: 1
  7645                           ;doprnt.c: 1091: val = (unsigned long)fval;
  7646  0009C2  C152  F089         	movff	sprintf@fval,___fttol@f1
  7647  0009C6  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  7648  0009CA  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  7649  0009CE  EC7A  F014         	call	___fttol	;wreg free
  7650  0009D2  C089  F14A         	movff	?___fttol,sprintf@val
  7651  0009D6  C08A  F14B         	movff	?___fttol+1,sprintf@val+1
  7652  0009DA  C08B  F14C         	movff	?___fttol+2,sprintf@val+2
  7653  0009DE  C08C  F14D         	movff	?___fttol+3,sprintf@val+3
  7654                           
  7655                           ;doprnt.c: 1092: for(c = 0 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7656  0009E2  0E00               	movlw	0
  7657  0009E4  0101               	movlb	1	; () banked
  7658  0009E6  6F57               	movwf	sprintf@c& (0+255),b
  7659  0009E8                     l6710:
  7660                           
  7661                           ; BSR set to: 1
  7662  0009E8  0E0A               	movlw	10
  7663  0009EA  0101               	movlb	1	; () banked
  7664  0009EC  1957               	xorwf	sprintf@c& (0+255),w,b
  7665  0009EE  B4D8               	btfsc	status,2,c
  7666  0009F0  D01E               	goto	l6722
  7667                           
  7668                           ; BSR set to: 1
  7669                           ;doprnt.c: 1093: if(val < dpowers[c])
  7670                           
  7671                           ; BSR set to: 1
  7672                           
  7673                           ; BSR set to: 1
  7674  0009F2  0101               	movlb	1	; () banked
  7675  0009F4  5157               	movf	sprintf@c& (0+255),w,b
  7676  0009F6  0D04               	mullw	4
  7677  0009F8  0E55               	movlw	low _dpowers
  7678  0009FA  24F3               	addwf	prodl,w,c
  7679  0009FC  6EF6               	movwf	tblptrl,c
  7680  0009FE  0EBE               	movlw	high _dpowers
  7681  000A00  20F4               	addwfc	prodh,w,c
  7682  000A02  6EF7               	movwf	tblptrh,c
  7683  000A04                     	if	0	;There are less than 3 active tblptr bytes
  7684  000A04                     	endif
  7685  000A04  0009               	tblrd		*+
  7686  000A06  50F5               	movf	tablat,w,c
  7687  000A08  0101               	movlb	1	; () banked
  7688  000A0A  5D4A               	subwf	sprintf@val& (0+255),w,b
  7689  000A0C  0009               	tblrd		*+
  7690  000A0E  50F5               	movf	tablat,w,c
  7691  000A10  0101               	movlb	1	; () banked
  7692  000A12  594B               	subwfb	(sprintf@val+1)& (0+255),w,b
  7693  000A14  0009               	tblrd		*+
  7694  000A16  50F5               	movf	tablat,w,c
  7695  000A18  0101               	movlb	1	; () banked
  7696  000A1A  594C               	subwfb	(sprintf@val+2)& (0+255),w,b
  7697  000A1C  0009               	tblrd		*+
  7698  000A1E  50F5               	movf	tablat,w,c
  7699  000A20  0101               	movlb	1	; () banked
  7700  000A22  594D               	subwfb	(sprintf@val+3)& (0+255),w,b
  7701  000A24  A0D8               	btfss	status,0,c
  7702  000A26  D003               	goto	l6722
  7703                           
  7704                           ; BSR set to: 1
  7705                           
  7706                           ; BSR set to: 1
  7707                           
  7708                           ; BSR set to: 1
  7709                           ;doprnt.c: 1094: break;
  7710  000A28  0101               	movlb	1	; () banked
  7711  000A2A  2B57               	incf	sprintf@c& (0+255),f,b
  7712  000A2C  D7DD               	goto	l6710
  7713  000A2E                     l6722:
  7714                           
  7715                           ; BSR set to: 1
  7716                           ;doprnt.c: 1095: prec -= c;
  7717  000A2E  0101               	movlb	1	; () banked
  7718  000A30  5157               	movf	sprintf@c& (0+255),w,b
  7719  000A32  0101               	movlb	1	; () banked
  7720  000A34  5F55               	subwf	sprintf@prec& (0+255),f,b
  7721  000A36  0E00               	movlw	0
  7722  000A38  0101               	movlb	1	; () banked
  7723  000A3A  BF57               	btfsc	sprintf@c& (0+255),7,b
  7724  000A3C  0EFF               	movlw	255
  7725  000A3E  0101               	movlb	1	; () banked
  7726  000A40  5B56               	subwfb	(sprintf@prec+1)& (0+255),f,b
  7727                           
  7728                           ;doprnt.c: 1096: if(prec <= 12)
  7729  000A42  0101               	movlb	1	; () banked
  7730  000A44  BF56               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7731  000A46  D008               	goto	l6724
  7732  000A48  0101               	movlb	1	; () banked
  7733  000A4A  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  7734  000A4C  E11D               	bnz	l610
  7735  000A4E  0E0D               	movlw	13
  7736  000A50  0101               	movlb	1	; () banked
  7737  000A52  5D55               	subwf	sprintf@prec& (0+255),w,b
  7738  000A54  B0D8               	btfsc	status,0,c
  7739  000A56  D018               	goto	l610
  7740  000A58                     l6724:
  7741                           
  7742                           ; BSR set to: 1
  7743                           ;doprnt.c: 1097: fval += fround(prec);
  7744  000A58  C152  F0A0         	movff	sprintf@fval,___ftadd@f1
  7745  000A5C  C153  F0A1         	movff	sprintf@fval+1,___ftadd@f1+1
  7746  000A60  C154  F0A2         	movff	sprintf@fval+2,___ftadd@f1+2
  7747  000A64  0101               	movlb	1	; () banked
  7748  000A66  5155               	movf	sprintf@prec& (0+255),w,b
  7749  000A68  ECA4  F011         	call	_fround
  7750  000A6C  C044  F0A3         	movff	?_fround,___ftadd@f2
  7751  000A70  C045  F0A4         	movff	?_fround+1,___ftadd@f2+1
  7752  000A74  C046  F0A5         	movff	?_fround+2,___ftadd@f2+2
  7753  000A78  EC70  F010         	call	___ftadd	;wreg free
  7754  000A7C  C0A0  F152         	movff	?___ftadd,sprintf@fval
  7755  000A80  C0A1  F153         	movff	?___ftadd+1,sprintf@fval+1
  7756  000A84  C0A2  F154         	movff	?___ftadd+2,sprintf@fval+2
  7757  000A88                     l610:
  7758                           
  7759                           ;doprnt.c: 1100: {
  7760                           ;doprnt.c: 1101: double temp;
  7761                           ;doprnt.c: 1102: temp = scale(prec);
  7762  000A88  0101               	movlb	1	; () banked
  7763  000A8A  5155               	movf	sprintf@prec& (0+255),w,b
  7764  000A8C  EC42  F00D         	call	_scale
  7765  000A90  C044  F13F         	movff	?_scale,sprintf@temp
  7766  000A94  C045  F140         	movff	?_scale+1,sprintf@temp+1
  7767  000A98  C046  F141         	movff	?_scale+2,sprintf@temp+2
  7768                           
  7769                           ;doprnt.c: 1103: temp *= fval - (double)val;
  7770  000A9C  C13F  F035         	movff	sprintf@temp,___ftmul@f1
  7771  000AA0  C140  F036         	movff	sprintf@temp+1,___ftmul@f1+1
  7772  000AA4  C141  F037         	movff	sprintf@temp+2,___ftmul@f1+2
  7773  000AA8  C152  F0A3         	movff	sprintf@fval,___ftadd@f2
  7774  000AAC  C153  F0A4         	movff	sprintf@fval+1,___ftadd@f2+1
  7775  000AB0  C154  F0A5         	movff	sprintf@fval+2,___ftadd@f2+2
  7776  000AB4  C14A  F098         	movff	sprintf@val,___lltoft@c
  7777  000AB8  C14B  F099         	movff	sprintf@val+1,___lltoft@c+1
  7778  000ABC  C14C  F09A         	movff	sprintf@val+2,___lltoft@c+2
  7779  000AC0  C14D  F09B         	movff	sprintf@val+3,___lltoft@c+3
  7780  000AC4  EC70  F01B         	call	___lltoft	;wreg free
  7781  000AC8  C098  F01F         	movff	?___lltoft,___ftneg@f1
  7782  000ACC  C099  F020         	movff	?___lltoft+1,___ftneg@f1+1
  7783  000AD0  C09A  F021         	movff	?___lltoft+2,___ftneg@f1+2
  7784  000AD4  ECE8  F01E         	call	___ftneg	;wreg free
  7785  000AD8  C01F  F0A0         	movff	?___ftneg,___ftadd@f1
  7786  000ADC  C020  F0A1         	movff	?___ftneg+1,___ftadd@f1+1
  7787  000AE0  C021  F0A2         	movff	?___ftneg+2,___ftadd@f1+2
  7788  000AE4  EC70  F010         	call	___ftadd	;wreg free
  7789  000AE8  C0A0  F038         	movff	?___ftadd,___ftmul@f2
  7790  000AEC  C0A1  F039         	movff	?___ftadd+1,___ftmul@f2+1
  7791  000AF0  C0A2  F03A         	movff	?___ftadd+2,___ftmul@f2+2
  7792  000AF4  EC76  F018         	call	___ftmul	;wreg free
  7793  000AF8  C035  F13F         	movff	?___ftmul,sprintf@temp
  7794  000AFC  C036  F140         	movff	?___ftmul+1,sprintf@temp+1
  7795  000B00  C037  F141         	movff	?___ftmul+2,sprintf@temp+2
  7796                           
  7797                           ;doprnt.c: 1104: val = (unsigned long)temp;
  7798  000B04  C13F  F089         	movff	sprintf@temp,___fttol@f1
  7799  000B08  C140  F08A         	movff	sprintf@temp+1,___fttol@f1+1
  7800  000B0C  C141  F08B         	movff	sprintf@temp+2,___fttol@f1+2
  7801  000B10  EC7A  F014         	call	___fttol	;wreg free
  7802  000B14  C089  F14A         	movff	?___fttol,sprintf@val
  7803  000B18  C08A  F14B         	movff	?___fttol+1,sprintf@val+1
  7804  000B1C  C08B  F14C         	movff	?___fttol+2,sprintf@val+2
  7805  000B20  C08C  F14D         	movff	?___fttol+3,sprintf@val+3
  7806                           
  7807                           ;doprnt.c: 1105: }
  7808                           ;doprnt.c: 1106: while(prec && val % 10 == 0) {
  7809  000B24  D01E               	goto	l6734
  7810  000B26                     l6730:
  7811                           
  7812                           ;doprnt.c: 1107: val /= 10;
  7813  000B26  C14A  F017         	movff	sprintf@val,___lldiv@dividend
  7814  000B2A  C14B  F018         	movff	sprintf@val+1,___lldiv@dividend+1
  7815  000B2E  C14C  F019         	movff	sprintf@val+2,___lldiv@dividend+2
  7816  000B32  C14D  F01A         	movff	sprintf@val+3,___lldiv@dividend+3
  7817  000B36  0E0A               	movlw	10
  7818  000B38  6E1B               	movwf	___lldiv@divisor,c
  7819  000B3A  0E00               	movlw	0
  7820  000B3C  6E1C               	movwf	___lldiv@divisor+1,c
  7821  000B3E  0E00               	movlw	0
  7822  000B40  6E1D               	movwf	___lldiv@divisor+2,c
  7823  000B42  0E00               	movlw	0
  7824  000B44  6E1E               	movwf	___lldiv@divisor+3,c
  7825  000B46  EC2F  F01B         	call	___lldiv	;wreg free
  7826  000B4A  C017  F14A         	movff	?___lldiv,sprintf@val
  7827  000B4E  C018  F14B         	movff	?___lldiv+1,sprintf@val+1
  7828  000B52  C019  F14C         	movff	?___lldiv+2,sprintf@val+2
  7829  000B56  C01A  F14D         	movff	?___lldiv+3,sprintf@val+3
  7830                           
  7831                           ;doprnt.c: 1108: prec--;
  7832  000B5A  0101               	movlb	1	; () banked
  7833  000B5C  0755               	decf	sprintf@prec& (0+255),f,b
  7834  000B5E  A0D8               	btfss	status,0,c
  7835  000B60  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  7836  000B62                     l6734:
  7837  000B62  0101               	movlb	1	; () banked
  7838  000B64  5155               	movf	sprintf@prec& (0+255),w,b
  7839  000B66  0101               	movlb	1	; () banked
  7840  000B68  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  7841  000B6A  B4D8               	btfsc	status,2,c
  7842  000B6C  D03C               	goto	l6742
  7843                           
  7844                           ; BSR set to: 1
  7845  000B6E  C14A  F024         	movff	sprintf@val,___llmod@dividend
  7846  000B72  C14B  F025         	movff	sprintf@val+1,___llmod@dividend+1
  7847  000B76  C14C  F026         	movff	sprintf@val+2,___llmod@dividend+2
  7848  000B7A  C14D  F027         	movff	sprintf@val+3,___llmod@dividend+3
  7849  000B7E  0E0A               	movlw	10
  7850  000B80  6E28               	movwf	___llmod@divisor,c
  7851  000B82  0E00               	movlw	0
  7852  000B84  6E29               	movwf	___llmod@divisor+1,c
  7853  000B86  0E00               	movlw	0
  7854  000B88  6E2A               	movwf	___llmod@divisor+2,c
  7855  000B8A  0E00               	movlw	0
  7856  000B8C  6E2B               	movwf	___llmod@divisor+3,c
  7857  000B8E  EC1C  F01C         	call	___llmod	;wreg free
  7858  000B92  5024               	movf	?___llmod,w,c
  7859  000B94  1025               	iorwf	?___llmod+1,w,c
  7860  000B96  1026               	iorwf	?___llmod+2,w,c
  7861  000B98  1027               	iorwf	?___llmod+3,w,c
  7862  000B9A  A4D8               	btfss	status,2,c
  7863  000B9C  D024               	goto	l6742
  7864  000B9E  D7C3               	goto	l6730
  7865  000BA0                     l6738:
  7866                           
  7867                           ;doprnt.c: 1112: if(prec <= 12)
  7868  000BA0  0101               	movlb	1	; () banked
  7869  000BA2  BF56               	btfsc	(sprintf@prec+1)& (0+255),7,b
  7870  000BA4  D008               	goto	l6740
  7871  000BA6  0101               	movlb	1	; () banked
  7872  000BA8  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  7873  000BAA  E11D               	bnz	l6742
  7874  000BAC  0E0D               	movlw	13
  7875  000BAE  0101               	movlb	1	; () banked
  7876  000BB0  5D55               	subwf	sprintf@prec& (0+255),w,b
  7877  000BB2  B0D8               	btfsc	status,0,c
  7878  000BB4  D018               	goto	l6742
  7879  000BB6                     l6740:
  7880                           
  7881                           ; BSR set to: 1
  7882                           ;doprnt.c: 1113: fval += fround(prec);
  7883  000BB6  C152  F0A0         	movff	sprintf@fval,___ftadd@f1
  7884  000BBA  C153  F0A1         	movff	sprintf@fval+1,___ftadd@f1+1
  7885  000BBE  C154  F0A2         	movff	sprintf@fval+2,___ftadd@f1+2
  7886  000BC2  0101               	movlb	1	; () banked
  7887  000BC4  5155               	movf	sprintf@prec& (0+255),w,b
  7888  000BC6  ECA4  F011         	call	_fround
  7889  000BCA  C044  F0A3         	movff	?_fround,___ftadd@f2
  7890  000BCE  C045  F0A4         	movff	?_fround+1,___ftadd@f2+1
  7891  000BD2  C046  F0A5         	movff	?_fround+2,___ftadd@f2+2
  7892  000BD6  EC70  F010         	call	___ftadd	;wreg free
  7893  000BDA  C0A0  F152         	movff	?___ftadd,sprintf@fval
  7894  000BDE  C0A1  F153         	movff	?___ftadd+1,sprintf@fval+1
  7895  000BE2  C0A2  F154         	movff	?___ftadd+2,sprintf@fval+2
  7896  000BE6                     l6742:
  7897                           
  7898                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7899  000BE6  0101               	movlb	1	; () banked
  7900  000BE8  BF51               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7901  000BEA  D008               	goto	l6744
  7902  000BEC  0101               	movlb	1	; () banked
  7903  000BEE  5151               	movf	(sprintf@exp+1)& (0+255),w,b
  7904  000BF0  E12A               	bnz	l6750
  7905  000BF2  0E0A               	movlw	10
  7906  000BF4  0101               	movlb	1	; () banked
  7907  000BF6  5D50               	subwf	sprintf@exp& (0+255),w,b
  7908  000BF8  B0D8               	btfsc	status,0,c
  7909  000BFA  D025               	goto	l6750
  7910  000BFC                     l6744:
  7911                           
  7912                           ; BSR set to: 1
  7913  000BFC  0101               	movlb	1	; () banked
  7914  000BFE  5152               	movf	sprintf@fval& (0+255),w,b
  7915  000C00  0101               	movlb	1	; () banked
  7916  000C02  1153               	iorwf	(sprintf@fval+1)& (0+255),w,b
  7917  000C04  0101               	movlb	1	; () banked
  7918  000C06  1154               	iorwf	(sprintf@fval+2)& (0+255),w,b
  7919  000C08  B4D8               	btfsc	status,2,c
  7920  000C0A  D063               	goto	l6764
  7921                           
  7922                           ; BSR set to: 1
  7923  000C0C  C152  F089         	movff	sprintf@fval,___fttol@f1
  7924  000C10  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  7925  000C14  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  7926  000C18  EC7A  F014         	call	___fttol	;wreg free
  7927  000C1C  0100               	movlb	0	; () banked
  7928  000C1E  5189               	movf	?___fttol& (0+255),w,b
  7929  000C20  0100               	movlb	0	; () banked
  7930  000C22  118A               	iorwf	(?___fttol+1)& (0+255),w,b
  7931  000C24  0100               	movlb	0	; () banked
  7932  000C26  118B               	iorwf	(?___fttol+2)& (0+255),w,b
  7933  000C28  0100               	movlb	0	; () banked
  7934  000C2A  118C               	iorwf	(?___fttol+3)& (0+255),w,b
  7935  000C2C  A4D8               	btfss	status,2,c
  7936  000C2E  D051               	goto	l6764
  7937                           
  7938                           ; BSR set to: 0
  7939  000C30  0101               	movlb	1	; () banked
  7940  000C32  BF51               	btfsc	(sprintf@exp+1)& (0+255),7,b
  7941  000C34  D04E               	goto	l6764
  7942  000C36  0101               	movlb	1	; () banked
  7943  000C38  5151               	movf	(sprintf@exp+1)& (0+255),w,b
  7944  000C3A  E105               	bnz	l6750
  7945  000C3C  0E02               	movlw	2
  7946  000C3E  0101               	movlb	1	; () banked
  7947  000C40  5D50               	subwf	sprintf@exp& (0+255),w,b
  7948  000C42  A0D8               	btfss	status,0,c
  7949  000C44  D046               	goto	l6764
  7950  000C46                     l6750:
  7951                           
  7952                           ; BSR set to: 1
  7953                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7954  000C46  C144  F0AC         	movff	sprintf@tmpval,___ftge@ff1
  7955  000C4A  C145  F0AD         	movff	sprintf@tmpval+1,___ftge@ff1+1
  7956  000C4E  C146  F0AE         	movff	sprintf@tmpval+2,___ftge@ff1+2
  7957  000C52  0E70               	movlw	112
  7958  000C54  0100               	movlb	0	; () banked
  7959  000C56  6FAF               	movwf	___ftge@ff2& (0+255),b
  7960  000C58  0E89               	movlw	137
  7961  000C5A  0100               	movlb	0	; () banked
  7962  000C5C  6FB0               	movwf	(___ftge@ff2+1)& (0+255),b
  7963  000C5E  0E40               	movlw	64
  7964  000C60  0100               	movlb	0	; () banked
  7965  000C62  6FB1               	movwf	(___ftge@ff2+2)& (0+255),b
  7966  000C64  ECE0  F019         	call	___ftge	;wreg free
  7967  000C68  0100               	movlb	0	; () banked
  7968  000C6A  B0D8               	btfsc	status,0,c
  7969  000C6C  D003               	goto	l6754
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7973  000C6E  0101               	movlb	1	; () banked
  7974  000C70  0EF7               	movlw	247
  7975  000C72  D002               	goto	L5
  7976  000C74                     l6754:
  7977                           
  7978                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7979  000C74  0101               	movlb	1	; () banked
  7980  000C76  0EF8               	movlw	248
  7981  000C78                     L5:
  7982  000C78  2750               	addwf	sprintf@exp& (0+255),f,b
  7983  000C7A  0EFF               	movlw	255
  7984  000C7C  2351               	addwfc	(sprintf@exp+1)& (0+255),f,b
  7985                           
  7986                           ; BSR set to: 1
  7987                           ;doprnt.c: 1124: }
  7988                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  7989                           
  7990                           ; BSR set to: 1
  7991  000C7E  0101               	movlb	1	; () banked
  7992  000C80  5150               	movf	sprintf@exp& (0+255),w,b
  7993  000C82  EC42  F00D         	call	_scale
  7994  000C86  C044  F144         	movff	?_scale,sprintf@tmpval
  7995  000C8A  C045  F145         	movff	?_scale+1,sprintf@tmpval+1
  7996  000C8E  C046  F146         	movff	?_scale+2,sprintf@tmpval+2
  7997                           
  7998                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7999  000C92  C152  F017         	movff	sprintf@fval,__tdiv_to_l_@f1
  8000  000C96  C153  F018         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  8001  000C9A  C154  F019         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  8002  000C9E  C144  F01A         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  8003  000CA2  C145  F01B         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  8004  000CA6  C146  F01C         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  8005  000CAA  EC1C  F015         	call	__tdiv_to_l_	;wreg free
  8006  000CAE  C017  F14A         	movff	?__tdiv_to_l_,sprintf@val
  8007  000CB2  C018  F14B         	movff	?__tdiv_to_l_+1,sprintf@val+1
  8008  000CB6  C019  F14C         	movff	?__tdiv_to_l_+2,sprintf@val+2
  8009  000CBA  C01A  F14D         	movff	?__tdiv_to_l_+3,sprintf@val+3
  8010                           
  8011                           ;doprnt.c: 1129: fval = 0.0;
  8012  000CBE  0E00               	movlw	0
  8013  000CC0  0101               	movlb	1	; () banked
  8014  000CC2  6F52               	movwf	sprintf@fval& (0+255),b
  8015  000CC4  0E00               	movlw	0
  8016  000CC6  0101               	movlb	1	; () banked
  8017  000CC8  6F53               	movwf	(sprintf@fval+1)& (0+255),b
  8018  000CCA  0E00               	movlw	0
  8019  000CCC  0101               	movlb	1	; () banked
  8020  000CCE  6F54               	movwf	(sprintf@fval+2)& (0+255),b
  8021                           
  8022                           ;doprnt.c: 1130: } else {
  8023  000CD0  D033               	goto	l6768
  8024  000CD2                     l6764:
  8025                           
  8026                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8027  000CD2  C152  F089         	movff	sprintf@fval,___fttol@f1
  8028  000CD6  C153  F08A         	movff	sprintf@fval+1,___fttol@f1+1
  8029  000CDA  C154  F08B         	movff	sprintf@fval+2,___fttol@f1+2
  8030  000CDE  EC7A  F014         	call	___fttol	;wreg free
  8031  000CE2  C089  F14A         	movff	?___fttol,sprintf@val
  8032  000CE6  C08A  F14B         	movff	?___fttol+1,sprintf@val+1
  8033  000CEA  C08B  F14C         	movff	?___fttol+2,sprintf@val+2
  8034  000CEE  C08C  F14D         	movff	?___fttol+3,sprintf@val+3
  8035                           
  8036                           ;doprnt.c: 1132: fval -= (double)val;
  8037  000CF2  C152  F0AC         	movff	sprintf@fval,___ftsub@f1
  8038  000CF6  C153  F0AD         	movff	sprintf@fval+1,___ftsub@f1+1
  8039  000CFA  C154  F0AE         	movff	sprintf@fval+2,___ftsub@f1+2
  8040  000CFE  C14A  F098         	movff	sprintf@val,___lltoft@c
  8041  000D02  C14B  F099         	movff	sprintf@val+1,___lltoft@c+1
  8042  000D06  C14C  F09A         	movff	sprintf@val+2,___lltoft@c+2
  8043  000D0A  C14D  F09B         	movff	sprintf@val+3,___lltoft@c+3
  8044  000D0E  EC70  F01B         	call	___lltoft	;wreg free
  8045  000D12  C098  F0AF         	movff	?___lltoft,___ftsub@f2
  8046  000D16  C099  F0B0         	movff	?___lltoft+1,___ftsub@f2+1
  8047  000D1A  C09A  F0B1         	movff	?___lltoft+2,___ftsub@f2+2
  8048  000D1E  EC58  F01D         	call	___ftsub	;wreg free
  8049  000D22  C0AC  F152         	movff	?___ftsub,sprintf@fval
  8050  000D26  C0AD  F153         	movff	?___ftsub+1,sprintf@fval+1
  8051  000D2A  C0AE  F154         	movff	?___ftsub+2,sprintf@fval+2
  8052                           
  8053                           ;doprnt.c: 1133: exp = 0;
  8054  000D2E  0E00               	movlw	0
  8055  000D30  0101               	movlb	1	; () banked
  8056  000D32  6F51               	movwf	(sprintf@exp+1)& (0+255),b
  8057  000D34  0E00               	movlw	0
  8058  000D36  6F50               	movwf	sprintf@exp& (0+255),b
  8059  000D38                     l6768:
  8060                           
  8061                           ; BSR set to: 1
  8062                           ;doprnt.c: 1134: }
  8063                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8064  000D38  0E01               	movlw	1
  8065  000D3A  0101               	movlb	1	; () banked
  8066  000D3C  6F57               	movwf	sprintf@c& (0+255),b
  8067  000D3E                     l6770:
  8068                           
  8069                           ; BSR set to: 1
  8070  000D3E  0E0A               	movlw	10
  8071  000D40  0101               	movlb	1	; () banked
  8072  000D42  1957               	xorwf	sprintf@c& (0+255),w,b
  8073  000D44  B4D8               	btfsc	status,2,c
  8074  000D46  D01E               	goto	l6782
  8075                           
  8076                           ; BSR set to: 1
  8077                           ;doprnt.c: 1137: if(val < dpowers[c])
  8078                           
  8079                           ; BSR set to: 1
  8080                           
  8081                           ; BSR set to: 1
  8082  000D48  0101               	movlb	1	; () banked
  8083  000D4A  5157               	movf	sprintf@c& (0+255),w,b
  8084  000D4C  0D04               	mullw	4
  8085  000D4E  0E55               	movlw	low _dpowers
  8086  000D50  24F3               	addwf	prodl,w,c
  8087  000D52  6EF6               	movwf	tblptrl,c
  8088  000D54  0EBE               	movlw	high _dpowers
  8089  000D56  20F4               	addwfc	prodh,w,c
  8090  000D58  6EF7               	movwf	tblptrh,c
  8091  000D5A                     	if	0	;There are less than 3 active tblptr bytes
  8092  000D5A                     	endif
  8093  000D5A  0009               	tblrd		*+
  8094  000D5C  50F5               	movf	tablat,w,c
  8095  000D5E  0101               	movlb	1	; () banked
  8096  000D60  5D4A               	subwf	sprintf@val& (0+255),w,b
  8097  000D62  0009               	tblrd		*+
  8098  000D64  50F5               	movf	tablat,w,c
  8099  000D66  0101               	movlb	1	; () banked
  8100  000D68  594B               	subwfb	(sprintf@val+1)& (0+255),w,b
  8101  000D6A  0009               	tblrd		*+
  8102  000D6C  50F5               	movf	tablat,w,c
  8103  000D6E  0101               	movlb	1	; () banked
  8104  000D70  594C               	subwfb	(sprintf@val+2)& (0+255),w,b
  8105  000D72  0009               	tblrd		*+
  8106  000D74  50F5               	movf	tablat,w,c
  8107  000D76  0101               	movlb	1	; () banked
  8108  000D78  594D               	subwfb	(sprintf@val+3)& (0+255),w,b
  8109  000D7A  A0D8               	btfss	status,0,c
  8110  000D7C  D003               	goto	l6782
  8111                           
  8112                           ; BSR set to: 1
  8113                           
  8114                           ; BSR set to: 1
  8115                           
  8116                           ; BSR set to: 1
  8117                           ;doprnt.c: 1138: break;
  8118  000D7E  0101               	movlb	1	; () banked
  8119  000D80  2B57               	incf	sprintf@c& (0+255),f,b
  8120  000D82  D7DD               	goto	l6770
  8121  000D84                     l6782:
  8122                           
  8123                           ; BSR set to: 1
  8124                           ;doprnt.c: 1142: width -= prec + c + exp;
  8125  000D84  C157  F0BC         	movff	sprintf@c,??_sprintf
  8126  000D88  0100               	movlb	0	; () banked
  8127  000D8A  6BBD               	clrf	(??_sprintf+1)& (0+255),b
  8128  000D8C  BFBC               	btfsc	??_sprintf& (0+255),7,b
  8129  000D8E  07BD               	decf	(??_sprintf+1)& (0+255),f,b
  8130  000D90  0101               	movlb	1	; () banked
  8131  000D92  5155               	movf	sprintf@prec& (0+255),w,b
  8132  000D94  0100               	movlb	0	; () banked
  8133  000D96  27BC               	addwf	??_sprintf& (0+255),f,b
  8134  000D98  0101               	movlb	1	; () banked
  8135  000D9A  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  8136  000D9C  0100               	movlb	0	; () banked
  8137  000D9E  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
  8138  000DA0  0101               	movlb	1	; () banked
  8139  000DA2  5150               	movf	sprintf@exp& (0+255),w,b
  8140  000DA4  0100               	movlb	0	; () banked
  8141  000DA6  27BC               	addwf	??_sprintf& (0+255),f,b
  8142  000DA8  0101               	movlb	1	; () banked
  8143  000DAA  5151               	movf	(sprintf@exp+1)& (0+255),w,b
  8144  000DAC  0100               	movlb	0	; () banked
  8145  000DAE  23BD               	addwfc	(??_sprintf+1)& (0+255),f,b
  8146  000DB0  0100               	movlb	0	; () banked
  8147  000DB2  51BC               	movf	??_sprintf& (0+255),w,b
  8148  000DB4  0101               	movlb	1	; () banked
  8149  000DB6  5F48               	subwf	sprintf@width& (0+255),f,b
  8150  000DB8  0100               	movlb	0	; () banked
  8151  000DBA  51BD               	movf	(??_sprintf+1)& (0+255),w,b
  8152  000DBC  0101               	movlb	1	; () banked
  8153  000DBE  5B49               	subwfb	(sprintf@width+1)& (0+255),f,b
  8154                           
  8155                           ;doprnt.c: 1143: if(
  8156                           ;doprnt.c: 1147: prec)
  8157  000DC0  0101               	movlb	1	; () banked
  8158  000DC2  5155               	movf	sprintf@prec& (0+255),w,b
  8159  000DC4  0101               	movlb	1	; () banked
  8160  000DC6  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8161  000DC8  B4D8               	btfsc	status,2,c
  8162  000DCA  D004               	goto	l6786
  8163                           
  8164                           ; BSR set to: 1
  8165                           ;doprnt.c: 1148: width--;
  8166  000DCC  0101               	movlb	1	; () banked
  8167  000DCE  0748               	decf	sprintf@width& (0+255),f,b
  8168  000DD0  A0D8               	btfss	status,0,c
  8169  000DD2  0749               	decf	(sprintf@width+1)& (0+255),f,b
  8170  000DD4                     l6786:
  8171                           
  8172                           ; BSR set to: 1
  8173                           ;doprnt.c: 1149: if(flag & 0x03)
  8174  000DD4  0E03               	movlw	3
  8175  000DD6  0101               	movlb	1	; () banked
  8176  000DD8  154E               	andwf	sprintf@flag& (0+255),w,b
  8177  000DDA  0100               	movlb	0	; () banked
  8178  000DDC  6FBC               	movwf	??_sprintf& (0+255),b
  8179  000DDE  0E00               	movlw	0
  8180  000DE0  0101               	movlb	1	; () banked
  8181  000DE2  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8182  000DE4  0100               	movlb	0	; () banked
  8183  000DE6  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  8184  000DE8  0100               	movlb	0	; () banked
  8185  000DEA  51BC               	movf	??_sprintf& (0+255),w,b
  8186  000DEC  0100               	movlb	0	; () banked
  8187  000DEE  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
  8188  000DF0  B4D8               	btfsc	status,2,c
  8189  000DF2  D004               	goto	l6790
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;doprnt.c: 1150: width--;
  8193  000DF4  0101               	movlb	1	; () banked
  8194  000DF6  0748               	decf	sprintf@width& (0+255),f,b
  8195  000DF8  A0D8               	btfss	status,0,c
  8196  000DFA  0749               	decf	(sprintf@width+1)& (0+255),f,b
  8197  000DFC                     l6790:
  8198                           
  8199                           ;doprnt.c: 1175: {
  8200                           ;doprnt.c: 1177: if(!(flag & 0x08))
  8201  000DFC  0101               	movlb	1	; () banked
  8202  000DFE  A74E               	btfss	sprintf@flag& (0+255),3,b
  8203  000E00  D00E               	goto	l6800
  8204  000E02  D017               	goto	l6802
  8205  000E04                     l6794:
  8206                           
  8207                           ; BSR set to: 1
  8208                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  8209  000E04  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8210  000E08  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8211  000E0C  0E20               	movlw	32
  8212  000E0E  6EDF               	movwf	indf2,c
  8213                           
  8214                           ; BSR set to: 1
  8215  000E10  0100               	movlb	0	; () banked
  8216  000E12  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8217  000E14  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8218                           
  8219                           ; BSR set to: 0
  8220                           ;doprnt.c: 1182: width--;
  8221  000E16  0101               	movlb	1	; () banked
  8222  000E18  0748               	decf	sprintf@width& (0+255),f,b
  8223  000E1A  A0D8               	btfss	status,0,c
  8224  000E1C  0749               	decf	(sprintf@width+1)& (0+255),f,b
  8225  000E1E                     l6800:
  8226                           
  8227                           ; BSR set to: 1
  8228  000E1E  0101               	movlb	1	; () banked
  8229  000E20  BF49               	btfsc	(sprintf@width+1)& (0+255),7,b
  8230  000E22  D007               	goto	l6802
  8231  000E24  0101               	movlb	1	; () banked
  8232  000E26  5149               	movf	(sprintf@width+1)& (0+255),w,b
  8233  000E28  E1ED               	bnz	l6794
  8234  000E2A  0101               	movlb	1	; () banked
  8235  000E2C  0548               	decf	sprintf@width& (0+255),w,b
  8236  000E2E  B0D8               	btfsc	status,0,c
  8237  000E30  D7E9               	goto	l6794
  8238  000E32                     l6802:
  8239                           
  8240                           ; BSR set to: 1
  8241                           ;doprnt.c: 1183: }
  8242                           ;doprnt.c: 1188: if(flag & 0x03)
  8243  000E32  0E03               	movlw	3
  8244  000E34  0101               	movlb	1	; () banked
  8245  000E36  154E               	andwf	sprintf@flag& (0+255),w,b
  8246  000E38  0100               	movlb	0	; () banked
  8247  000E3A  6FBC               	movwf	??_sprintf& (0+255),b
  8248  000E3C  0E00               	movlw	0
  8249  000E3E  0101               	movlb	1	; () banked
  8250  000E40  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8251  000E42  0100               	movlb	0	; () banked
  8252  000E44  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  8253  000E46  0100               	movlb	0	; () banked
  8254  000E48  51BC               	movf	??_sprintf& (0+255),w,b
  8255  000E4A  0100               	movlb	0	; () banked
  8256  000E4C  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
  8257  000E4E  B4D8               	btfsc	status,2,c
  8258  000E50  D054               	goto	l6816
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8262  000E52  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8263  000E56  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8264  000E5A  0E2D               	movlw	45
  8265  000E5C  D04C               	goto	L6
  8266  000E5E                     l6806:
  8267                           
  8268                           ; BSR set to: 0
  8269  000E5E  0100               	movlb	0	; () banked
  8270  000E60  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8271  000E62  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;doprnt.c: 1195: }
  8275                           ;doprnt.c: 1196: while(c--) {
  8276  000E64  D04A               	goto	l6816
  8277  000E66                     l6808:
  8278                           
  8279                           ;doprnt.c: 1200: {
  8280                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  8281  000E66  C14A  F017         	movff	sprintf@val,___lldiv@dividend
  8282  000E6A  C14B  F018         	movff	sprintf@val+1,___lldiv@dividend+1
  8283  000E6E  C14C  F019         	movff	sprintf@val+2,___lldiv@dividend+2
  8284  000E72  C14D  F01A         	movff	sprintf@val+3,___lldiv@dividend+3
  8285  000E76  0101               	movlb	1	; () banked
  8286  000E78  5157               	movf	sprintf@c& (0+255),w,b
  8287  000E7A  0D04               	mullw	4
  8288  000E7C  0E55               	movlw	low _dpowers
  8289  000E7E  24F3               	addwf	prodl,w,c
  8290  000E80  6EF6               	movwf	tblptrl,c
  8291  000E82  0EBE               	movlw	high _dpowers
  8292  000E84  20F4               	addwfc	prodh,w,c
  8293  000E86  6EF7               	movwf	tblptrh,c
  8294  000E88                     	if	0	;There are less than 3 active tblptr bytes
  8295  000E88                     	endif
  8296  000E88  0009               	tblrd		*+
  8297  000E8A  CFF5 F01B          	movff	tablat,___lldiv@divisor
  8298  000E8E  0009               	tblrd		*+
  8299  000E90  CFF5 F01C          	movff	tablat,___lldiv@divisor+1
  8300  000E94  0009               	tblrd		*+
  8301  000E96  CFF5 F01D          	movff	tablat,___lldiv@divisor+2
  8302  000E9A  000A               	tblrd		*-
  8303  000E9C  CFF5 F01E          	movff	tablat,___lldiv@divisor+3
  8304  000EA0  EC2F  F01B         	call	___lldiv	;wreg free
  8305  000EA4  C017  F144         	movff	?___lldiv,sprintf@tmpval
  8306  000EA8  C018  F145         	movff	?___lldiv+1,sprintf@tmpval+1
  8307  000EAC  C019  F146         	movff	?___lldiv+2,sprintf@tmpval+2
  8308  000EB0  C01A  F147         	movff	?___lldiv+3,sprintf@tmpval+3
  8309                           
  8310                           ;doprnt.c: 1202: tmpval.vd %= 10;
  8311  000EB4  C144  F024         	movff	sprintf@tmpval,___llmod@dividend
  8312  000EB8  C145  F025         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8313  000EBC  C146  F026         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8314  000EC0  C147  F027         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8315  000EC4  0E0A               	movlw	10
  8316  000EC6  6E28               	movwf	___llmod@divisor,c
  8317  000EC8  0E00               	movlw	0
  8318  000ECA  6E29               	movwf	___llmod@divisor+1,c
  8319  000ECC  0E00               	movlw	0
  8320  000ECE  6E2A               	movwf	___llmod@divisor+2,c
  8321  000ED0  0E00               	movlw	0
  8322  000ED2  6E2B               	movwf	___llmod@divisor+3,c
  8323  000ED4  EC1C  F01C         	call	___llmod	;wreg free
  8324  000ED8  C024  F144         	movff	?___llmod,sprintf@tmpval
  8325  000EDC  C025  F145         	movff	?___llmod+1,sprintf@tmpval+1
  8326  000EE0  C026  F146         	movff	?___llmod+2,sprintf@tmpval+2
  8327  000EE4  C027  F147         	movff	?___llmod+3,sprintf@tmpval+3
  8328                           
  8329                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  8330  000EE8  0101               	movlb	1	; () banked
  8331  000EEA  5144               	movf	sprintf@tmpval& (0+255),w,b
  8332  000EEC  0F30               	addlw	48
  8333  000EEE  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8334  000EF2  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8335  000EF6                     L6:
  8336  000EF6  6EDF               	movwf	indf2,c
  8337  000EF8  D7B2               	goto	l6806
  8338  000EFA                     l6816:
  8339                           
  8340                           ; BSR set to: 0
  8341  000EFA  0101               	movlb	1	; () banked
  8342  000EFC  0757               	decf	sprintf@c& (0+255),f,b
  8343  000EFE  0101               	movlb	1	; () banked
  8344  000F00  2957               	incf	sprintf@c& (0+255),w,b
  8345  000F02  B4D8               	btfsc	status,2,c
  8346  000F04  D00E               	goto	l6824
  8347  000F06  D7AF               	goto	l6808
  8348  000F08                     l6818:
  8349                           
  8350                           ; BSR set to: 1
  8351                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  8352  000F08  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8353  000F0C  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8354  000F10  0E30               	movlw	48
  8355  000F12  6EDF               	movwf	indf2,c
  8356                           
  8357                           ; BSR set to: 1
  8358  000F14  0100               	movlb	0	; () banked
  8359  000F16  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8360  000F18  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8361                           
  8362                           ; BSR set to: 0
  8363                           ;doprnt.c: 1209: exp--;
  8364  000F1A  0101               	movlb	1	; () banked
  8365  000F1C  0750               	decf	sprintf@exp& (0+255),f,b
  8366  000F1E  A0D8               	btfss	status,0,c
  8367  000F20  0751               	decf	(sprintf@exp+1)& (0+255),f,b
  8368  000F22                     l6824:
  8369                           
  8370                           ; BSR set to: 1
  8371  000F22  0101               	movlb	1	; () banked
  8372  000F24  BF51               	btfsc	(sprintf@exp+1)& (0+255),7,b
  8373  000F26  D007               	goto	l6826
  8374  000F28  0101               	movlb	1	; () banked
  8375  000F2A  5151               	movf	(sprintf@exp+1)& (0+255),w,b
  8376  000F2C  E1ED               	bnz	l6818
  8377  000F2E  0101               	movlb	1	; () banked
  8378  000F30  0550               	decf	sprintf@exp& (0+255),w,b
  8379  000F32  B0D8               	btfsc	status,0,c
  8380  000F34  D7E9               	goto	l6818
  8381  000F36                     l6826:
  8382                           
  8383                           ; BSR set to: 1
  8384                           ;doprnt.c: 1210: }
  8385                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  8386  000F36  0101               	movlb	1	; () banked
  8387  000F38  BF56               	btfsc	(sprintf@prec+1)& (0+255),7,b
  8388  000F3A  D00C               	goto	l644
  8389  000F3C  0101               	movlb	1	; () banked
  8390  000F3E  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  8391  000F40  E105               	bnz	u6990
  8392  000F42  0E09               	movlw	9
  8393  000F44  0101               	movlb	1	; () banked
  8394  000F46  5D55               	subwf	sprintf@prec& (0+255),w,b
  8395  000F48  A0D8               	btfss	status,0,c
  8396  000F4A  D004               	goto	l644
  8397  000F4C                     u6990:
  8398                           
  8399                           ; BSR set to: 1
  8400                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8401  000F4C  0E08               	movlw	8
  8402  000F4E  0101               	movlb	1	; () banked
  8403  000F50  6F57               	movwf	sprintf@c& (0+255),b
  8404  000F52  D002               	goto	l6830
  8405  000F54                     l644:
  8406                           
  8407                           ; BSR set to: 1
  8408                           ;doprnt.c: 1213: else
  8409                           ;doprnt.c: 1214: c = prec;
  8410  000F54  C155  F157         	movff	sprintf@prec,sprintf@c
  8411  000F58                     l6830:
  8412                           
  8413                           ; BSR set to: 1
  8414                           ;doprnt.c: 1215: prec -= c;
  8415  000F58  0101               	movlb	1	; () banked
  8416  000F5A  5157               	movf	sprintf@c& (0+255),w,b
  8417  000F5C  0101               	movlb	1	; () banked
  8418  000F5E  5F55               	subwf	sprintf@prec& (0+255),f,b
  8419  000F60  0E00               	movlw	0
  8420  000F62  0101               	movlb	1	; () banked
  8421  000F64  BF57               	btfsc	sprintf@c& (0+255),7,b
  8422  000F66  0EFF               	movlw	255
  8423  000F68  0101               	movlb	1	; () banked
  8424  000F6A  5B56               	subwfb	(sprintf@prec+1)& (0+255),f,b
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;doprnt.c: 1219: if(c)
  8428  000F6C  0101               	movlb	1	; () banked
  8429  000F6E  5157               	movf	sprintf@c& (0+255),w,b
  8430  000F70  0101               	movlb	1	; () banked
  8431  000F72  B4D8               	btfsc	status,2,c
  8432  000F74  D009               	goto	l6838
  8433                           
  8434                           ; BSR set to: 1
  8435                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  8436  000F76  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8437  000F7A  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8438  000F7E  0E2E               	movlw	46
  8439  000F80  6EDF               	movwf	indf2,c
  8440                           
  8441                           ; BSR set to: 1
  8442  000F82  0100               	movlb	0	; () banked
  8443  000F84  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8444  000F86  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8445  000F88                     l6838:
  8446                           
  8447                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8448  000F88  0101               	movlb	1	; () banked
  8449  000F8A  5157               	movf	sprintf@c& (0+255),w,b
  8450  000F8C  EC42  F00D         	call	_scale
  8451  000F90  C044  F13C         	movff	?_scale,_sprintf$2285
  8452  000F94  C045  F13D         	movff	?_scale+1,_sprintf$2285+1
  8453  000F98  C046  F13E         	movff	?_scale+2,_sprintf$2285+2
  8454                           
  8455                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  8456  000F9C  C152  F038         	movff	sprintf@fval,___ftmul@f2
  8457  000FA0  C153  F039         	movff	sprintf@fval+1,___ftmul@f2+1
  8458  000FA4  C154  F03A         	movff	sprintf@fval+2,___ftmul@f2+2
  8459  000FA8  C13C  F035         	movff	_sprintf$2285,___ftmul@f1
  8460  000FAC  C13D  F036         	movff	_sprintf$2285+1,___ftmul@f1+1
  8461  000FB0  C13E  F037         	movff	_sprintf$2285+2,___ftmul@f1+2
  8462  000FB4  EC76  F018         	call	___ftmul	;wreg free
  8463  000FB8  C035  F089         	movff	?___ftmul,___fttol@f1
  8464  000FBC  C036  F08A         	movff	?___ftmul+1,___fttol@f1+1
  8465  000FC0  C037  F08B         	movff	?___ftmul+2,___fttol@f1+2
  8466  000FC4  EC7A  F014         	call	___fttol	;wreg free
  8467  000FC8  C089  F14A         	movff	?___fttol,sprintf@val
  8468  000FCC  C08A  F14B         	movff	?___fttol+1,sprintf@val+1
  8469  000FD0  C08B  F14C         	movff	?___fttol+2,sprintf@val+2
  8470  000FD4  C08C  F14D         	movff	?___fttol+3,sprintf@val+3
  8471                           
  8472                           ;doprnt.c: 1228: while(c--) {
  8473  000FD8  D073               	goto	l6852
  8474  000FDA                     l6842:
  8475                           
  8476                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  8477  000FDA  C14A  F017         	movff	sprintf@val,___lldiv@dividend
  8478  000FDE  C14B  F018         	movff	sprintf@val+1,___lldiv@dividend+1
  8479  000FE2  C14C  F019         	movff	sprintf@val+2,___lldiv@dividend+2
  8480  000FE6  C14D  F01A         	movff	sprintf@val+3,___lldiv@dividend+3
  8481  000FEA  0101               	movlb	1	; () banked
  8482  000FEC  5157               	movf	sprintf@c& (0+255),w,b
  8483  000FEE  0D04               	mullw	4
  8484  000FF0  0E55               	movlw	low _dpowers
  8485  000FF2  24F3               	addwf	prodl,w,c
  8486  000FF4  6EF6               	movwf	tblptrl,c
  8487  000FF6  0EBE               	movlw	high _dpowers
  8488  000FF8  20F4               	addwfc	prodh,w,c
  8489  000FFA  6EF7               	movwf	tblptrh,c
  8490  000FFC                     	if	0	;There are less than 3 active tblptr bytes
  8491  000FFC                     	endif
  8492  000FFC  0009               	tblrd		*+
  8493  000FFE  CFF5 F01B          	movff	tablat,___lldiv@divisor
  8494  001002  0009               	tblrd		*+
  8495  001004  CFF5 F01C          	movff	tablat,___lldiv@divisor+1
  8496  001008  0009               	tblrd		*+
  8497  00100A  CFF5 F01D          	movff	tablat,___lldiv@divisor+2
  8498  00100E  000A               	tblrd		*-
  8499  001010  CFF5 F01E          	movff	tablat,___lldiv@divisor+3
  8500  001014  EC2F  F01B         	call	___lldiv	;wreg free
  8501  001018  C017  F144         	movff	?___lldiv,sprintf@tmpval
  8502  00101C  C018  F145         	movff	?___lldiv+1,sprintf@tmpval+1
  8503  001020  C019  F146         	movff	?___lldiv+2,sprintf@tmpval+2
  8504  001024  C01A  F147         	movff	?___lldiv+3,sprintf@tmpval+3
  8505                           
  8506                           ;doprnt.c: 1230: tmpval.vd %= 10;
  8507  001028  C144  F024         	movff	sprintf@tmpval,___llmod@dividend
  8508  00102C  C145  F025         	movff	sprintf@tmpval+1,___llmod@dividend+1
  8509  001030  C146  F026         	movff	sprintf@tmpval+2,___llmod@dividend+2
  8510  001034  C147  F027         	movff	sprintf@tmpval+3,___llmod@dividend+3
  8511  001038  0E0A               	movlw	10
  8512  00103A  6E28               	movwf	___llmod@divisor,c
  8513  00103C  0E00               	movlw	0
  8514  00103E  6E29               	movwf	___llmod@divisor+1,c
  8515  001040  0E00               	movlw	0
  8516  001042  6E2A               	movwf	___llmod@divisor+2,c
  8517  001044  0E00               	movlw	0
  8518  001046  6E2B               	movwf	___llmod@divisor+3,c
  8519  001048  EC1C  F01C         	call	___llmod	;wreg free
  8520  00104C  C024  F144         	movff	?___llmod,sprintf@tmpval
  8521  001050  C025  F145         	movff	?___llmod+1,sprintf@tmpval+1
  8522  001054  C026  F146         	movff	?___llmod+2,sprintf@tmpval+2
  8523  001058  C027  F147         	movff	?___llmod+3,sprintf@tmpval+3
  8524                           
  8525                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  8526  00105C  0101               	movlb	1	; () banked
  8527  00105E  5144               	movf	sprintf@tmpval& (0+255),w,b
  8528  001060  0F30               	addlw	48
  8529  001062  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8530  001066  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8531  00106A  6EDF               	movwf	indf2,c
  8532                           
  8533                           ; BSR set to: 1
  8534  00106C  0100               	movlb	0	; () banked
  8535  00106E  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8536  001070  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8537                           
  8538                           ; BSR set to: 0
  8539                           ;doprnt.c: 1232: val %= dpowers[c];
  8540  001072  C14A  F024         	movff	sprintf@val,___llmod@dividend
  8541  001076  C14B  F025         	movff	sprintf@val+1,___llmod@dividend+1
  8542  00107A  C14C  F026         	movff	sprintf@val+2,___llmod@dividend+2
  8543  00107E  C14D  F027         	movff	sprintf@val+3,___llmod@dividend+3
  8544  001082  0101               	movlb	1	; () banked
  8545  001084  5157               	movf	sprintf@c& (0+255),w,b
  8546  001086  0D04               	mullw	4
  8547  001088  0E55               	movlw	low _dpowers
  8548  00108A  24F3               	addwf	prodl,w,c
  8549  00108C  6EF6               	movwf	tblptrl,c
  8550  00108E  0EBE               	movlw	high _dpowers
  8551  001090  20F4               	addwfc	prodh,w,c
  8552  001092  6EF7               	movwf	tblptrh,c
  8553  001094                     	if	0	;There are less than 3 active tblptr bytes
  8554  001094                     	endif
  8555  001094  0009               	tblrd		*+
  8556  001096  CFF5 F028          	movff	tablat,___llmod@divisor
  8557  00109A  0009               	tblrd		*+
  8558  00109C  CFF5 F029          	movff	tablat,___llmod@divisor+1
  8559  0010A0  0009               	tblrd		*+
  8560  0010A2  CFF5 F02A          	movff	tablat,___llmod@divisor+2
  8561  0010A6  000A               	tblrd		*-
  8562  0010A8  CFF5 F02B          	movff	tablat,___llmod@divisor+3
  8563  0010AC  EC1C  F01C         	call	___llmod	;wreg free
  8564  0010B0  C024  F14A         	movff	?___llmod,sprintf@val
  8565  0010B4  C025  F14B         	movff	?___llmod+1,sprintf@val+1
  8566  0010B8  C026  F14C         	movff	?___llmod+2,sprintf@val+2
  8567  0010BC  C027  F14D         	movff	?___llmod+3,sprintf@val+3
  8568  0010C0                     l6852:
  8569  0010C0  0101               	movlb	1	; () banked
  8570  0010C2  0757               	decf	sprintf@c& (0+255),f,b
  8571  0010C4  0101               	movlb	1	; () banked
  8572  0010C6  2957               	incf	sprintf@c& (0+255),w,b
  8573  0010C8  B4D8               	btfsc	status,2,c
  8574  0010CA  D00E               	goto	l6860
  8575  0010CC  D786               	goto	l6842
  8576  0010CE                     l6854:
  8577                           
  8578                           ; BSR set to: 1
  8579                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8580  0010CE  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8581  0010D2  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8582  0010D6  0E30               	movlw	48
  8583  0010D8  6EDF               	movwf	indf2,c
  8584                           
  8585                           ; BSR set to: 1
  8586  0010DA  0100               	movlb	0	; () banked
  8587  0010DC  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8588  0010DE  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;doprnt.c: 1237: prec--;
  8592  0010E0  0101               	movlb	1	; () banked
  8593  0010E2  0755               	decf	sprintf@prec& (0+255),f,b
  8594  0010E4  A0D8               	btfss	status,0,c
  8595  0010E6  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  8596  0010E8                     l6860:
  8597                           
  8598                           ; BSR set to: 1
  8599  0010E8  0101               	movlb	1	; () banked
  8600  0010EA  5155               	movf	sprintf@prec& (0+255),w,b
  8601  0010EC  0101               	movlb	1	; () banked
  8602  0010EE  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8603  0010F0  A4D8               	btfss	status,2,c
  8604  0010F2  D7ED               	goto	l6854
  8605                           
  8606                           ; BSR set to: 1
  8607                           ;doprnt.c: 1238: }
  8608                           ;doprnt.c: 1240: if((flag & 0x08) && width > 0)
  8609  0010F4  0101               	movlb	1	; () banked
  8610  0010F6  A74E               	btfss	sprintf@flag& (0+255),3,b
  8611  0010F8  D199               	goto	l6954
  8612                           
  8613                           ; BSR set to: 1
  8614  0010FA  0101               	movlb	1	; () banked
  8615  0010FC  BF49               	btfsc	(sprintf@width+1)& (0+255),7,b
  8616  0010FE  D196               	goto	l6954
  8617  001100  0101               	movlb	1	; () banked
  8618  001102  5149               	movf	(sprintf@width+1)& (0+255),w,b
  8619  001104  E104               	bnz	l6864
  8620  001106  0101               	movlb	1	; () banked
  8621  001108  0548               	decf	sprintf@width& (0+255),w,b
  8622  00110A  A0D8               	btfss	status,0,c
  8623  00110C  D18F               	goto	l6954
  8624  00110E                     l6864:
  8625                           
  8626                           ; BSR set to: 1
  8627                           ;doprnt.c: 1242: ((*sp++ = (' ')));
  8628  00110E  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8629  001112  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8630  001116  0E20               	movlw	32
  8631  001118  6EDF               	movwf	indf2,c
  8632                           
  8633                           ; BSR set to: 1
  8634  00111A  0100               	movlb	0	; () banked
  8635  00111C  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8636  00111E  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;doprnt.c: 1243: while(--width);
  8640  001120  0101               	movlb	1	; () banked
  8641  001122  0748               	decf	sprintf@width& (0+255),f,b
  8642  001124  A0D8               	btfss	status,0,c
  8643  001126  0749               	decf	(sprintf@width+1)& (0+255),f,b
  8644  001128  0101               	movlb	1	; () banked
  8645  00112A  5148               	movf	sprintf@width& (0+255),w,b
  8646  00112C  0101               	movlb	1	; () banked
  8647  00112E  1149               	iorwf	(sprintf@width+1)& (0+255),w,b
  8648  001130  B4D8               	btfsc	status,2,c
  8649  001132  D17C               	goto	l6954
  8650  001134  D7EC               	goto	l6864
  8651  001136                     l6870:
  8652                           
  8653                           ; BSR set to: 1
  8654                           ;doprnt.c: 1246: }
  8655                           ;doprnt.c: 1273: {
  8656                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8657  001136  C142  FFD9         	movff	sprintf@ap,fsr2l
  8658  00113A  C143  FFDA         	movff	sprintf@ap+1,fsr2h
  8659  00113E  CFDE F0BC          	movff	postinc2,??_sprintf
  8660  001142  CFDD F0BD          	movff	postdec2,??_sprintf+1
  8661  001146  C0BC  F14A         	movff	??_sprintf,sprintf@val
  8662  00114A  C0BD  F14B         	movff	??_sprintf+1,sprintf@val+1
  8663  00114E  0101               	movlb	1	; () banked
  8664  001150  6B4C               	clrf	(sprintf@val+2)& (0+255),b
  8665  001152  6B4D               	clrf	(sprintf@val+3)& (0+255),b
  8666                           
  8667                           ; BSR set to: 1
  8668  001154  0E02               	movlw	2
  8669  001156  0101               	movlb	1	; () banked
  8670  001158  2742               	addwf	sprintf@ap& (0+255),f,b
  8671  00115A  0E00               	movlw	0
  8672  00115C  2343               	addwfc	(sprintf@ap+1)& (0+255),f,b
  8673                           
  8674                           ; BSR set to: 1
  8675                           ;doprnt.c: 1287: }
  8676                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8677  00115E  0101               	movlb	1	; () banked
  8678  001160  5155               	movf	sprintf@prec& (0+255),w,b
  8679  001162  0101               	movlb	1	; () banked
  8680  001164  1156               	iorwf	(sprintf@prec+1)& (0+255),w,b
  8681  001166  A4D8               	btfss	status,2,c
  8682  001168  D00D               	goto	l6880
  8683                           
  8684                           ; BSR set to: 1
  8685  00116A  0101               	movlb	1	; () banked
  8686  00116C  514A               	movf	sprintf@val& (0+255),w,b
  8687  00116E  0101               	movlb	1	; () banked
  8688  001170  114B               	iorwf	(sprintf@val+1)& (0+255),w,b
  8689  001172  0101               	movlb	1	; () banked
  8690  001174  114C               	iorwf	(sprintf@val+2)& (0+255),w,b
  8691  001176  0101               	movlb	1	; () banked
  8692  001178  114D               	iorwf	(sprintf@val+3)& (0+255),w,b
  8693  00117A  A4D8               	btfss	status,2,c
  8694  00117C  D003               	goto	l6880
  8695                           
  8696                           ; BSR set to: 1
  8697                           ;doprnt.c: 1291: prec++;
  8698  00117E  0101               	movlb	1	; () banked
  8699  001180  4B55               	infsnz	sprintf@prec& (0+255),f,b
  8700  001182  2B56               	incf	(sprintf@prec+1)& (0+255),f,b
  8701  001184                     l6880:
  8702                           
  8703                           ; BSR set to: 1
  8704                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8705  001184  0E01               	movlw	1
  8706  001186  0101               	movlb	1	; () banked
  8707  001188  6F57               	movwf	sprintf@c& (0+255),b
  8708  00118A                     l6882:
  8709                           
  8710                           ; BSR set to: 1
  8711  00118A  0E0A               	movlw	10
  8712  00118C  0101               	movlb	1	; () banked
  8713  00118E  1957               	xorwf	sprintf@c& (0+255),w,b
  8714  001190  B4D8               	btfsc	status,2,c
  8715  001192  D01E               	goto	l6894
  8716                           
  8717                           ; BSR set to: 1
  8718                           ;doprnt.c: 1306: if(val < dpowers[c])
  8719                           
  8720                           ; BSR set to: 1
  8721                           
  8722                           ; BSR set to: 1
  8723  001194  0101               	movlb	1	; () banked
  8724  001196  5157               	movf	sprintf@c& (0+255),w,b
  8725  001198  0D04               	mullw	4
  8726  00119A  0E55               	movlw	low _dpowers
  8727  00119C  24F3               	addwf	prodl,w,c
  8728  00119E  6EF6               	movwf	tblptrl,c
  8729  0011A0  0EBE               	movlw	high _dpowers
  8730  0011A2  20F4               	addwfc	prodh,w,c
  8731  0011A4  6EF7               	movwf	tblptrh,c
  8732  0011A6                     	if	0	;There are less than 3 active tblptr bytes
  8733  0011A6                     	endif
  8734  0011A6  0009               	tblrd		*+
  8735  0011A8  50F5               	movf	tablat,w,c
  8736  0011AA  0101               	movlb	1	; () banked
  8737  0011AC  5D4A               	subwf	sprintf@val& (0+255),w,b
  8738  0011AE  0009               	tblrd		*+
  8739  0011B0  50F5               	movf	tablat,w,c
  8740  0011B2  0101               	movlb	1	; () banked
  8741  0011B4  594B               	subwfb	(sprintf@val+1)& (0+255),w,b
  8742  0011B6  0009               	tblrd		*+
  8743  0011B8  50F5               	movf	tablat,w,c
  8744  0011BA  0101               	movlb	1	; () banked
  8745  0011BC  594C               	subwfb	(sprintf@val+2)& (0+255),w,b
  8746  0011BE  0009               	tblrd		*+
  8747  0011C0  50F5               	movf	tablat,w,c
  8748  0011C2  0101               	movlb	1	; () banked
  8749  0011C4  594D               	subwfb	(sprintf@val+3)& (0+255),w,b
  8750  0011C6  A0D8               	btfss	status,0,c
  8751  0011C8  D003               	goto	l6894
  8752                           
  8753                           ; BSR set to: 1
  8754                           
  8755                           ; BSR set to: 1
  8756                           
  8757                           ; BSR set to: 1
  8758                           ;doprnt.c: 1307: break;
  8759  0011CA  0101               	movlb	1	; () banked
  8760  0011CC  2B57               	incf	sprintf@c& (0+255),f,b
  8761  0011CE  D7DD               	goto	l6882
  8762  0011D0                     l6894:
  8763                           
  8764                           ; BSR set to: 1
  8765                           ;doprnt.c: 1339: if(c < prec)
  8766  0011D0  0E80               	movlw	128
  8767  0011D2  0101               	movlb	1	; () banked
  8768  0011D4  BF57               	btfsc	sprintf@c& (0+255),7,b
  8769  0011D6  0E7F               	movlw	127
  8770  0011D8  0100               	movlb	0	; () banked
  8771  0011DA  6FBC               	movwf	??_sprintf& (0+255),b
  8772  0011DC  0101               	movlb	1	; () banked
  8773  0011DE  5155               	movf	sprintf@prec& (0+255),w,b
  8774  0011E0  0101               	movlb	1	; () banked
  8775  0011E2  5D57               	subwf	sprintf@c& (0+255),w,b
  8776  0011E4  0101               	movlb	1	; () banked
  8777  0011E6  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  8778  0011E8  0A80               	xorlw	128
  8779  0011EA  0100               	movlb	0	; () banked
  8780  0011EC  59BC               	subwfb	??_sprintf& (0+255),w,b
  8781  0011EE  B0D8               	btfsc	status,0,c
  8782  0011F0  D003               	goto	l6898
  8783                           
  8784                           ; BSR set to: 0
  8785                           ;doprnt.c: 1340: c = prec;
  8786  0011F2  C155  F157         	movff	sprintf@prec,sprintf@c
  8787  0011F6  D018               	goto	l6902
  8788  0011F8                     l6898:
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;doprnt.c: 1341: else if(prec < c)
  8792  0011F8  0101               	movlb	1	; () banked
  8793  0011FA  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  8794  0011FC  0A80               	xorlw	128
  8795  0011FE  0100               	movlb	0	; () banked
  8796  001200  6FBC               	movwf	??_sprintf& (0+255),b
  8797  001202  0101               	movlb	1	; () banked
  8798  001204  5157               	movf	sprintf@c& (0+255),w,b
  8799  001206  0101               	movlb	1	; () banked
  8800  001208  5D55               	subwf	sprintf@prec& (0+255),w,b
  8801  00120A  0E80               	movlw	128
  8802  00120C  0101               	movlb	1	; () banked
  8803  00120E  BF57               	btfsc	sprintf@c& (0+255),7,b
  8804  001210  0E7F               	movlw	127
  8805  001212  0100               	movlb	0	; () banked
  8806  001214  59BC               	subwfb	??_sprintf& (0+255),w,b
  8807  001216  B0D8               	btfsc	status,0,c
  8808  001218  D007               	goto	l6902
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;doprnt.c: 1342: prec = c;
  8812  00121A  0101               	movlb	1	; () banked
  8813  00121C  5157               	movf	sprintf@c& (0+255),w,b
  8814  00121E  0101               	movlb	1	; () banked
  8815  001220  6F55               	movwf	sprintf@prec& (0+255),b
  8816  001222  6B56               	clrf	(sprintf@prec+1)& (0+255),b
  8817  001224  BF55               	btfsc	sprintf@prec& (0+255),7,b
  8818  001226  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  8819  001228                     l6902:
  8820                           
  8821                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8822  001228  0101               	movlb	1	; () banked
  8823  00122A  5148               	movf	sprintf@width& (0+255),w,b
  8824  00122C  0101               	movlb	1	; () banked
  8825  00122E  1149               	iorwf	(sprintf@width+1)& (0+255),w,b
  8826  001230  B4D8               	btfsc	status,2,c
  8827  001232  D014               	goto	l6908
  8828                           
  8829                           ; BSR set to: 1
  8830  001234  0E03               	movlw	3
  8831  001236  0101               	movlb	1	; () banked
  8832  001238  154E               	andwf	sprintf@flag& (0+255),w,b
  8833  00123A  0100               	movlb	0	; () banked
  8834  00123C  6FBC               	movwf	??_sprintf& (0+255),b
  8835  00123E  0E00               	movlw	0
  8836  001240  0101               	movlb	1	; () banked
  8837  001242  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  8838  001244  0100               	movlb	0	; () banked
  8839  001246  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  8840  001248  0100               	movlb	0	; () banked
  8841  00124A  51BC               	movf	??_sprintf& (0+255),w,b
  8842  00124C  0100               	movlb	0	; () banked
  8843  00124E  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
  8844  001250  B4D8               	btfsc	status,2,c
  8845  001252  D004               	goto	l6908
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;doprnt.c: 1346: width--;
  8849  001254  0101               	movlb	1	; () banked
  8850  001256  0748               	decf	sprintf@width& (0+255),f,b
  8851  001258  A0D8               	btfss	status,0,c
  8852  00125A  0749               	decf	(sprintf@width+1)& (0+255),f,b
  8853  00125C                     l6908:
  8854                           
  8855                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8856  00125C  0101               	movlb	1	; () banked
  8857  00125E  AD4F               	btfss	(sprintf@flag+1)& (0+255),6,b
  8858  001260  D01E               	goto	l6916
  8859                           
  8860                           ; BSR set to: 1
  8861                           ;doprnt.c: 1349: if(width > prec)
  8862  001262  0101               	movlb	1	; () banked
  8863  001264  5148               	movf	sprintf@width& (0+255),w,b
  8864  001266  0101               	movlb	1	; () banked
  8865  001268  5D55               	subwf	sprintf@prec& (0+255),w,b
  8866  00126A  0101               	movlb	1	; () banked
  8867  00126C  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  8868  00126E  0A80               	xorlw	128
  8869  001270  0100               	movlb	0	; () banked
  8870  001272  6FBC               	movwf	??_sprintf& (0+255),b
  8871  001274  0101               	movlb	1	; () banked
  8872  001276  5149               	movf	(sprintf@width+1)& (0+255),w,b
  8873  001278  0A80               	xorlw	128
  8874  00127A  0100               	movlb	0	; () banked
  8875  00127C  59BC               	subwfb	??_sprintf& (0+255),w,b
  8876  00127E  B0D8               	btfsc	status,0,c
  8877  001280  D009               	goto	l6914
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;doprnt.c: 1350: width -= prec;
  8881  001282  0101               	movlb	1	; () banked
  8882  001284  5155               	movf	sprintf@prec& (0+255),w,b
  8883  001286  0101               	movlb	1	; () banked
  8884  001288  5F48               	subwf	sprintf@width& (0+255),f,b
  8885  00128A  0101               	movlb	1	; () banked
  8886  00128C  5156               	movf	(sprintf@prec+1)& (0+255),w,b
  8887  00128E  0101               	movlb	1	; () banked
  8888  001290  5B49               	subwfb	(sprintf@width+1)& (0+255),f,b
  8889  001292  D005               	goto	l6916
  8890  001294                     l6914:
  8891                           
  8892                           ;doprnt.c: 1351: else
  8893                           ;doprnt.c: 1352: width = 0;
  8894  001294  0E00               	movlw	0
  8895  001296  0101               	movlb	1	; () banked
  8896  001298  6F49               	movwf	(sprintf@width+1)& (0+255),b
  8897  00129A  0E00               	movlw	0
  8898  00129C  6F48               	movwf	sprintf@width& (0+255),b
  8899  00129E                     l6916:
  8900                           
  8901                           ; BSR set to: 1
  8902                           ;doprnt.c: 1353: }
  8903                           ;doprnt.c: 1381: if(width > c)
  8904  00129E  0E80               	movlw	128
  8905  0012A0  0101               	movlb	1	; () banked
  8906  0012A2  BF57               	btfsc	sprintf@c& (0+255),7,b
  8907  0012A4  0E7F               	movlw	127
  8908  0012A6  0100               	movlb	0	; () banked
  8909  0012A8  6FBC               	movwf	??_sprintf& (0+255),b
  8910  0012AA  0101               	movlb	1	; () banked
  8911  0012AC  5148               	movf	sprintf@width& (0+255),w,b
  8912  0012AE  0101               	movlb	1	; () banked
  8913  0012B0  5D57               	subwf	sprintf@c& (0+255),w,b
  8914  0012B2  0101               	movlb	1	; () banked
  8915  0012B4  5149               	movf	(sprintf@width+1)& (0+255),w,b
  8916  0012B6  0A80               	xorlw	128
  8917  0012B8  0100               	movlb	0	; () banked
  8918  0012BA  59BC               	subwfb	??_sprintf& (0+255),w,b
  8919  0012BC  B0D8               	btfsc	status,0,c
  8920  0012BE  D00B               	goto	l6920
  8921                           
  8922                           ; BSR set to: 0
  8923                           ;doprnt.c: 1382: width -= c;
  8924  0012C0  0101               	movlb	1	; () banked
  8925  0012C2  5157               	movf	sprintf@c& (0+255),w,b
  8926  0012C4  0101               	movlb	1	; () banked
  8927  0012C6  5F48               	subwf	sprintf@width& (0+255),f,b
  8928  0012C8  0E00               	movlw	0
  8929  0012CA  0101               	movlb	1	; () banked
  8930  0012CC  BF57               	btfsc	sprintf@c& (0+255),7,b
  8931  0012CE  0EFF               	movlw	255
  8932  0012D0  0101               	movlb	1	; () banked
  8933  0012D2  5B49               	subwfb	(sprintf@width+1)& (0+255),f,b
  8934  0012D4  D005               	goto	l6922
  8935  0012D6                     l6920:
  8936                           
  8937                           ;doprnt.c: 1383: else
  8938                           ;doprnt.c: 1384: width = 0;
  8939  0012D6  0E00               	movlw	0
  8940  0012D8  0101               	movlb	1	; () banked
  8941  0012DA  6F49               	movwf	(sprintf@width+1)& (0+255),b
  8942  0012DC  0E00               	movlw	0
  8943  0012DE  6F48               	movwf	sprintf@width& (0+255),b
  8944  0012E0                     l6922:
  8945                           
  8946                           ; BSR set to: 1
  8947                           ;doprnt.c: 1422: {
  8948                           ;doprnt.c: 1424: if(width
  8949                           ;doprnt.c: 1426: && !(flag & 0x08)
  8950                           ;doprnt.c: 1428: )
  8951  0012E0  0101               	movlb	1	; () banked
  8952  0012E2  5148               	movf	sprintf@width& (0+255),w,b
  8953  0012E4  0101               	movlb	1	; () banked
  8954  0012E6  1149               	iorwf	(sprintf@width+1)& (0+255),w,b
  8955  0012E8  B4D8               	btfsc	status,2,c
  8956  0012EA  D016               	goto	l6932
  8957                           
  8958                           ; BSR set to: 1
  8959  0012EC  0101               	movlb	1	; () banked
  8960  0012EE  B74E               	btfsc	sprintf@flag& (0+255),3,b
  8961  0012F0  D013               	goto	l6932
  8962  0012F2                     l6926:
  8963                           
  8964                           ; BSR set to: 1
  8965                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8966  0012F2  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  8967  0012F6  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  8968  0012FA  0E20               	movlw	32
  8969  0012FC  6EDF               	movwf	indf2,c
  8970                           
  8971                           ; BSR set to: 1
  8972  0012FE  0100               	movlb	0	; () banked
  8973  001300  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  8974  001302  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;doprnt.c: 1431: while(--width);
  8978  001304  0101               	movlb	1	; () banked
  8979  001306  0748               	decf	sprintf@width& (0+255),f,b
  8980  001308  A0D8               	btfss	status,0,c
  8981  00130A  0749               	decf	(sprintf@width+1)& (0+255),f,b
  8982  00130C  0101               	movlb	1	; () banked
  8983  00130E  5148               	movf	sprintf@width& (0+255),w,b
  8984  001310  0101               	movlb	1	; () banked
  8985  001312  1149               	iorwf	(sprintf@width+1)& (0+255),w,b
  8986  001314  A4D8               	btfss	status,2,c
  8987  001316  D7ED               	goto	l6926
  8988  001318                     l6932:
  8989                           
  8990                           ; BSR set to: 1
  8991                           ;doprnt.c: 1438: if(flag & 0x03)
  8992  001318  0E03               	movlw	3
  8993  00131A  0101               	movlb	1	; () banked
  8994  00131C  154E               	andwf	sprintf@flag& (0+255),w,b
  8995  00131E  0100               	movlb	0	; () banked
  8996  001320  6FBC               	movwf	??_sprintf& (0+255),b
  8997  001322  0E00               	movlw	0
  8998  001324  0101               	movlb	1	; () banked
  8999  001326  154F               	andwf	(sprintf@flag+1)& (0+255),w,b
  9000  001328  0100               	movlb	0	; () banked
  9001  00132A  6FBD               	movwf	(??_sprintf+1)& (0+255),b
  9002  00132C  0100               	movlb	0	; () banked
  9003  00132E  51BC               	movf	??_sprintf& (0+255),w,b
  9004  001330  0100               	movlb	0	; () banked
  9005  001332  11BD               	iorwf	(??_sprintf+1)& (0+255),w,b
  9006  001334  B4D8               	btfsc	status,2,c
  9007  001336  D04F               	goto	l6944
  9008                           
  9009                           ; BSR set to: 0
  9010                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  9011  001338  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  9012  00133C  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  9013  001340  0E2D               	movlw	45
  9014  001342  6EDF               	movwf	indf2,c
  9015  001344  D045               	goto	l6942
  9016  001346                     l6938:
  9017                           
  9018                           ;doprnt.c: 1478: {
  9019                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  9020  001346  C155  F0BC         	movff	sprintf@prec,??_sprintf
  9021  00134A  C156  F0BD         	movff	sprintf@prec+1,??_sprintf+1
  9022  00134E  0100               	movlb	0	; () banked
  9023  001350  90D8               	bcf	status,0,c
  9024  001352  37BC               	rlcf	??_sprintf& (0+255),f,b
  9025  001354  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
  9026  001356  0100               	movlb	0	; () banked
  9027  001358  90D8               	bcf	status,0,c
  9028  00135A  37BC               	rlcf	??_sprintf& (0+255),f,b
  9029  00135C  37BD               	rlcf	(??_sprintf+1)& (0+255),f,b
  9030  00135E  0E55               	movlw	low _dpowers
  9031  001360  0100               	movlb	0	; () banked
  9032  001362  25BC               	addwf	??_sprintf& (0+255),w,b
  9033  001364  6EF6               	movwf	tblptrl,c
  9034  001366  0EBE               	movlw	high _dpowers
  9035  001368  21BD               	addwfc	(??_sprintf+1)& (0+255),w,b
  9036  00136A  6EF7               	movwf	tblptrh,c
  9037  00136C                     	if	0	;There are less than 3 active tblptr bytes
  9038  00136C                     	endif
  9039  00136C  0009               	tblrd		*+
  9040  00136E  CFF5 F01B          	movff	tablat,___lldiv@divisor
  9041  001372  0009               	tblrd		*+
  9042  001374  CFF5 F01C          	movff	tablat,___lldiv@divisor+1
  9043  001378  0009               	tblrd		*+
  9044  00137A  CFF5 F01D          	movff	tablat,___lldiv@divisor+2
  9045  00137E  000A               	tblrd		*-
  9046  001380  CFF5 F01E          	movff	tablat,___lldiv@divisor+3
  9047  001384  C14A  F017         	movff	sprintf@val,___lldiv@dividend
  9048  001388  C14B  F018         	movff	sprintf@val+1,___lldiv@dividend+1
  9049  00138C  C14C  F019         	movff	sprintf@val+2,___lldiv@dividend+2
  9050  001390  C14D  F01A         	movff	sprintf@val+3,___lldiv@dividend+3
  9051  001394  EC2F  F01B         	call	___lldiv	;wreg free
  9052  001398  C017  F024         	movff	?___lldiv,___llmod@dividend
  9053  00139C  C018  F025         	movff	?___lldiv+1,___llmod@dividend+1
  9054  0013A0  C019  F026         	movff	?___lldiv+2,___llmod@dividend+2
  9055  0013A4  C01A  F027         	movff	?___lldiv+3,___llmod@dividend+3
  9056  0013A8  0E0A               	movlw	10
  9057  0013AA  6E28               	movwf	___llmod@divisor,c
  9058  0013AC  0E00               	movlw	0
  9059  0013AE  6E29               	movwf	___llmod@divisor+1,c
  9060  0013B0  0E00               	movlw	0
  9061  0013B2  6E2A               	movwf	___llmod@divisor+2,c
  9062  0013B4  0E00               	movlw	0
  9063  0013B6  6E2B               	movwf	___llmod@divisor+3,c
  9064  0013B8  EC1C  F01C         	call	___llmod	;wreg free
  9065  0013BC  5024               	movf	?___llmod,w,c
  9066  0013BE  0F30               	addlw	48
  9067  0013C0  0101               	movlb	1	; () banked
  9068  0013C2  6F57               	movwf	sprintf@c& (0+255),b
  9069                           
  9070                           ; BSR set to: 1
  9071                           ;doprnt.c: 1523: }
  9072                           ;doprnt.c: 1524: ((*sp++ = (c)));
  9073  0013C4  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  9074  0013C8  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  9075  0013CC  C157  FFDF         	movff	sprintf@c,indf2
  9076  0013D0                     l6942:
  9077                           
  9078                           ; BSR set to: 1
  9079  0013D0  0100               	movlb	0	; () banked
  9080  0013D2  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  9081  0013D4  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  9082  0013D6                     l6944:
  9083                           
  9084                           ; BSR set to: 0
  9085  0013D6  0101               	movlb	1	; () banked
  9086  0013D8  0755               	decf	sprintf@prec& (0+255),f,b
  9087  0013DA  A0D8               	btfss	status,0,c
  9088  0013DC  0756               	decf	(sprintf@prec+1)& (0+255),f,b
  9089  0013DE  0101               	movlb	1	; () banked
  9090  0013E0  2955               	incf	sprintf@prec& (0+255),w,b
  9091  0013E2  E1B1               	bnz	l6938
  9092  0013E4  0101               	movlb	1	; () banked
  9093  0013E6  2956               	incf	(sprintf@prec+1)& (0+255),w,b
  9094  0013E8  A4D8               	btfss	status,2,c
  9095  0013EA  D7AD               	goto	l6938
  9096                           
  9097                           ; BSR set to: 1
  9098                           ;doprnt.c: 1525: }
  9099                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
  9100  0013EC  0101               	movlb	1	; () banked
  9101  0013EE  A74E               	btfss	sprintf@flag& (0+255),3,b
  9102  0013F0  D01D               	goto	l6954
  9103                           
  9104                           ; BSR set to: 1
  9105  0013F2  0101               	movlb	1	; () banked
  9106  0013F4  BF49               	btfsc	(sprintf@width+1)& (0+255),7,b
  9107  0013F6  D01A               	goto	l6954
  9108  0013F8  0101               	movlb	1	; () banked
  9109  0013FA  5149               	movf	(sprintf@width+1)& (0+255),w,b
  9110  0013FC  E104               	bnz	l6948
  9111  0013FE  0101               	movlb	1	; () banked
  9112  001400  0548               	decf	sprintf@width& (0+255),w,b
  9113  001402  A0D8               	btfss	status,0,c
  9114  001404  D013               	goto	l6954
  9115  001406                     l6948:
  9116                           
  9117                           ; BSR set to: 1
  9118                           ;doprnt.c: 1530: ((*sp++ = (' ')));
  9119  001406  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  9120  00140A  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  9121  00140E  0E20               	movlw	32
  9122  001410  6EDF               	movwf	indf2,c
  9123                           
  9124                           ; BSR set to: 1
  9125  001412  0100               	movlb	0	; () banked
  9126  001414  4BB5               	infsnz	sprintf@sp& (0+255),f,b
  9127  001416  2BB6               	incf	(sprintf@sp+1)& (0+255),f,b
  9128                           
  9129                           ; BSR set to: 0
  9130                           ;doprnt.c: 1531: while(--width);
  9131  001418  0101               	movlb	1	; () banked
  9132  00141A  0748               	decf	sprintf@width& (0+255),f,b
  9133  00141C  A0D8               	btfss	status,0,c
  9134  00141E  0749               	decf	(sprintf@width+1)& (0+255),f,b
  9135  001420  0101               	movlb	1	; () banked
  9136  001422  5148               	movf	sprintf@width& (0+255),w,b
  9137  001424  0101               	movlb	1	; () banked
  9138  001426  1149               	iorwf	(sprintf@width+1)& (0+255),w,b
  9139  001428  A4D8               	btfss	status,2,c
  9140  00142A  D7ED               	goto	l6948
  9141  00142C                     l6954:
  9142  00142C  C0B7  FFF6         	movff	sprintf@f,tblptrl
  9143  001430  C0B8  FFF7         	movff	sprintf@f+1,tblptrh
  9144  001434  0100               	movlb	0	; () banked
  9145  001436  4BB7               	infsnz	sprintf@f& (0+255),f,b
  9146  001438  2BB8               	incf	(sprintf@f+1)& (0+255),f,b
  9147  00143A                     	if	0	;tblptru may be non-zero
  9148  00143A                     	endif
  9149  00143A                     	if	0	;tblptru may be non-zero
  9150  00143A                     	endif
  9151  00143A  0008               	tblrd		*
  9152  00143C  CFF5 F157          	movff	tablat,sprintf@c
  9153  001440  0101               	movlb	1	; () banked
  9154  001442  5157               	movf	sprintf@c& (0+255),w,b
  9155  001444  A4D8               	btfss	status,2,c
  9156  001446  EF11  F000         	goto	l6476
  9157  00144A                     l6956:
  9158                           
  9159                           ; BSR set to: 1
  9160                           ;doprnt.c: 1538: *sp = 0;
  9161  00144A  C0B5  FFD9         	movff	sprintf@sp,fsr2l
  9162  00144E  C0B6  FFDA         	movff	sprintf@sp+1,fsr2h
  9163  001452  0E00               	movlw	0
  9164  001454  6EDF               	movwf	indf2,c
  9165  001456  0012               	return	
  9166  001458                     __end_of_sprintf:
  9167                           	opt stack 0
  9168                           tblptru	equ	0xFF8
  9169                           tblptrh	equ	0xFF7
  9170                           tblptrl	equ	0xFF6
  9171                           tablat	equ	0xFF5
  9172                           prodh	equ	0xFF4
  9173                           prodl	equ	0xFF3
  9174                           intcon	equ	0xFF2
  9175                           intcon2	equ	0xFF1
  9176                           postinc0	equ	0xFEE
  9177                           wreg	equ	0xFE8
  9178                           postdec1	equ	0xFE5
  9179                           fsr1l	equ	0xFE1
  9180                           indf2	equ	0xFDF
  9181                           postinc2	equ	0xFDE
  9182                           postdec2	equ	0xFDD
  9183                           fsr2h	equ	0xFDA
  9184                           fsr2l	equ	0xFD9
  9185                           status	equ	0xFD8
  9186                           
  9187 ;; *************** function _scale *****************
  9188 ;; Defined at:
  9189 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  9190 ;; Parameters:    Size  Location     Type
  9191 ;;  scl             1    wreg     char 
  9192 ;; Auto vars:     Size  Location     Type
  9193 ;;  scl             1   73[COMRAM] char 
  9194 ;; Return value:  Size  Location     Type
  9195 ;;                  3   67[COMRAM] char 
  9196 ;; Registers used:
  9197 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9198 ;; Tracked objects:
  9199 ;;		On entry : 0/0
  9200 ;;		On exit  : 0/0
  9201 ;;		Unchanged: 0/0
  9202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9203 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9207 ;;Total ram usage:        7 bytes
  9208 ;; Hardware stack levels used:    1
  9209 ;; Hardware stack levels required when called:    6
  9210 ;; This function calls:
  9211 ;;		___awdiv
  9212 ;;		___awmod
  9213 ;;		___ftmul
  9214 ;;		___wmul
  9215 ;; This function is called by:
  9216 ;;		_sprintf
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text30
  9221  001A84                     __ptext30:
  9222                           	opt stack 0
  9223  001A84                     _scale:
  9224                           	opt stack 22
  9225                           
  9226                           ; BSR set to: 1
  9227                           ;incstack = 0
  9228                           ;scale@scl stored from wreg
  9229  001A84  6E4A               	movwf	scale@scl,c
  9230                           
  9231                           ;doprnt.c: 428: if(scl < 0) {
  9232  001A86  AE4A               	btfss	scale@scl,7,c
  9233  001A88  D0FB               	goto	l6158
  9234                           
  9235                           ;doprnt.c: 429: scl = -scl;
  9236  001A8A  6C4A               	negf	scale@scl,c
  9237                           
  9238                           ;doprnt.c: 430: if(scl>=110)
  9239  001A8C  504A               	movf	scale@scl,w,c
  9240  001A8E  0A80               	xorlw	128
  9241  001A90  0F12               	addlw	-238
  9242  001A92  A0D8               	btfss	status,0,c
  9243  001A94  D091               	goto	l6148
  9244                           
  9245                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9246  001A96  0E00               	movlw	0
  9247  001A98  6E28               	movwf	___wmul@multiplicand+1,c
  9248  001A9A  0E03               	movlw	3
  9249  001A9C  6E27               	movwf	___wmul@multiplicand,c
  9250  001A9E  0E00               	movlw	0
  9251  001AA0  6E20               	movwf	___awdiv@divisor+1,c
  9252  001AA2  0E0A               	movlw	10
  9253  001AA4  6E1F               	movwf	___awdiv@divisor,c
  9254  001AA6  0E00               	movlw	0
  9255  001AA8  6E1A               	movwf	___awmod@divisor+1,c
  9256  001AAA  0E64               	movlw	100
  9257  001AAC  6E19               	movwf	___awmod@divisor,c
  9258  001AAE  504A               	movf	scale@scl,w,c
  9259  001AB0  6E17               	movwf	___awmod@dividend,c
  9260  001AB2  6A18               	clrf	___awmod@dividend+1,c
  9261  001AB4  BE17               	btfsc	___awmod@dividend,7,c
  9262  001AB6  0618               	decf	___awmod@dividend+1,f,c
  9263  001AB8  ECE4  F01B         	call	___awmod	;wreg free
  9264  001ABC  C017  F01D         	movff	?___awmod,___awdiv@dividend
  9265  001AC0  C018  F01E         	movff	?___awmod+1,___awdiv@dividend+1
  9266  001AC4  ECED  F01A         	call	___awdiv	;wreg free
  9267  001AC8  0E09               	movlw	9
  9268  001ACA  241D               	addwf	?___awdiv,w,c
  9269  001ACC  6E25               	movwf	___wmul@multiplier,c
  9270  001ACE  0E00               	movlw	0
  9271  001AD0  201E               	addwfc	?___awdiv+1,w,c
  9272  001AD2  6E26               	movwf	___wmul@multiplier+1,c
  9273  001AD4  ECD5  F01E         	call	___wmul	;wreg free
  9274  001AD8  0EA4               	movlw	low __npowers_
  9275  001ADA  2425               	addwf	?___wmul,w,c
  9276  001ADC  6EF6               	movwf	tblptrl,c
  9277  001ADE  0EBE               	movlw	high __npowers_
  9278  001AE0  2026               	addwfc	?___wmul+1,w,c
  9279  001AE2  6EF7               	movwf	tblptrh,c
  9280  001AE4                     	if	0	;There are less than 3 active tblptr bytes
  9281  001AE4                     	endif
  9282  001AE4  0009               	tblrd		*+
  9283  001AE6  CFF5 F038          	movff	tablat,___ftmul@f2
  9284  001AEA  0009               	tblrd		*+
  9285  001AEC  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9286  001AF0  000A               	tblrd		*-
  9287  001AF2  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9288  001AF6  0E00               	movlw	0
  9289  001AF8  6E20               	movwf	___awdiv@divisor+1,c
  9290  001AFA  0E64               	movlw	100
  9291  001AFC  6E1F               	movwf	___awdiv@divisor,c
  9292  001AFE  504A               	movf	scale@scl,w,c
  9293  001B00  6E1D               	movwf	___awdiv@dividend,c
  9294  001B02  6A1E               	clrf	___awdiv@dividend+1,c
  9295  001B04  BE1D               	btfsc	___awdiv@dividend,7,c
  9296  001B06  061E               	decf	___awdiv@dividend+1,f,c
  9297  001B08  ECED  F01A         	call	___awdiv	;wreg free
  9298  001B0C  0E12               	movlw	18
  9299  001B0E  241D               	addwf	?___awdiv,w,c
  9300  001B10  6E25               	movwf	___wmul@multiplier,c
  9301  001B12  0E00               	movlw	0
  9302  001B14  201E               	addwfc	?___awdiv+1,w,c
  9303  001B16  6E26               	movwf	___wmul@multiplier+1,c
  9304  001B18  0E00               	movlw	0
  9305  001B1A  6E28               	movwf	___wmul@multiplicand+1,c
  9306  001B1C  0E03               	movlw	3
  9307  001B1E  6E27               	movwf	___wmul@multiplicand,c
  9308  001B20  ECD5  F01E         	call	___wmul	;wreg free
  9309  001B24  0EA4               	movlw	low __npowers_
  9310  001B26  2425               	addwf	?___wmul,w,c
  9311  001B28  6EF6               	movwf	tblptrl,c
  9312  001B2A  0EBE               	movlw	high __npowers_
  9313  001B2C  2026               	addwfc	?___wmul+1,w,c
  9314  001B2E  6EF7               	movwf	tblptrh,c
  9315  001B30                     	if	0	;There are less than 3 active tblptr bytes
  9316  001B30                     	endif
  9317  001B30  0009               	tblrd		*+
  9318  001B32  CFF5 F035          	movff	tablat,___ftmul@f1
  9319  001B36  0009               	tblrd		*+
  9320  001B38  CFF5 F036          	movff	tablat,___ftmul@f1+1
  9321  001B3C  000A               	tblrd		*-
  9322  001B3E  CFF5 F037          	movff	tablat,___ftmul@f1+2
  9323  001B42  EC76  F018         	call	___ftmul	;wreg free
  9324  001B46  C035  F047         	movff	?___ftmul,_scale$2284
  9325  001B4A  C036  F048         	movff	?___ftmul+1,_scale$2284+1
  9326  001B4E  C037  F049         	movff	?___ftmul+2,_scale$2284+2
  9327                           
  9328                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  9329  001B52  C047  F035         	movff	_scale$2284,___ftmul@f1
  9330  001B56  C048  F036         	movff	_scale$2284+1,___ftmul@f1+1
  9331  001B5A  C049  F037         	movff	_scale$2284+2,___ftmul@f1+2
  9332  001B5E  0E00               	movlw	0
  9333  001B60  6E28               	movwf	___wmul@multiplicand+1,c
  9334  001B62  0E03               	movlw	3
  9335  001B64  6E27               	movwf	___wmul@multiplicand,c
  9336  001B66  0E00               	movlw	0
  9337  001B68  6E1A               	movwf	___awmod@divisor+1,c
  9338  001B6A  0E0A               	movlw	10
  9339  001B6C  6E19               	movwf	___awmod@divisor,c
  9340  001B6E  504A               	movf	scale@scl,w,c
  9341  001B70  6E17               	movwf	___awmod@dividend,c
  9342  001B72  6A18               	clrf	___awmod@dividend+1,c
  9343  001B74  BE17               	btfsc	___awmod@dividend,7,c
  9344  001B76  0618               	decf	___awmod@dividend+1,f,c
  9345  001B78  ECE4  F01B         	call	___awmod	;wreg free
  9346  001B7C  C017  F025         	movff	?___awmod,___wmul@multiplier
  9347  001B80  C018  F026         	movff	?___awmod+1,___wmul@multiplier+1
  9348  001B84  ECD5  F01E         	call	___wmul	;wreg free
  9349  001B88  0EA4               	movlw	low __npowers_
  9350  001B8A  2425               	addwf	?___wmul,w,c
  9351  001B8C  6EF6               	movwf	tblptrl,c
  9352  001B8E  0EBE               	movlw	high __npowers_
  9353  001B90  2026               	addwfc	?___wmul+1,w,c
  9354  001B92  6EF7               	movwf	tblptrh,c
  9355  001B94                     	if	0	;There are less than 3 active tblptr bytes
  9356  001B94                     	endif
  9357  001B94  0009               	tblrd		*+
  9358  001B96  CFF5 F038          	movff	tablat,___ftmul@f2
  9359  001B9A  0009               	tblrd		*+
  9360  001B9C  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9361  001BA0  000A               	tblrd		*-
  9362  001BA2  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9363  001BA6  EC76  F018         	call	___ftmul	;wreg free
  9364  001BAA  C035  F044         	movff	?___ftmul,?_scale
  9365  001BAE  C036  F045         	movff	?___ftmul+1,?_scale+1
  9366  001BB2  C037  F046         	movff	?___ftmul+2,?_scale+2
  9367  001BB6  0012               	return	
  9368  001BB8                     l6148:
  9369                           
  9370                           ;doprnt.c: 432: else if(scl > 10)
  9371  001BB8  504A               	movf	scale@scl,w,c
  9372  001BBA  0A80               	xorlw	128
  9373  001BBC  0F75               	addlw	-139
  9374  001BBE  A0D8               	btfss	status,0,c
  9375  001BC0  D04D               	goto	l6154
  9376                           
  9377                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  9378  001BC2  0E00               	movlw	0
  9379  001BC4  6E20               	movwf	___awdiv@divisor+1,c
  9380  001BC6  0E0A               	movlw	10
  9381  001BC8  6E1F               	movwf	___awdiv@divisor,c
  9382  001BCA  504A               	movf	scale@scl,w,c
  9383  001BCC  6E1D               	movwf	___awdiv@dividend,c
  9384  001BCE  6A1E               	clrf	___awdiv@dividend+1,c
  9385  001BD0  BE1D               	btfsc	___awdiv@dividend,7,c
  9386  001BD2  061E               	decf	___awdiv@dividend+1,f,c
  9387  001BD4  ECED  F01A         	call	___awdiv	;wreg free
  9388  001BD8  0E09               	movlw	9
  9389  001BDA  241D               	addwf	?___awdiv,w,c
  9390  001BDC  6E25               	movwf	___wmul@multiplier,c
  9391  001BDE  0E00               	movlw	0
  9392  001BE0  201E               	addwfc	?___awdiv+1,w,c
  9393  001BE2  6E26               	movwf	___wmul@multiplier+1,c
  9394  001BE4  0E00               	movlw	0
  9395  001BE6  6E28               	movwf	___wmul@multiplicand+1,c
  9396  001BE8  0E03               	movlw	3
  9397  001BEA  6E27               	movwf	___wmul@multiplicand,c
  9398  001BEC  ECD5  F01E         	call	___wmul	;wreg free
  9399  001BF0  0EA4               	movlw	low __npowers_
  9400  001BF2  2425               	addwf	?___wmul,w,c
  9401  001BF4  6EF6               	movwf	tblptrl,c
  9402  001BF6  0EBE               	movlw	high __npowers_
  9403  001BF8  2026               	addwfc	?___wmul+1,w,c
  9404  001BFA  6EF7               	movwf	tblptrh,c
  9405  001BFC                     	if	0	;There are less than 3 active tblptr bytes
  9406  001BFC                     	endif
  9407  001BFC  0009               	tblrd		*+
  9408  001BFE  CFF5 F035          	movff	tablat,___ftmul@f1
  9409  001C02  0009               	tblrd		*+
  9410  001C04  CFF5 F036          	movff	tablat,___ftmul@f1+1
  9411  001C08  000A               	tblrd		*-
  9412  001C0A  CFF5 F037          	movff	tablat,___ftmul@f1+2
  9413  001C0E  0E00               	movlw	0
  9414  001C10  6E28               	movwf	___wmul@multiplicand+1,c
  9415  001C12  0E03               	movlw	3
  9416  001C14  6E27               	movwf	___wmul@multiplicand,c
  9417  001C16  0E00               	movlw	0
  9418  001C18  6E1A               	movwf	___awmod@divisor+1,c
  9419  001C1A  0E0A               	movlw	10
  9420  001C1C  6E19               	movwf	___awmod@divisor,c
  9421  001C1E  504A               	movf	scale@scl,w,c
  9422  001C20  6E17               	movwf	___awmod@dividend,c
  9423  001C22  6A18               	clrf	___awmod@dividend+1,c
  9424  001C24  BE17               	btfsc	___awmod@dividend,7,c
  9425  001C26  0618               	decf	___awmod@dividend+1,f,c
  9426  001C28  ECE4  F01B         	call	___awmod	;wreg free
  9427  001C2C  C017  F025         	movff	?___awmod,___wmul@multiplier
  9428  001C30  C018  F026         	movff	?___awmod+1,___wmul@multiplier+1
  9429  001C34  ECD5  F01E         	call	___wmul	;wreg free
  9430  001C38  0EA4               	movlw	low __npowers_
  9431  001C3A  2425               	addwf	?___wmul,w,c
  9432  001C3C  6EF6               	movwf	tblptrl,c
  9433  001C3E  0EBE               	movlw	high __npowers_
  9434  001C40  2026               	addwfc	?___wmul+1,w,c
  9435  001C42  6EF7               	movwf	tblptrh,c
  9436  001C44                     	if	0	;There are less than 3 active tblptr bytes
  9437  001C44                     	endif
  9438  001C44  0009               	tblrd		*+
  9439  001C46  CFF5 F038          	movff	tablat,___ftmul@f2
  9440  001C4A  0009               	tblrd		*+
  9441  001C4C  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9442  001C50  000A               	tblrd		*-
  9443  001C52  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9444  001C56  EC76  F018         	call	___ftmul	;wreg free
  9445  001C5A  D7A7               	goto	L7
  9446  001C5C                     l6154:
  9447                           
  9448                           ;doprnt.c: 434: return _npowers_[scl];
  9449  001C5C  504A               	movf	scale@scl,w,c
  9450  001C5E  0D03               	mullw	3
  9451  001C60  0EA4               	movlw	low __npowers_
  9452  001C62  24F3               	addwf	prodl,w,c
  9453  001C64  6EF6               	movwf	tblptrl,c
  9454  001C66  0EBE               	movlw	high __npowers_
  9455  001C68  20F4               	addwfc	prodh,w,c
  9456  001C6A  6EF7               	movwf	tblptrh,c
  9457  001C6C                     	if	0	;There are less than 3 active tblptr bytes
  9458  001C6C                     	endif
  9459  001C6C  0009               	tblrd		*+
  9460  001C6E  CFF5 F044          	movff	tablat,?_scale
  9461  001C72  0009               	tblrd		*+
  9462  001C74  CFF5 F045          	movff	tablat,?_scale+1
  9463  001C78  000A               	tblrd		*-
  9464  001C7A  CFF5 F046          	movff	tablat,?_scale+2
  9465  001C7E  0012               	return	
  9466  001C80                     l6158:
  9467                           
  9468                           ;doprnt.c: 435: }
  9469                           ;doprnt.c: 436: if(scl>=110)
  9470  001C80  504A               	movf	scale@scl,w,c
  9471  001C82  0A80               	xorlw	128
  9472  001C84  0F12               	addlw	-238
  9473  001C86  A0D8               	btfss	status,0,c
  9474  001C88  D091               	goto	l6166
  9475                           
  9476                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9477  001C8A  0E00               	movlw	0
  9478  001C8C  6E28               	movwf	___wmul@multiplicand+1,c
  9479  001C8E  0E03               	movlw	3
  9480  001C90  6E27               	movwf	___wmul@multiplicand,c
  9481  001C92  0E00               	movlw	0
  9482  001C94  6E20               	movwf	___awdiv@divisor+1,c
  9483  001C96  0E0A               	movlw	10
  9484  001C98  6E1F               	movwf	___awdiv@divisor,c
  9485  001C9A  0E00               	movlw	0
  9486  001C9C  6E1A               	movwf	___awmod@divisor+1,c
  9487  001C9E  0E64               	movlw	100
  9488  001CA0  6E19               	movwf	___awmod@divisor,c
  9489  001CA2  504A               	movf	scale@scl,w,c
  9490  001CA4  6E17               	movwf	___awmod@dividend,c
  9491  001CA6  6A18               	clrf	___awmod@dividend+1,c
  9492  001CA8  BE17               	btfsc	___awmod@dividend,7,c
  9493  001CAA  0618               	decf	___awmod@dividend+1,f,c
  9494  001CAC  ECE4  F01B         	call	___awmod	;wreg free
  9495  001CB0  C017  F01D         	movff	?___awmod,___awdiv@dividend
  9496  001CB4  C018  F01E         	movff	?___awmod+1,___awdiv@dividend+1
  9497  001CB8  ECED  F01A         	call	___awdiv	;wreg free
  9498  001CBC  0E09               	movlw	9
  9499  001CBE  241D               	addwf	?___awdiv,w,c
  9500  001CC0  6E25               	movwf	___wmul@multiplier,c
  9501  001CC2  0E00               	movlw	0
  9502  001CC4  201E               	addwfc	?___awdiv+1,w,c
  9503  001CC6  6E26               	movwf	___wmul@multiplier+1,c
  9504  001CC8  ECD5  F01E         	call	___wmul	;wreg free
  9505  001CCC  0E7D               	movlw	low __powers_
  9506  001CCE  2425               	addwf	?___wmul,w,c
  9507  001CD0  6EF6               	movwf	tblptrl,c
  9508  001CD2  0EBE               	movlw	high __powers_
  9509  001CD4  2026               	addwfc	?___wmul+1,w,c
  9510  001CD6  6EF7               	movwf	tblptrh,c
  9511  001CD8                     	if	0	;There are less than 3 active tblptr bytes
  9512  001CD8                     	endif
  9513  001CD8  0009               	tblrd		*+
  9514  001CDA  CFF5 F038          	movff	tablat,___ftmul@f2
  9515  001CDE  0009               	tblrd		*+
  9516  001CE0  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9517  001CE4  000A               	tblrd		*-
  9518  001CE6  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9519  001CEA  0E00               	movlw	0
  9520  001CEC  6E20               	movwf	___awdiv@divisor+1,c
  9521  001CEE  0E64               	movlw	100
  9522  001CF0  6E1F               	movwf	___awdiv@divisor,c
  9523  001CF2  504A               	movf	scale@scl,w,c
  9524  001CF4  6E1D               	movwf	___awdiv@dividend,c
  9525  001CF6  6A1E               	clrf	___awdiv@dividend+1,c
  9526  001CF8  BE1D               	btfsc	___awdiv@dividend,7,c
  9527  001CFA  061E               	decf	___awdiv@dividend+1,f,c
  9528  001CFC  ECED  F01A         	call	___awdiv	;wreg free
  9529  001D00  0E12               	movlw	18
  9530  001D02  241D               	addwf	?___awdiv,w,c
  9531  001D04  6E25               	movwf	___wmul@multiplier,c
  9532  001D06  0E00               	movlw	0
  9533  001D08  201E               	addwfc	?___awdiv+1,w,c
  9534  001D0A  6E26               	movwf	___wmul@multiplier+1,c
  9535  001D0C  0E00               	movlw	0
  9536  001D0E  6E28               	movwf	___wmul@multiplicand+1,c
  9537  001D10  0E03               	movlw	3
  9538  001D12  6E27               	movwf	___wmul@multiplicand,c
  9539  001D14  ECD5  F01E         	call	___wmul	;wreg free
  9540  001D18  0E7D               	movlw	low __powers_
  9541  001D1A  2425               	addwf	?___wmul,w,c
  9542  001D1C  6EF6               	movwf	tblptrl,c
  9543  001D1E  0EBE               	movlw	high __powers_
  9544  001D20  2026               	addwfc	?___wmul+1,w,c
  9545  001D22  6EF7               	movwf	tblptrh,c
  9546  001D24                     	if	0	;There are less than 3 active tblptr bytes
  9547  001D24                     	endif
  9548  001D24  0009               	tblrd		*+
  9549  001D26  CFF5 F035          	movff	tablat,___ftmul@f1
  9550  001D2A  0009               	tblrd		*+
  9551  001D2C  CFF5 F036          	movff	tablat,___ftmul@f1+1
  9552  001D30  000A               	tblrd		*-
  9553  001D32  CFF5 F037          	movff	tablat,___ftmul@f1+2
  9554  001D36  EC76  F018         	call	___ftmul	;wreg free
  9555  001D3A  C035  F047         	movff	?___ftmul,_scale$2284
  9556  001D3E  C036  F048         	movff	?___ftmul+1,_scale$2284+1
  9557  001D42  C037  F049         	movff	?___ftmul+2,_scale$2284+2
  9558                           
  9559                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9560  001D46  C047  F035         	movff	_scale$2284,___ftmul@f1
  9561  001D4A  C048  F036         	movff	_scale$2284+1,___ftmul@f1+1
  9562  001D4E  C049  F037         	movff	_scale$2284+2,___ftmul@f1+2
  9563  001D52  0E00               	movlw	0
  9564  001D54  6E28               	movwf	___wmul@multiplicand+1,c
  9565  001D56  0E03               	movlw	3
  9566  001D58  6E27               	movwf	___wmul@multiplicand,c
  9567  001D5A  0E00               	movlw	0
  9568  001D5C  6E1A               	movwf	___awmod@divisor+1,c
  9569  001D5E  0E0A               	movlw	10
  9570  001D60  6E19               	movwf	___awmod@divisor,c
  9571  001D62  504A               	movf	scale@scl,w,c
  9572  001D64  6E17               	movwf	___awmod@dividend,c
  9573  001D66  6A18               	clrf	___awmod@dividend+1,c
  9574  001D68  BE17               	btfsc	___awmod@dividend,7,c
  9575  001D6A  0618               	decf	___awmod@dividend+1,f,c
  9576  001D6C  ECE4  F01B         	call	___awmod	;wreg free
  9577  001D70  C017  F025         	movff	?___awmod,___wmul@multiplier
  9578  001D74  C018  F026         	movff	?___awmod+1,___wmul@multiplier+1
  9579  001D78  ECD5  F01E         	call	___wmul	;wreg free
  9580  001D7C  0E7D               	movlw	low __powers_
  9581  001D7E  2425               	addwf	?___wmul,w,c
  9582  001D80  6EF6               	movwf	tblptrl,c
  9583  001D82  0EBE               	movlw	high __powers_
  9584  001D84  2026               	addwfc	?___wmul+1,w,c
  9585  001D86  6EF7               	movwf	tblptrh,c
  9586  001D88                     	if	0	;There are less than 3 active tblptr bytes
  9587  001D88                     	endif
  9588  001D88  0009               	tblrd		*+
  9589  001D8A  CFF5 F038          	movff	tablat,___ftmul@f2
  9590  001D8E  0009               	tblrd		*+
  9591  001D90  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9592  001D94  000A               	tblrd		*-
  9593  001D96  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9594  001D9A  EC76  F018         	call	___ftmul	;wreg free
  9595  001D9E  C035  F044         	movff	?___ftmul,?_scale
  9596  001DA2  C036  F045         	movff	?___ftmul+1,?_scale+1
  9597  001DA6  C037  F046         	movff	?___ftmul+2,?_scale+2
  9598  001DAA  0012               	return	
  9599  001DAC                     l6166:
  9600                           
  9601                           ;doprnt.c: 438: else if(scl > 10)
  9602  001DAC  504A               	movf	scale@scl,w,c
  9603  001DAE  0A80               	xorlw	128
  9604  001DB0  0F75               	addlw	-139
  9605  001DB2  A0D8               	btfss	status,0,c
  9606  001DB4  D04D               	goto	l6172
  9607                           
  9608                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9609  001DB6  0E00               	movlw	0
  9610  001DB8  6E20               	movwf	___awdiv@divisor+1,c
  9611  001DBA  0E0A               	movlw	10
  9612  001DBC  6E1F               	movwf	___awdiv@divisor,c
  9613  001DBE  504A               	movf	scale@scl,w,c
  9614  001DC0  6E1D               	movwf	___awdiv@dividend,c
  9615  001DC2  6A1E               	clrf	___awdiv@dividend+1,c
  9616  001DC4  BE1D               	btfsc	___awdiv@dividend,7,c
  9617  001DC6  061E               	decf	___awdiv@dividend+1,f,c
  9618  001DC8  ECED  F01A         	call	___awdiv	;wreg free
  9619  001DCC  0E09               	movlw	9
  9620  001DCE  241D               	addwf	?___awdiv,w,c
  9621  001DD0  6E25               	movwf	___wmul@multiplier,c
  9622  001DD2  0E00               	movlw	0
  9623  001DD4  201E               	addwfc	?___awdiv+1,w,c
  9624  001DD6  6E26               	movwf	___wmul@multiplier+1,c
  9625  001DD8  0E00               	movlw	0
  9626  001DDA  6E28               	movwf	___wmul@multiplicand+1,c
  9627  001DDC  0E03               	movlw	3
  9628  001DDE  6E27               	movwf	___wmul@multiplicand,c
  9629  001DE0  ECD5  F01E         	call	___wmul	;wreg free
  9630  001DE4  0E7D               	movlw	low __powers_
  9631  001DE6  2425               	addwf	?___wmul,w,c
  9632  001DE8  6EF6               	movwf	tblptrl,c
  9633  001DEA  0EBE               	movlw	high __powers_
  9634  001DEC  2026               	addwfc	?___wmul+1,w,c
  9635  001DEE  6EF7               	movwf	tblptrh,c
  9636  001DF0                     	if	0	;There are less than 3 active tblptr bytes
  9637  001DF0                     	endif
  9638  001DF0  0009               	tblrd		*+
  9639  001DF2  CFF5 F035          	movff	tablat,___ftmul@f1
  9640  001DF6  0009               	tblrd		*+
  9641  001DF8  CFF5 F036          	movff	tablat,___ftmul@f1+1
  9642  001DFC  000A               	tblrd		*-
  9643  001DFE  CFF5 F037          	movff	tablat,___ftmul@f1+2
  9644  001E02  0E00               	movlw	0
  9645  001E04  6E28               	movwf	___wmul@multiplicand+1,c
  9646  001E06  0E03               	movlw	3
  9647  001E08  6E27               	movwf	___wmul@multiplicand,c
  9648  001E0A  0E00               	movlw	0
  9649  001E0C  6E1A               	movwf	___awmod@divisor+1,c
  9650  001E0E  0E0A               	movlw	10
  9651  001E10  6E19               	movwf	___awmod@divisor,c
  9652  001E12  504A               	movf	scale@scl,w,c
  9653  001E14  6E17               	movwf	___awmod@dividend,c
  9654  001E16  6A18               	clrf	___awmod@dividend+1,c
  9655  001E18  BE17               	btfsc	___awmod@dividend,7,c
  9656  001E1A  0618               	decf	___awmod@dividend+1,f,c
  9657  001E1C  ECE4  F01B         	call	___awmod	;wreg free
  9658  001E20  C017  F025         	movff	?___awmod,___wmul@multiplier
  9659  001E24  C018  F026         	movff	?___awmod+1,___wmul@multiplier+1
  9660  001E28  ECD5  F01E         	call	___wmul	;wreg free
  9661  001E2C  0E7D               	movlw	low __powers_
  9662  001E2E  2425               	addwf	?___wmul,w,c
  9663  001E30  6EF6               	movwf	tblptrl,c
  9664  001E32  0EBE               	movlw	high __powers_
  9665  001E34  2026               	addwfc	?___wmul+1,w,c
  9666  001E36  6EF7               	movwf	tblptrh,c
  9667  001E38                     	if	0	;There are less than 3 active tblptr bytes
  9668  001E38                     	endif
  9669  001E38  0009               	tblrd		*+
  9670  001E3A  CFF5 F038          	movff	tablat,___ftmul@f2
  9671  001E3E  0009               	tblrd		*+
  9672  001E40  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9673  001E44  000A               	tblrd		*-
  9674  001E46  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9675  001E4A  EC76  F018         	call	___ftmul	;wreg free
  9676  001E4E  D7A7               	goto	L8
  9677  001E50                     l6172:
  9678                           
  9679                           ;doprnt.c: 440: return _powers_[scl];
  9680  001E50  504A               	movf	scale@scl,w,c
  9681  001E52  0D03               	mullw	3
  9682  001E54  0E7D               	movlw	low __powers_
  9683  001E56  24F3               	addwf	prodl,w,c
  9684  001E58  6EF6               	movwf	tblptrl,c
  9685  001E5A  0EBE               	movlw	high __powers_
  9686  001E5C  20F4               	addwfc	prodh,w,c
  9687  001E5E  6EF7               	movwf	tblptrh,c
  9688  001E60                     	if	0	;There are less than 3 active tblptr bytes
  9689  001E60                     	endif
  9690  001E60  0009               	tblrd		*+
  9691  001E62  CFF5 F044          	movff	tablat,?_scale
  9692  001E66  0009               	tblrd		*+
  9693  001E68  CFF5 F045          	movff	tablat,?_scale+1
  9694  001E6C  000A               	tblrd		*-
  9695  001E6E  CFF5 F046          	movff	tablat,?_scale+2
  9696  001E72  0012               	return	
  9697  001E74                     __end_of_scale:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           prodh	equ	0xFF4
  9704                           prodl	equ	0xFF3
  9705                           intcon	equ	0xFF2
  9706                           intcon2	equ	0xFF1
  9707                           postinc0	equ	0xFEE
  9708                           wreg	equ	0xFE8
  9709                           postdec1	equ	0xFE5
  9710                           fsr1l	equ	0xFE1
  9711                           indf2	equ	0xFDF
  9712                           postinc2	equ	0xFDE
  9713                           postdec2	equ	0xFDD
  9714                           fsr2h	equ	0xFDA
  9715                           fsr2l	equ	0xFD9
  9716                           status	equ	0xFD8
  9717                           
  9718 ;; *************** function _isdigit *****************
  9719 ;; Defined at:
  9720 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\isdigit.c"
  9721 ;; Parameters:    Size  Location     Type
  9722 ;;  c               1    wreg     unsigned char 
  9723 ;; Auto vars:     Size  Location     Type
  9724 ;;  c               1   24[COMRAM] unsigned char 
  9725 ;; Return value:  Size  Location     Type
  9726 ;;		None               void
  9727 ;; Registers used:
  9728 ;;		wreg, status,2, status,0
  9729 ;; Tracked objects:
  9730 ;;		On entry : 0/0
  9731 ;;		On exit  : 0/0
  9732 ;;		Unchanged: 0/0
  9733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9737 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9738 ;;Total ram usage:        3 bytes
  9739 ;; Hardware stack levels used:    1
  9740 ;; Hardware stack levels required when called:    4
  9741 ;; This function calls:
  9742 ;;		Nothing
  9743 ;; This function is called by:
  9744 ;;		_sprintf
  9745 ;; This function uses a non-reentrant model
  9746 ;;
  9747                           
  9748                           	psect	text31
  9749  003E18                     __ptext31:
  9750                           	opt stack 0
  9751  003E18                     _isdigit:
  9752                           	opt stack 24
  9753                           
  9754                           ;incstack = 0
  9755                           ;isdigit@c stored from wreg
  9756  003E18  6E19               	movwf	isdigit@c,c
  9757  003E1A  0E00               	movlw	0
  9758  003E1C  6E18               	movwf	_isdigit$1890,c
  9759  003E1E  0E3A               	movlw	58
  9760  003E20  6019               	cpfslt	isdigit@c,c
  9761  003E22  D005               	goto	l6184
  9762  003E24  0E2F               	movlw	47
  9763  003E26  6419               	cpfsgt	isdigit@c,c
  9764  003E28  D002               	goto	l6184
  9765  003E2A  0E01               	movlw	1
  9766  003E2C  6E18               	movwf	_isdigit$1890,c
  9767  003E2E                     l6184:
  9768  003E2E  C018  F017         	movff	_isdigit$1890,??_isdigit
  9769  003E32  3017               	rrcf	??_isdigit,w,c
  9770  003E34  0012               	return	
  9771  003E36                     __end_of_isdigit:
  9772                           	opt stack 0
  9773                           tblptru	equ	0xFF8
  9774                           tblptrh	equ	0xFF7
  9775                           tblptrl	equ	0xFF6
  9776                           tablat	equ	0xFF5
  9777                           prodh	equ	0xFF4
  9778                           prodl	equ	0xFF3
  9779                           intcon	equ	0xFF2
  9780                           intcon2	equ	0xFF1
  9781                           postinc0	equ	0xFEE
  9782                           wreg	equ	0xFE8
  9783                           postdec1	equ	0xFE5
  9784                           fsr1l	equ	0xFE1
  9785                           indf2	equ	0xFDF
  9786                           postinc2	equ	0xFDE
  9787                           postdec2	equ	0xFDD
  9788                           fsr2h	equ	0xFDA
  9789                           fsr2l	equ	0xFD9
  9790                           status	equ	0xFD8
  9791                           
  9792 ;; *************** function _fround *****************
  9793 ;; Defined at:
  9794 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  9795 ;; Parameters:    Size  Location     Type
  9796 ;;  prec            1    wreg     unsigned char 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  prec            1   76[COMRAM] unsigned char 
  9799 ;; Return value:  Size  Location     Type
  9800 ;;                  3   67[COMRAM] unsigned char 
  9801 ;; Registers used:
  9802 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9803 ;; Tracked objects:
  9804 ;;		On entry : 0/0
  9805 ;;		On exit  : 0/0
  9806 ;;		Unchanged: 0/0
  9807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9808 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9809 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9811 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9812 ;;Total ram usage:       10 bytes
  9813 ;; Hardware stack levels used:    1
  9814 ;; Hardware stack levels required when called:    6
  9815 ;; This function calls:
  9816 ;;		___awdiv
  9817 ;;		___awmod
  9818 ;;		___ftmul
  9819 ;;		___wmul
  9820 ;; This function is called by:
  9821 ;;		_sprintf
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text32
  9826  002348                     __ptext32:
  9827                           	opt stack 0
  9828  002348                     _fround:
  9829                           	opt stack 22
  9830                           
  9831                           ;incstack = 0
  9832                           ;fround@prec stored from wreg
  9833  002348  6E4D               	movwf	fround@prec,c
  9834                           
  9835                           ;doprnt.c: 413: if(prec>=110)
  9836  00234A  0E6D               	movlw	109
  9837  00234C  644D               	cpfsgt	fround@prec,c
  9838  00234E  D09F               	goto	l6126
  9839                           
  9840                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9841  002350  0E00               	movlw	0
  9842  002352  6E28               	movwf	___wmul@multiplicand+1,c
  9843  002354  0E03               	movlw	3
  9844  002356  6E27               	movwf	___wmul@multiplicand,c
  9845  002358  0E00               	movlw	0
  9846  00235A  6E20               	movwf	___awdiv@divisor+1,c
  9847  00235C  0E0A               	movlw	10
  9848  00235E  6E1F               	movwf	___awdiv@divisor,c
  9849  002360  0E00               	movlw	0
  9850  002362  6E1A               	movwf	___awmod@divisor+1,c
  9851  002364  0E64               	movlw	100
  9852  002366  6E19               	movwf	___awmod@divisor,c
  9853  002368  C04D  F017         	movff	fround@prec,___awmod@dividend
  9854  00236C  6A18               	clrf	___awmod@dividend+1,c
  9855  00236E  ECE4  F01B         	call	___awmod	;wreg free
  9856  002372  C017  F01D         	movff	?___awmod,___awdiv@dividend
  9857  002376  C018  F01E         	movff	?___awmod+1,___awdiv@dividend+1
  9858  00237A  ECED  F01A         	call	___awdiv	;wreg free
  9859  00237E  0E09               	movlw	9
  9860  002380  241D               	addwf	?___awdiv,w,c
  9861  002382  6E25               	movwf	___wmul@multiplier,c
  9862  002384  0E00               	movlw	0
  9863  002386  201E               	addwfc	?___awdiv+1,w,c
  9864  002388  6E26               	movwf	___wmul@multiplier+1,c
  9865  00238A  ECD5  F01E         	call	___wmul	;wreg free
  9866  00238E  0EA4               	movlw	low __npowers_
  9867  002390  2425               	addwf	?___wmul,w,c
  9868  002392  6EF6               	movwf	tblptrl,c
  9869  002394  0EBE               	movlw	high __npowers_
  9870  002396  2026               	addwfc	?___wmul+1,w,c
  9871  002398  6EF7               	movwf	tblptrh,c
  9872  00239A                     	if	0	;There are less than 3 active tblptr bytes
  9873  00239A                     	endif
  9874  00239A  0009               	tblrd		*+
  9875  00239C  CFF5 F038          	movff	tablat,___ftmul@f2
  9876  0023A0  0009               	tblrd		*+
  9877  0023A2  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9878  0023A6  000A               	tblrd		*-
  9879  0023A8  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9880  0023AC  0E00               	movlw	0
  9881  0023AE  6E20               	movwf	___awdiv@divisor+1,c
  9882  0023B0  0E64               	movlw	100
  9883  0023B2  6E1F               	movwf	___awdiv@divisor,c
  9884  0023B4  C04D  F01D         	movff	fround@prec,___awdiv@dividend
  9885  0023B8  6A1E               	clrf	___awdiv@dividend+1,c
  9886  0023BA  ECED  F01A         	call	___awdiv	;wreg free
  9887  0023BE  0E12               	movlw	18
  9888  0023C0  241D               	addwf	?___awdiv,w,c
  9889  0023C2  6E25               	movwf	___wmul@multiplier,c
  9890  0023C4  0E00               	movlw	0
  9891  0023C6  201E               	addwfc	?___awdiv+1,w,c
  9892  0023C8  6E26               	movwf	___wmul@multiplier+1,c
  9893  0023CA  0E00               	movlw	0
  9894  0023CC  6E28               	movwf	___wmul@multiplicand+1,c
  9895  0023CE  0E03               	movlw	3
  9896  0023D0  6E27               	movwf	___wmul@multiplicand,c
  9897  0023D2  ECD5  F01E         	call	___wmul	;wreg free
  9898  0023D6  0EA4               	movlw	low __npowers_
  9899  0023D8  2425               	addwf	?___wmul,w,c
  9900  0023DA  6EF6               	movwf	tblptrl,c
  9901  0023DC  0EBE               	movlw	high __npowers_
  9902  0023DE  2026               	addwfc	?___wmul+1,w,c
  9903  0023E0  6EF7               	movwf	tblptrh,c
  9904  0023E2                     	if	0	;There are less than 3 active tblptr bytes
  9905  0023E2                     	endif
  9906  0023E2  0009               	tblrd		*+
  9907  0023E4  CFF5 F035          	movff	tablat,___ftmul@f1
  9908  0023E8  0009               	tblrd		*+
  9909  0023EA  CFF5 F036          	movff	tablat,___ftmul@f1+1
  9910  0023EE  000A               	tblrd		*-
  9911  0023F0  CFF5 F037          	movff	tablat,___ftmul@f1+2
  9912  0023F4  EC76  F018         	call	___ftmul	;wreg free
  9913  0023F8  C035  F04A         	movff	?___ftmul,_fround$2282
  9914  0023FC  C036  F04B         	movff	?___ftmul+1,_fround$2282+1
  9915  002400  C037  F04C         	movff	?___ftmul+2,_fround$2282+2
  9916                           
  9917                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9918  002404  0E00               	movlw	0
  9919  002406  6E28               	movwf	___wmul@multiplicand+1,c
  9920  002408  0E03               	movlw	3
  9921  00240A  6E27               	movwf	___wmul@multiplicand,c
  9922  00240C  0E00               	movlw	0
  9923  00240E  6E1A               	movwf	___awmod@divisor+1,c
  9924  002410  0E0A               	movlw	10
  9925  002412  6E19               	movwf	___awmod@divisor,c
  9926  002414  C04D  F017         	movff	fround@prec,___awmod@dividend
  9927  002418  6A18               	clrf	___awmod@dividend+1,c
  9928  00241A  ECE4  F01B         	call	___awmod	;wreg free
  9929  00241E  C017  F025         	movff	?___awmod,___wmul@multiplier
  9930  002422  C018  F026         	movff	?___awmod+1,___wmul@multiplier+1
  9931  002426  ECD5  F01E         	call	___wmul	;wreg free
  9932  00242A  0EA4               	movlw	low __npowers_
  9933  00242C  2425               	addwf	?___wmul,w,c
  9934  00242E  6EF6               	movwf	tblptrl,c
  9935  002430  0EBE               	movlw	high __npowers_
  9936  002432  2026               	addwfc	?___wmul+1,w,c
  9937  002434  6EF7               	movwf	tblptrh,c
  9938  002436                     	if	0	;There are less than 3 active tblptr bytes
  9939  002436                     	endif
  9940  002436  0009               	tblrd		*+
  9941  002438  CFF5 F038          	movff	tablat,___ftmul@f2
  9942  00243C  0009               	tblrd		*+
  9943  00243E  CFF5 F039          	movff	tablat,___ftmul@f2+1
  9944  002442  000A               	tblrd		*-
  9945  002444  CFF5 F03A          	movff	tablat,___ftmul@f2+2
  9946  002448  C04A  F035         	movff	_fround$2282,___ftmul@f1
  9947  00244C  C04B  F036         	movff	_fround$2282+1,___ftmul@f1+1
  9948  002450  C04C  F037         	movff	_fround$2282+2,___ftmul@f1+2
  9949  002454  EC76  F018         	call	___ftmul	;wreg free
  9950  002458  C035  F047         	movff	?___ftmul,_fround$2283
  9951  00245C  C036  F048         	movff	?___ftmul+1,_fround$2283+1
  9952  002460  C037  F049         	movff	?___ftmul+2,_fround$2283+2
  9953                           
  9954                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9955  002464  C047  F035         	movff	_fround$2283,___ftmul@f1
  9956  002468  C048  F036         	movff	_fround$2283+1,___ftmul@f1+1
  9957  00246C  C049  F037         	movff	_fround$2283+2,___ftmul@f1+2
  9958  002470  0E00               	movlw	0
  9959  002472  6E38               	movwf	___ftmul@f2,c
  9960  002474  0E00               	movlw	0
  9961  002476  6E39               	movwf	___ftmul@f2+1,c
  9962  002478  0E3F               	movlw	63
  9963  00247A  6E3A               	movwf	___ftmul@f2+2,c
  9964  00247C  EC76  F018         	call	___ftmul	;wreg free
  9965  002480  C035  F044         	movff	?___ftmul,?_fround
  9966  002484  C036  F045         	movff	?___ftmul+1,?_fround+1
  9967  002488  C037  F046         	movff	?___ftmul+2,?_fround+2
  9968  00248C  0012               	return	
  9969  00248E                     l6126:
  9970                           
  9971                           ;doprnt.c: 415: else if(prec > 10)
  9972  00248E  0E0A               	movlw	10
  9973  002490  644D               	cpfsgt	fround@prec,c
  9974  002492  D05D               	goto	l6134
  9975                           
  9976                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9977  002494  0E00               	movlw	0
  9978  002496  6E28               	movwf	___wmul@multiplicand+1,c
  9979  002498  0E03               	movlw	3
  9980  00249A  6E27               	movwf	___wmul@multiplicand,c
  9981  00249C  0E00               	movlw	0
  9982  00249E  6E1A               	movwf	___awmod@divisor+1,c
  9983  0024A0  0E0A               	movlw	10
  9984  0024A2  6E19               	movwf	___awmod@divisor,c
  9985  0024A4  C04D  F017         	movff	fround@prec,___awmod@dividend
  9986  0024A8  6A18               	clrf	___awmod@dividend+1,c
  9987  0024AA  ECE4  F01B         	call	___awmod	;wreg free
  9988  0024AE  C017  F025         	movff	?___awmod,___wmul@multiplier
  9989  0024B2  C018  F026         	movff	?___awmod+1,___wmul@multiplier+1
  9990  0024B6  ECD5  F01E         	call	___wmul	;wreg free
  9991  0024BA  0EA4               	movlw	low __npowers_
  9992  0024BC  2425               	addwf	?___wmul,w,c
  9993  0024BE  6EF6               	movwf	tblptrl,c
  9994  0024C0  0EBE               	movlw	high __npowers_
  9995  0024C2  2026               	addwfc	?___wmul+1,w,c
  9996  0024C4  6EF7               	movwf	tblptrh,c
  9997  0024C6                     	if	0	;There are less than 3 active tblptr bytes
  9998  0024C6                     	endif
  9999  0024C6  0009               	tblrd		*+
 10000  0024C8  CFF5 F038          	movff	tablat,___ftmul@f2
 10001  0024CC  0009               	tblrd		*+
 10002  0024CE  CFF5 F039          	movff	tablat,___ftmul@f2+1
 10003  0024D2  000A               	tblrd		*-
 10004  0024D4  CFF5 F03A          	movff	tablat,___ftmul@f2+2
 10005  0024D8  0E00               	movlw	0
 10006  0024DA  6E20               	movwf	___awdiv@divisor+1,c
 10007  0024DC  0E0A               	movlw	10
 10008  0024DE  6E1F               	movwf	___awdiv@divisor,c
 10009  0024E0  C04D  F01D         	movff	fround@prec,___awdiv@dividend
 10010  0024E4  6A1E               	clrf	___awdiv@dividend+1,c
 10011  0024E6  ECED  F01A         	call	___awdiv	;wreg free
 10012  0024EA  0E09               	movlw	9
 10013  0024EC  241D               	addwf	?___awdiv,w,c
 10014  0024EE  6E25               	movwf	___wmul@multiplier,c
 10015  0024F0  0E00               	movlw	0
 10016  0024F2  201E               	addwfc	?___awdiv+1,w,c
 10017  0024F4  6E26               	movwf	___wmul@multiplier+1,c
 10018  0024F6  0E00               	movlw	0
 10019  0024F8  6E28               	movwf	___wmul@multiplicand+1,c
 10020  0024FA  0E03               	movlw	3
 10021  0024FC  6E27               	movwf	___wmul@multiplicand,c
 10022  0024FE  ECD5  F01E         	call	___wmul	;wreg free
 10023  002502  0EA4               	movlw	low __npowers_
 10024  002504  2425               	addwf	?___wmul,w,c
 10025  002506  6EF6               	movwf	tblptrl,c
 10026  002508  0EBE               	movlw	high __npowers_
 10027  00250A  2026               	addwfc	?___wmul+1,w,c
 10028  00250C  6EF7               	movwf	tblptrh,c
 10029  00250E                     	if	0	;There are less than 3 active tblptr bytes
 10030  00250E                     	endif
 10031  00250E  0009               	tblrd		*+
 10032  002510  CFF5 F035          	movff	tablat,___ftmul@f1
 10033  002514  0009               	tblrd		*+
 10034  002516  CFF5 F036          	movff	tablat,___ftmul@f1+1
 10035  00251A  000A               	tblrd		*-
 10036  00251C  CFF5 F037          	movff	tablat,___ftmul@f1+2
 10037  002520  EC76  F018         	call	___ftmul	;wreg free
 10038  002524  C035  F04A         	movff	?___ftmul,_fround$2282
 10039  002528  C036  F04B         	movff	?___ftmul+1,_fround$2282+1
 10040  00252C  C037  F04C         	movff	?___ftmul+2,_fround$2282+2
 10041                           
 10042                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 10043  002530  C04A  F035         	movff	_fround$2282,___ftmul@f1
 10044  002534  C04B  F036         	movff	_fround$2282+1,___ftmul@f1+1
 10045  002538  C04C  F037         	movff	_fround$2282+2,___ftmul@f1+2
 10046  00253C  0E00               	movlw	0
 10047  00253E  6E38               	movwf	___ftmul@f2,c
 10048  002540  0E00               	movlw	0
 10049  002542  6E39               	movwf	___ftmul@f2+1,c
 10050  002544  0E3F               	movlw	63
 10051  002546  6E3A               	movwf	___ftmul@f2+2,c
 10052  002548  EC76  F018         	call	___ftmul	;wreg free
 10053  00254C  D799               	goto	L9
 10054  00254E                     l6134:
 10055                           
 10056                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 10057  00254E  504D               	movf	fround@prec,w,c
 10058  002550  0D03               	mullw	3
 10059  002552  0EA4               	movlw	low __npowers_
 10060  002554  24F3               	addwf	prodl,w,c
 10061  002556  6EF6               	movwf	tblptrl,c
 10062  002558  0EBE               	movlw	high __npowers_
 10063  00255A  20F4               	addwfc	prodh,w,c
 10064  00255C  6EF7               	movwf	tblptrh,c
 10065  00255E                     	if	0	;There are less than 3 active tblptr bytes
 10066  00255E                     	endif
 10067  00255E  0009               	tblrd		*+
 10068  002560  CFF5 F035          	movff	tablat,___ftmul@f1
 10069  002564  0009               	tblrd		*+
 10070  002566  CFF5 F036          	movff	tablat,___ftmul@f1+1
 10071  00256A  000A               	tblrd		*-
 10072  00256C  CFF5 F037          	movff	tablat,___ftmul@f1+2
 10073  002570  0E00               	movlw	0
 10074  002572  6E38               	movwf	___ftmul@f2,c
 10075  002574  0E00               	movlw	0
 10076  002576  6E39               	movwf	___ftmul@f2+1,c
 10077  002578  0E3F               	movlw	63
 10078  00257A  6E3A               	movwf	___ftmul@f2+2,c
 10079  00257C  EC76  F018         	call	___ftmul	;wreg free
 10080  002580  C035  F044         	movff	?___ftmul,?_fround
 10081  002584  C036  F045         	movff	?___ftmul+1,?_fround+1
 10082  002588  C037  F046         	movff	?___ftmul+2,?_fround+2
 10083  00258C  0012               	return	
 10084  00258E                     __end_of_fround:
 10085                           	opt stack 0
 10086                           tblptru	equ	0xFF8
 10087                           tblptrh	equ	0xFF7
 10088                           tblptrl	equ	0xFF6
 10089                           tablat	equ	0xFF5
 10090                           prodh	equ	0xFF4
 10091                           prodl	equ	0xFF3
 10092                           intcon	equ	0xFF2
 10093                           intcon2	equ	0xFF1
 10094                           postinc0	equ	0xFEE
 10095                           wreg	equ	0xFE8
 10096                           postdec1	equ	0xFE5
 10097                           fsr1l	equ	0xFE1
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           fsr2h	equ	0xFDA
 10102                           fsr2l	equ	0xFD9
 10103                           status	equ	0xFD8
 10104                           
 10105 ;; *************** function ___wmul *****************
 10106 ;; Defined at:
 10107 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  multiplier      2   36[COMRAM] unsigned int 
 10110 ;;  multiplicand    2   38[COMRAM] unsigned int 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  product         2   40[COMRAM] unsigned int 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  2   36[COMRAM] unsigned int 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2, status,0, prodl, prodh
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10125 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10126 ;;Total ram usage:        6 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    4
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_contrast_display
 10133 ;;		_brightness_display
 10134 ;;		_fround
 10135 ;;		_scale
 10136 ;;		_sprintf
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           
 10140                           	psect	text33
 10141  003DAA                     __ptext33:
 10142                           	opt stack 0
 10143  003DAA                     ___wmul:
 10144                           	opt stack 23
 10145                           
 10146                           ;incstack = 0
 10147  003DAA  5025               	movf	___wmul@multiplier,w,c
 10148  003DAC  0227               	mulwf	___wmul@multiplicand,c
 10149  003DAE  CFF3 F029          	movff	prodl,___wmul@product
 10150  003DB2  CFF4 F02A          	movff	prodh,___wmul@product+1
 10151  003DB6  5025               	movf	___wmul@multiplier,w,c
 10152  003DB8  0228               	mulwf	___wmul@multiplicand+1,c
 10153  003DBA  50F3               	movf	prodl,w,c
 10154  003DBC  262A               	addwf	___wmul@product+1,f,c
 10155  003DBE  5026               	movf	___wmul@multiplier+1,w,c
 10156  003DC0  0227               	mulwf	___wmul@multiplicand,c
 10157  003DC2  50F3               	movf	prodl,w,c
 10158  003DC4  262A               	addwf	___wmul@product+1,f,c
 10159  003DC6  C029  F025         	movff	___wmul@product,?___wmul
 10160  003DCA  C02A  F026         	movff	___wmul@product+1,?___wmul+1
 10161  003DCE  0012               	return	
 10162  003DD0                     __end_of___wmul:
 10163                           	opt stack 0
 10164                           tblptru	equ	0xFF8
 10165                           tblptrh	equ	0xFF7
 10166                           tblptrl	equ	0xFF6
 10167                           tablat	equ	0xFF5
 10168                           prodh	equ	0xFF4
 10169                           prodl	equ	0xFF3
 10170                           intcon	equ	0xFF2
 10171                           intcon2	equ	0xFF1
 10172                           postinc0	equ	0xFEE
 10173                           wreg	equ	0xFE8
 10174                           postdec1	equ	0xFE5
 10175                           fsr1l	equ	0xFE1
 10176                           indf2	equ	0xFDF
 10177                           postinc2	equ	0xFDE
 10178                           postdec2	equ	0xFDD
 10179                           fsr2h	equ	0xFDA
 10180                           fsr2l	equ	0xFD9
 10181                           status	equ	0xFD8
 10182                           
 10183 ;; *************** function ___ftmul *****************
 10184 ;; Defined at:
 10185 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftmul.c"
 10186 ;; Parameters:    Size  Location     Type
 10187 ;;  f1              3   52[COMRAM] float 
 10188 ;;  f2              3   55[COMRAM] float 
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;  f3_as_produc    3   62[COMRAM] unsigned um
 10191 ;;  sign            1   66[COMRAM] unsigned char 
 10192 ;;  cntr            1   65[COMRAM] unsigned char 
 10193 ;;  exp             1   61[COMRAM] unsigned char 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;                  3   52[COMRAM] float 
 10196 ;; Registers used:
 10197 ;;		wreg, status,2, status,0, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10203 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10204 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;Total ram usage:       15 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    5
 10210 ;; This function calls:
 10211 ;;		___ftpack
 10212 ;; This function is called by:
 10213 ;;		_default_display
 10214 ;;		_voltage_set_display
 10215 ;;		_current_protection_set_display
 10216 ;;		_current_limit_set_display
 10217 ;;		_current_auto_limit_set_display
 10218 ;;		_main
 10219 ;;		_fround
 10220 ;;		_scale
 10221 ;;		_sprintf
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           	psect	text34
 10226  0030EC                     __ptext34:
 10227                           	opt stack 0
 10228  0030EC                     ___ftmul:
 10229                           	opt stack 22
 10230                           
 10231                           ;incstack = 0
 10232  0030EC  C037  F03B         	movff	___ftmul@f1+2,??___ftmul
 10233  0030F0  6A3C               	clrf	(??___ftmul+1)& (0+255),c
 10234  0030F2  6A3D               	clrf	(??___ftmul+2)& (0+255),c
 10235  0030F4  3436               	rlcf	___ftmul@f1+1,w,c
 10236  0030F6  363B               	rlcf	??___ftmul& (0+255),f,c
 10237  0030F8  E301               	bnc	u5701
 10238  0030FA  803C               	bsf	(??___ftmul+1)& (0+255),0,c
 10239  0030FC                     u5701:
 10240  0030FC  503B               	movf	??___ftmul,w,c
 10241  0030FE  6E3E               	movwf	___ftmul@exp,c
 10242  003100  503E               	movf	___ftmul@exp,w,c
 10243  003102  A4D8               	btfss	status,2,c
 10244  003104  D007               	goto	l5994
 10245  003106  0E00               	movlw	0
 10246  003108  6E35               	movwf	?___ftmul,c
 10247  00310A  0E00               	movlw	0
 10248  00310C  6E36               	movwf	?___ftmul+1,c
 10249  00310E  0E00               	movlw	0
 10250  003110  6E37               	movwf	?___ftmul+2,c
 10251  003112  0012               	return	
 10252  003114                     l5994:
 10253  003114  C03A  F03B         	movff	___ftmul@f2+2,??___ftmul
 10254  003118  6A3C               	clrf	(??___ftmul+1)& (0+255),c
 10255  00311A  6A3D               	clrf	(??___ftmul+2)& (0+255),c
 10256  00311C  3439               	rlcf	___ftmul@f2+1,w,c
 10257  00311E  363B               	rlcf	??___ftmul& (0+255),f,c
 10258  003120  E301               	bnc	u5721
 10259  003122  803C               	bsf	(??___ftmul+1)& (0+255),0,c
 10260  003124                     u5721:
 10261  003124  503B               	movf	??___ftmul,w,c
 10262  003126  6E43               	movwf	___ftmul@sign,c
 10263  003128  5043               	movf	___ftmul@sign,w,c
 10264  00312A  A4D8               	btfss	status,2,c
 10265  00312C  D007               	goto	l6000
 10266  00312E  0E00               	movlw	0
 10267  003130  6E35               	movwf	?___ftmul,c
 10268  003132  0E00               	movlw	0
 10269  003134  6E36               	movwf	?___ftmul+1,c
 10270  003136  0E00               	movlw	0
 10271  003138  6E37               	movwf	?___ftmul+2,c
 10272  00313A  0012               	return	
 10273  00313C                     l6000:
 10274  00313C  5043               	movf	___ftmul@sign,w,c
 10275  00313E  0F7B               	addlw	123
 10276  003140  263E               	addwf	___ftmul@exp,f,c
 10277  003142  C037  F043         	movff	___ftmul@f1+2,___ftmul@sign
 10278  003146  503A               	movf	___ftmul@f2+2,w,c
 10279  003148  1A43               	xorwf	___ftmul@sign,f,c
 10280  00314A  0E80               	movlw	128
 10281  00314C  1643               	andwf	___ftmul@sign,f,c
 10282  00314E  8E36               	bsf	___ftmul@f1+1,7,c
 10283  003150  8E39               	bsf	___ftmul@f2+1,7,c
 10284  003152  0EFF               	movlw	255
 10285  003154  1638               	andwf	___ftmul@f2,f,c
 10286  003156  0EFF               	movlw	255
 10287  003158  1639               	andwf	___ftmul@f2+1,f,c
 10288  00315A  0E00               	movlw	0
 10289  00315C  163A               	andwf	___ftmul@f2+2,f,c
 10290  00315E  0E00               	movlw	0
 10291  003160  6E3F               	movwf	___ftmul@f3_as_product,c
 10292  003162  0E00               	movlw	0
 10293  003164  6E40               	movwf	___ftmul@f3_as_product+1,c
 10294  003166  0E00               	movlw	0
 10295  003168  6E41               	movwf	___ftmul@f3_as_product+2,c
 10296  00316A  0E07               	movlw	7
 10297  00316C  6E42               	movwf	___ftmul@cntr,c
 10298  00316E                     l6014:
 10299  00316E  A035               	btfss	___ftmul@f1,0,c
 10300  003170  D006               	goto	l6018
 10301  003172  5038               	movf	___ftmul@f2,w,c
 10302  003174  263F               	addwf	___ftmul@f3_as_product,f,c
 10303  003176  5039               	movf	___ftmul@f2+1,w,c
 10304  003178  2240               	addwfc	___ftmul@f3_as_product+1,f,c
 10305  00317A  503A               	movf	___ftmul@f2+2,w,c
 10306  00317C  2241               	addwfc	___ftmul@f3_as_product+2,f,c
 10307  00317E                     l6018:
 10308  00317E  90D8               	bcf	status,0,c
 10309  003180  3237               	rrcf	___ftmul@f1+2,f,c
 10310  003182  3236               	rrcf	___ftmul@f1+1,f,c
 10311  003184  3235               	rrcf	___ftmul@f1,f,c
 10312  003186  90D8               	bcf	status,0,c
 10313  003188  3638               	rlcf	___ftmul@f2,f,c
 10314  00318A  3639               	rlcf	___ftmul@f2+1,f,c
 10315  00318C  363A               	rlcf	___ftmul@f2+2,f,c
 10316  00318E  2E42               	decfsz	___ftmul@cntr,f,c
 10317  003190  D7EE               	goto	l6014
 10318  003192  0E09               	movlw	9
 10319  003194  6E42               	movwf	___ftmul@cntr,c
 10320  003196                     l6024:
 10321  003196  A035               	btfss	___ftmul@f1,0,c
 10322  003198  D006               	goto	l6028
 10323  00319A  5038               	movf	___ftmul@f2,w,c
 10324  00319C  263F               	addwf	___ftmul@f3_as_product,f,c
 10325  00319E  5039               	movf	___ftmul@f2+1,w,c
 10326  0031A0  2240               	addwfc	___ftmul@f3_as_product+1,f,c
 10327  0031A2  503A               	movf	___ftmul@f2+2,w,c
 10328  0031A4  2241               	addwfc	___ftmul@f3_as_product+2,f,c
 10329  0031A6                     l6028:
 10330  0031A6  90D8               	bcf	status,0,c
 10331  0031A8  3237               	rrcf	___ftmul@f1+2,f,c
 10332  0031AA  3236               	rrcf	___ftmul@f1+1,f,c
 10333  0031AC  3235               	rrcf	___ftmul@f1,f,c
 10334  0031AE  90D8               	bcf	status,0,c
 10335  0031B0  3241               	rrcf	___ftmul@f3_as_product+2,f,c
 10336  0031B2  3240               	rrcf	___ftmul@f3_as_product+1,f,c
 10337  0031B4  323F               	rrcf	___ftmul@f3_as_product,f,c
 10338  0031B6  2E42               	decfsz	___ftmul@cntr,f,c
 10339  0031B8  D7EE               	goto	l6024
 10340  0031BA  C03F  F017         	movff	___ftmul@f3_as_product,___ftpack@arg
 10341  0031BE  C040  F018         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 10342  0031C2  C041  F019         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 10343  0031C6  C03E  F01A         	movff	___ftmul@exp,___ftpack@exp
 10344  0031CA  C043  F01B         	movff	___ftmul@sign,___ftpack@sign
 10345  0031CE  EC44  F01A         	call	___ftpack	;wreg free
 10346  0031D2  C017  F035         	movff	?___ftpack,?___ftmul
 10347  0031D6  C018  F036         	movff	?___ftpack+1,?___ftmul+1
 10348  0031DA  C019  F037         	movff	?___ftpack+2,?___ftmul+2
 10349  0031DE  0012               	return	
 10350  0031E0                     __end_of___ftmul:
 10351                           	opt stack 0
 10352                           tblptru	equ	0xFF8
 10353                           tblptrh	equ	0xFF7
 10354                           tblptrl	equ	0xFF6
 10355                           tablat	equ	0xFF5
 10356                           prodh	equ	0xFF4
 10357                           prodl	equ	0xFF3
 10358                           intcon	equ	0xFF2
 10359                           intcon2	equ	0xFF1
 10360                           postinc0	equ	0xFEE
 10361                           wreg	equ	0xFE8
 10362                           postdec1	equ	0xFE5
 10363                           fsr1l	equ	0xFE1
 10364                           indf2	equ	0xFDF
 10365                           postinc2	equ	0xFDE
 10366                           postdec2	equ	0xFDD
 10367                           fsr2h	equ	0xFDA
 10368                           fsr2l	equ	0xFD9
 10369                           status	equ	0xFD8
 10370                           
 10371 ;; *************** function ___awmod *****************
 10372 ;; Defined at:
 10373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awmod.c"
 10374 ;; Parameters:    Size  Location     Type
 10375 ;;  dividend        2   22[COMRAM] int 
 10376 ;;  divisor         2   24[COMRAM] int 
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  sign            1   27[COMRAM] unsigned char 
 10379 ;;  counter         1   26[COMRAM] unsigned char 
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  2   22[COMRAM] int 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10390 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;Total ram usage:        6 bytes
 10394 ;; Hardware stack levels used:    1
 10395 ;; Hardware stack levels required when called:    4
 10396 ;; This function calls:
 10397 ;;		Nothing
 10398 ;; This function is called by:
 10399 ;;		_fround
 10400 ;;		_scale
 10401 ;;		_sprintf
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text35
 10406  0037C8                     __ptext35:
 10407                           	opt stack 0
 10408  0037C8                     ___awmod:
 10409                           	opt stack 23
 10410                           
 10411                           ;incstack = 0
 10412  0037C8  0E00               	movlw	0
 10413  0037CA  6E1C               	movwf	___awmod@sign,c
 10414  0037CC  AE18               	btfss	___awmod@dividend+1,7,c
 10415  0037CE  D006               	goto	l6088
 10416  0037D0  6C17               	negf	___awmod@dividend,c
 10417  0037D2  1E18               	comf	___awmod@dividend+1,f,c
 10418  0037D4  B0D8               	btfsc	status,0,c
 10419  0037D6  2A18               	incf	___awmod@dividend+1,f,c
 10420  0037D8  0E01               	movlw	1
 10421  0037DA  6E1C               	movwf	___awmod@sign,c
 10422  0037DC                     l6088:
 10423  0037DC  AE1A               	btfss	___awmod@divisor+1,7,c
 10424  0037DE  D004               	goto	l6092
 10425  0037E0  6C19               	negf	___awmod@divisor,c
 10426  0037E2  1E1A               	comf	___awmod@divisor+1,f,c
 10427  0037E4  B0D8               	btfsc	status,0,c
 10428  0037E6  2A1A               	incf	___awmod@divisor+1,f,c
 10429  0037E8                     l6092:
 10430  0037E8  5019               	movf	___awmod@divisor,w,c
 10431  0037EA  101A               	iorwf	___awmod@divisor+1,w,c
 10432  0037EC  B4D8               	btfsc	status,2,c
 10433  0037EE  D018               	goto	l6108
 10434  0037F0  0E01               	movlw	1
 10435  0037F2  6E1B               	movwf	___awmod@counter,c
 10436  0037F4  D004               	goto	l6098
 10437  0037F6                     l6096:
 10438  0037F6  90D8               	bcf	status,0,c
 10439  0037F8  3619               	rlcf	___awmod@divisor,f,c
 10440  0037FA  361A               	rlcf	___awmod@divisor+1,f,c
 10441  0037FC  2A1B               	incf	___awmod@counter,f,c
 10442  0037FE                     l6098:
 10443  0037FE  AE1A               	btfss	___awmod@divisor+1,7,c
 10444  003800  D7FA               	goto	l6096
 10445  003802                     l6100:
 10446  003802  5019               	movf	___awmod@divisor,w,c
 10447  003804  5C17               	subwf	___awmod@dividend,w,c
 10448  003806  501A               	movf	___awmod@divisor+1,w,c
 10449  003808  5818               	subwfb	___awmod@dividend+1,w,c
 10450  00380A  A0D8               	btfss	status,0,c
 10451  00380C  D004               	goto	l6104
 10452  00380E  5019               	movf	___awmod@divisor,w,c
 10453  003810  5E17               	subwf	___awmod@dividend,f,c
 10454  003812  501A               	movf	___awmod@divisor+1,w,c
 10455  003814  5A18               	subwfb	___awmod@dividend+1,f,c
 10456  003816                     l6104:
 10457  003816  90D8               	bcf	status,0,c
 10458  003818  321A               	rrcf	___awmod@divisor+1,f,c
 10459  00381A  3219               	rrcf	___awmod@divisor,f,c
 10460  00381C  2E1B               	decfsz	___awmod@counter,f,c
 10461  00381E  D7F1               	goto	l6100
 10462  003820                     l6108:
 10463  003820  501C               	movf	___awmod@sign,w,c
 10464  003822  B4D8               	btfsc	status,2,c
 10465  003824  D004               	goto	l6112
 10466  003826  6C17               	negf	___awmod@dividend,c
 10467  003828  1E18               	comf	___awmod@dividend+1,f,c
 10468  00382A  B0D8               	btfsc	status,0,c
 10469  00382C  2A18               	incf	___awmod@dividend+1,f,c
 10470  00382E                     l6112:
 10471  00382E  C017  F017         	movff	___awmod@dividend,?___awmod
 10472  003832  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
 10473  003836  0012               	return	
 10474  003838                     __end_of___awmod:
 10475                           	opt stack 0
 10476                           tblptru	equ	0xFF8
 10477                           tblptrh	equ	0xFF7
 10478                           tblptrl	equ	0xFF6
 10479                           tablat	equ	0xFF5
 10480                           prodh	equ	0xFF4
 10481                           prodl	equ	0xFF3
 10482                           intcon	equ	0xFF2
 10483                           intcon2	equ	0xFF1
 10484                           postinc0	equ	0xFEE
 10485                           wreg	equ	0xFE8
 10486                           postdec1	equ	0xFE5
 10487                           fsr1l	equ	0xFE1
 10488                           indf2	equ	0xFDF
 10489                           postinc2	equ	0xFDE
 10490                           postdec2	equ	0xFDD
 10491                           fsr2h	equ	0xFDA
 10492                           fsr2l	equ	0xFD9
 10493                           status	equ	0xFD8
 10494                           
 10495 ;; *************** function ___awdiv *****************
 10496 ;; Defined at:
 10497 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\awdiv.c"
 10498 ;; Parameters:    Size  Location     Type
 10499 ;;  dividend        2   28[COMRAM] int 
 10500 ;;  divisor         2   30[COMRAM] int 
 10501 ;; Auto vars:     Size  Location     Type
 10502 ;;  quotient        2   34[COMRAM] int 
 10503 ;;  sign            1   33[COMRAM] unsigned char 
 10504 ;;  counter         1   32[COMRAM] unsigned char 
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  2   28[COMRAM] int 
 10507 ;; Registers used:
 10508 ;;		wreg, status,2, status,0
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;Total ram usage:        8 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:    4
 10521 ;; This function calls:
 10522 ;;		Nothing
 10523 ;; This function is called by:
 10524 ;;		_fround
 10525 ;;		_scale
 10526 ;;		_sprintf
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529                           
 10530                           	psect	text36
 10531  0035DA                     __ptext36:
 10532                           	opt stack 0
 10533  0035DA                     ___awdiv:
 10534                           	opt stack 23
 10535                           
 10536                           ;incstack = 0
 10537  0035DA  0E00               	movlw	0
 10538  0035DC  6E22               	movwf	___awdiv@sign,c
 10539  0035DE  AE20               	btfss	___awdiv@divisor+1,7,c
 10540  0035E0  D006               	goto	l6044
 10541  0035E2  6C1F               	negf	___awdiv@divisor,c
 10542  0035E4  1E20               	comf	___awdiv@divisor+1,f,c
 10543  0035E6  B0D8               	btfsc	status,0,c
 10544  0035E8  2A20               	incf	___awdiv@divisor+1,f,c
 10545  0035EA  0E01               	movlw	1
 10546  0035EC  6E22               	movwf	___awdiv@sign,c
 10547  0035EE                     l6044:
 10548  0035EE  AE1E               	btfss	___awdiv@dividend+1,7,c
 10549  0035F0  D006               	goto	l6050
 10550  0035F2  6C1D               	negf	___awdiv@dividend,c
 10551  0035F4  1E1E               	comf	___awdiv@dividend+1,f,c
 10552  0035F6  B0D8               	btfsc	status,0,c
 10553  0035F8  2A1E               	incf	___awdiv@dividend+1,f,c
 10554  0035FA  0E01               	movlw	1
 10555  0035FC  1A22               	xorwf	___awdiv@sign,f,c
 10556  0035FE                     l6050:
 10557  0035FE  0E00               	movlw	0
 10558  003600  6E24               	movwf	___awdiv@quotient+1,c
 10559  003602  0E00               	movlw	0
 10560  003604  6E23               	movwf	___awdiv@quotient,c
 10561  003606  501F               	movf	___awdiv@divisor,w,c
 10562  003608  1020               	iorwf	___awdiv@divisor+1,w,c
 10563  00360A  B4D8               	btfsc	status,2,c
 10564  00360C  D01C               	goto	l6072
 10565  00360E  0E01               	movlw	1
 10566  003610  6E21               	movwf	___awdiv@counter,c
 10567  003612  D004               	goto	l6058
 10568  003614                     l6056:
 10569  003614  90D8               	bcf	status,0,c
 10570  003616  361F               	rlcf	___awdiv@divisor,f,c
 10571  003618  3620               	rlcf	___awdiv@divisor+1,f,c
 10572  00361A  2A21               	incf	___awdiv@counter,f,c
 10573  00361C                     l6058:
 10574  00361C  AE20               	btfss	___awdiv@divisor+1,7,c
 10575  00361E  D7FA               	goto	l6056
 10576  003620                     l6060:
 10577  003620  90D8               	bcf	status,0,c
 10578  003622  3623               	rlcf	___awdiv@quotient,f,c
 10579  003624  3624               	rlcf	___awdiv@quotient+1,f,c
 10580  003626  501F               	movf	___awdiv@divisor,w,c
 10581  003628  5C1D               	subwf	___awdiv@dividend,w,c
 10582  00362A  5020               	movf	___awdiv@divisor+1,w,c
 10583  00362C  581E               	subwfb	___awdiv@dividend+1,w,c
 10584  00362E  A0D8               	btfss	status,0,c
 10585  003630  D005               	goto	l6068
 10586  003632  501F               	movf	___awdiv@divisor,w,c
 10587  003634  5E1D               	subwf	___awdiv@dividend,f,c
 10588  003636  5020               	movf	___awdiv@divisor+1,w,c
 10589  003638  5A1E               	subwfb	___awdiv@dividend+1,f,c
 10590  00363A  8023               	bsf	___awdiv@quotient,0,c
 10591  00363C                     l6068:
 10592  00363C  90D8               	bcf	status,0,c
 10593  00363E  3220               	rrcf	___awdiv@divisor+1,f,c
 10594  003640  321F               	rrcf	___awdiv@divisor,f,c
 10595  003642  2E21               	decfsz	___awdiv@counter,f,c
 10596  003644  D7ED               	goto	l6060
 10597  003646                     l6072:
 10598  003646  5022               	movf	___awdiv@sign,w,c
 10599  003648  B4D8               	btfsc	status,2,c
 10600  00364A  D004               	goto	l6076
 10601  00364C  6C23               	negf	___awdiv@quotient,c
 10602  00364E  1E24               	comf	___awdiv@quotient+1,f,c
 10603  003650  B0D8               	btfsc	status,0,c
 10604  003652  2A24               	incf	___awdiv@quotient+1,f,c
 10605  003654                     l6076:
 10606  003654  C023  F01D         	movff	___awdiv@quotient,?___awdiv
 10607  003658  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
 10608  00365C  0012               	return	
 10609  00365E                     __end_of___awdiv:
 10610                           	opt stack 0
 10611                           tblptru	equ	0xFF8
 10612                           tblptrh	equ	0xFF7
 10613                           tblptrl	equ	0xFF6
 10614                           tablat	equ	0xFF5
 10615                           prodh	equ	0xFF4
 10616                           prodl	equ	0xFF3
 10617                           intcon	equ	0xFF2
 10618                           intcon2	equ	0xFF1
 10619                           postinc0	equ	0xFEE
 10620                           wreg	equ	0xFE8
 10621                           postdec1	equ	0xFE5
 10622                           fsr1l	equ	0xFE1
 10623                           indf2	equ	0xFDF
 10624                           postinc2	equ	0xFDE
 10625                           postdec2	equ	0xFDD
 10626                           fsr2h	equ	0xFDA
 10627                           fsr2l	equ	0xFD9
 10628                           status	equ	0xFD8
 10629                           
 10630 ;; *************** function __tdiv_to_l_ *****************
 10631 ;; Defined at:
 10632 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdivl.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  f1              3   22[COMRAM] float 
 10635 ;;  f2              3   25[COMRAM] float 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;  quot            4   31[COMRAM] unsigned long 
 10638 ;;  exp1            1   36[COMRAM] unsigned char 
 10639 ;;  cntr            1   35[COMRAM] unsigned char 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  4   22[COMRAM] unsigned long 
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10649 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10652 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10653 ;;Total ram usage:       15 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    4
 10656 ;; This function calls:
 10657 ;;		Nothing
 10658 ;; This function is called by:
 10659 ;;		_sprintf
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text37
 10664  002A38                     __ptext37:
 10665                           	opt stack 0
 10666  002A38                     __tdiv_to_l_:
 10667                           	opt stack 24
 10668                           
 10669                           ;incstack = 0
 10670  002A38  C019  F01D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 10671  002A3C  6A1E               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10672  002A3E  6A1F               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10673  002A40  3418               	rlcf	__tdiv_to_l_@f1+1,w,c
 10674  002A42  361D               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10675  002A44  E301               	bnc	u5971
 10676  002A46  801E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10677  002A48                     u5971:
 10678  002A48  501D               	movf	??__tdiv_to_l_,w,c
 10679  002A4A  6E25               	movwf	__tdiv_to_l_@exp1,c
 10680  002A4C  5025               	movf	__tdiv_to_l_@exp1,w,c
 10681  002A4E  A4D8               	btfss	status,2,c
 10682  002A50  D009               	goto	l6194
 10683  002A52  0E00               	movlw	0
 10684  002A54  6E17               	movwf	?__tdiv_to_l_,c
 10685  002A56  0E00               	movlw	0
 10686  002A58  6E18               	movwf	?__tdiv_to_l_+1,c
 10687  002A5A  0E00               	movlw	0
 10688  002A5C  6E19               	movwf	?__tdiv_to_l_+2,c
 10689  002A5E  0E00               	movlw	0
 10690  002A60  6E1A               	movwf	?__tdiv_to_l_+3,c
 10691  002A62  0012               	return	
 10692  002A64                     l6194:
 10693  002A64  C01C  F01D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 10694  002A68  6A1E               	clrf	(??__tdiv_to_l_+1)& (0+255),c
 10695  002A6A  6A1F               	clrf	(??__tdiv_to_l_+2)& (0+255),c
 10696  002A6C  341B               	rlcf	__tdiv_to_l_@f2+1,w,c
 10697  002A6E  361D               	rlcf	??__tdiv_to_l_& (0+255),f,c
 10698  002A70  E301               	bnc	u5991
 10699  002A72  801E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
 10700  002A74                     u5991:
 10701  002A74  501D               	movf	??__tdiv_to_l_,w,c
 10702  002A76  6E24               	movwf	__tdiv_to_l_@cntr,c
 10703  002A78  5024               	movf	__tdiv_to_l_@cntr,w,c
 10704  002A7A  A4D8               	btfss	status,2,c
 10705  002A7C  D009               	goto	l6200
 10706  002A7E  0E00               	movlw	0
 10707  002A80  6E17               	movwf	?__tdiv_to_l_,c
 10708  002A82  0E00               	movlw	0
 10709  002A84  6E18               	movwf	?__tdiv_to_l_+1,c
 10710  002A86  0E00               	movlw	0
 10711  002A88  6E19               	movwf	?__tdiv_to_l_+2,c
 10712  002A8A  0E00               	movlw	0
 10713  002A8C  6E1A               	movwf	?__tdiv_to_l_+3,c
 10714  002A8E  0012               	return	
 10715  002A90                     l6200:
 10716  002A90  8E18               	bsf	__tdiv_to_l_@f1+1,7,c
 10717  002A92  0EFF               	movlw	255
 10718  002A94  1617               	andwf	__tdiv_to_l_@f1,f,c
 10719  002A96  0EFF               	movlw	255
 10720  002A98  1618               	andwf	__tdiv_to_l_@f1+1,f,c
 10721  002A9A  0E00               	movlw	0
 10722  002A9C  1619               	andwf	__tdiv_to_l_@f1+2,f,c
 10723  002A9E  8E1B               	bsf	__tdiv_to_l_@f2+1,7,c
 10724  002AA0  0EFF               	movlw	255
 10725  002AA2  161A               	andwf	__tdiv_to_l_@f2,f,c
 10726  002AA4  0EFF               	movlw	255
 10727  002AA6  161B               	andwf	__tdiv_to_l_@f2+1,f,c
 10728  002AA8  0E00               	movlw	0
 10729  002AAA  161C               	andwf	__tdiv_to_l_@f2+2,f,c
 10730  002AAC  0E00               	movlw	0
 10731  002AAE  6E20               	movwf	__tdiv_to_l_@quot,c
 10732  002AB0  0E00               	movlw	0
 10733  002AB2  6E21               	movwf	__tdiv_to_l_@quot+1,c
 10734  002AB4  0E00               	movlw	0
 10735  002AB6  6E22               	movwf	__tdiv_to_l_@quot+2,c
 10736  002AB8  0E00               	movlw	0
 10737  002ABA  6E23               	movwf	__tdiv_to_l_@quot+3,c
 10738  002ABC  0E7F               	movlw	127
 10739  002ABE  5E25               	subwf	__tdiv_to_l_@exp1,f,c
 10740  002AC0  5024               	movf	__tdiv_to_l_@cntr,w,c
 10741  002AC2  0F98               	addlw	152
 10742  002AC4  5E25               	subwf	__tdiv_to_l_@exp1,f,c
 10743  002AC6  0E18               	movlw	24
 10744  002AC8  6E24               	movwf	__tdiv_to_l_@cntr,c
 10745  002ACA                     l1090:
 10746  002ACA  90D8               	bcf	status,0,c
 10747  002ACC  3620               	rlcf	__tdiv_to_l_@quot,f,c
 10748  002ACE  3621               	rlcf	__tdiv_to_l_@quot+1,f,c
 10749  002AD0  3622               	rlcf	__tdiv_to_l_@quot+2,f,c
 10750  002AD2  3623               	rlcf	__tdiv_to_l_@quot+3,f,c
 10751  002AD4  501A               	movf	__tdiv_to_l_@f2,w,c
 10752  002AD6  5C17               	subwf	__tdiv_to_l_@f1,w,c
 10753  002AD8  501B               	movf	__tdiv_to_l_@f2+1,w,c
 10754  002ADA  5818               	subwfb	__tdiv_to_l_@f1+1,w,c
 10755  002ADC  501C               	movf	__tdiv_to_l_@f2+2,w,c
 10756  002ADE  5819               	subwfb	__tdiv_to_l_@f1+2,w,c
 10757  002AE0  A0D8               	btfss	status,0,c
 10758  002AE2  D007               	goto	l1091
 10759  002AE4  501A               	movf	__tdiv_to_l_@f2,w,c
 10760  002AE6  5E17               	subwf	__tdiv_to_l_@f1,f,c
 10761  002AE8  501B               	movf	__tdiv_to_l_@f2+1,w,c
 10762  002AEA  5A18               	subwfb	__tdiv_to_l_@f1+1,f,c
 10763  002AEC  501C               	movf	__tdiv_to_l_@f2+2,w,c
 10764  002AEE  5A19               	subwfb	__tdiv_to_l_@f1+2,f,c
 10765  002AF0  8020               	bsf	__tdiv_to_l_@quot,0,c
 10766  002AF2                     l1091:
 10767  002AF2  90D8               	bcf	status,0,c
 10768  002AF4  3617               	rlcf	__tdiv_to_l_@f1,f,c
 10769  002AF6  3618               	rlcf	__tdiv_to_l_@f1+1,f,c
 10770  002AF8  3619               	rlcf	__tdiv_to_l_@f1+2,f,c
 10771  002AFA  2E24               	decfsz	__tdiv_to_l_@cntr,f,c
 10772  002AFC  D7E6               	goto	l1090
 10773  002AFE  AE25               	btfss	__tdiv_to_l_@exp1,7,c
 10774  002B00  D016               	goto	l6234
 10775  002B02  5025               	movf	__tdiv_to_l_@exp1,w,c
 10776  002B04  0A80               	xorlw	128
 10777  002B06  0F97               	addlw	151
 10778  002B08  B0D8               	btfsc	status,0,c
 10779  002B0A  D009               	goto	l6230
 10780  002B0C  0E00               	movlw	0
 10781  002B0E  6E17               	movwf	?__tdiv_to_l_,c
 10782  002B10  0E00               	movlw	0
 10783  002B12  6E18               	movwf	?__tdiv_to_l_+1,c
 10784  002B14  0E00               	movlw	0
 10785  002B16  6E19               	movwf	?__tdiv_to_l_+2,c
 10786  002B18  0E00               	movlw	0
 10787  002B1A  6E1A               	movwf	?__tdiv_to_l_+3,c
 10788  002B1C  0012               	return	
 10789  002B1E                     l6230:
 10790  002B1E  90D8               	bcf	status,0,c
 10791  002B20  3223               	rrcf	__tdiv_to_l_@quot+3,f,c
 10792  002B22  3222               	rrcf	__tdiv_to_l_@quot+2,f,c
 10793  002B24  3221               	rrcf	__tdiv_to_l_@quot+1,f,c
 10794  002B26  3220               	rrcf	__tdiv_to_l_@quot,f,c
 10795  002B28  3E25               	incfsz	__tdiv_to_l_@exp1,f,c
 10796  002B2A  D7F9               	goto	l6230
 10797  002B2C  D015               	goto	l1097
 10798  002B2E                     l6234:
 10799  002B2E  0E17               	movlw	23
 10800  002B30  6425               	cpfsgt	__tdiv_to_l_@exp1,c
 10801  002B32  D00F               	goto	l6242
 10802  002B34  0E00               	movlw	0
 10803  002B36  6E17               	movwf	?__tdiv_to_l_,c
 10804  002B38  0E00               	movlw	0
 10805  002B3A  6E18               	movwf	?__tdiv_to_l_+1,c
 10806  002B3C  0E00               	movlw	0
 10807  002B3E  6E19               	movwf	?__tdiv_to_l_+2,c
 10808  002B40  0E00               	movlw	0
 10809  002B42  6E1A               	movwf	?__tdiv_to_l_+3,c
 10810  002B44  0012               	return	
 10811  002B46                     l6240:
 10812  002B46  90D8               	bcf	status,0,c
 10813  002B48  3620               	rlcf	__tdiv_to_l_@quot,f,c
 10814  002B4A  3621               	rlcf	__tdiv_to_l_@quot+1,f,c
 10815  002B4C  3622               	rlcf	__tdiv_to_l_@quot+2,f,c
 10816  002B4E  3623               	rlcf	__tdiv_to_l_@quot+3,f,c
 10817  002B50  0625               	decf	__tdiv_to_l_@exp1,f,c
 10818  002B52                     l6242:
 10819  002B52  5025               	movf	__tdiv_to_l_@exp1,w,c
 10820  002B54  A4D8               	btfss	status,2,c
 10821  002B56  D7F7               	goto	l6240
 10822  002B58                     l1097:
 10823  002B58  C020  F017         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 10824  002B5C  C021  F018         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 10825  002B60  C022  F019         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 10826  002B64  C023  F01A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 10827  002B68  0012               	return		;funcret
 10828  002B6A                     __end_of__tdiv_to_l_:
 10829                           	opt stack 0
 10830                           tblptru	equ	0xFF8
 10831                           tblptrh	equ	0xFF7
 10832                           tblptrl	equ	0xFF6
 10833                           tablat	equ	0xFF5
 10834                           prodh	equ	0xFF4
 10835                           prodl	equ	0xFF3
 10836                           intcon	equ	0xFF2
 10837                           intcon2	equ	0xFF1
 10838                           postinc0	equ	0xFEE
 10839                           wreg	equ	0xFE8
 10840                           postdec1	equ	0xFE5
 10841                           fsr1l	equ	0xFE1
 10842                           indf2	equ	0xFDF
 10843                           postinc2	equ	0xFDE
 10844                           postdec2	equ	0xFDD
 10845                           fsr2h	equ	0xFDA
 10846                           fsr2l	equ	0xFD9
 10847                           status	equ	0xFD8
 10848                           
 10849 ;; *************** function __div_to_l_ *****************
 10850 ;; Defined at:
 10851 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fldivl.c"
 10852 ;; Parameters:    Size  Location     Type
 10853 ;;  f1              3   22[COMRAM] unsigned long 
 10854 ;;  f2              3   25[COMRAM] unsigned long 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  quot            4   28[COMRAM] unsigned long 
 10857 ;;  exp1            1   33[COMRAM] unsigned char 
 10858 ;;  cntr            1   32[COMRAM] unsigned char 
 10859 ;; Return value:  Size  Location     Type
 10860 ;;                  4   22[COMRAM] unsigned long 
 10861 ;; Registers used:
 10862 ;;		wreg, status,2, status,0
 10863 ;; Tracked objects:
 10864 ;;		On entry : 0/0
 10865 ;;		On exit  : 0/0
 10866 ;;		Unchanged: 0/0
 10867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10868 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10869 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10871 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10872 ;;Total ram usage:       12 bytes
 10873 ;; Hardware stack levels used:    1
 10874 ;; Hardware stack levels required when called:    4
 10875 ;; This function calls:
 10876 ;;		Nothing
 10877 ;; This function is called by:
 10878 ;;		_sprintf
 10879 ;; This function uses a non-reentrant model
 10880 ;;
 10881                           
 10882                           	psect	text38
 10883  002B6A                     __ptext38:
 10884                           	opt stack 0
 10885  002B6A                     __div_to_l_:
 10886                           	opt stack 24
 10887                           
 10888                           ;incstack = 0
 10889  002B6A  3419               	rlcf	__div_to_l_@f1+2,w,c
 10890  002B6C  341A               	rlcf	__div_to_l_@f1+3,w,c
 10891  002B6E  6E22               	movwf	__div_to_l_@exp1,c
 10892  002B70  5022               	movf	__div_to_l_@exp1,w,c
 10893  002B72  A4D8               	btfss	status,2,c
 10894  002B74  D009               	goto	l6250
 10895  002B76  0E00               	movlw	0
 10896  002B78  6E17               	movwf	?__div_to_l_,c
 10897  002B7A  0E00               	movlw	0
 10898  002B7C  6E18               	movwf	?__div_to_l_+1,c
 10899  002B7E  0E00               	movlw	0
 10900  002B80  6E19               	movwf	?__div_to_l_+2,c
 10901  002B82  0E00               	movlw	0
 10902  002B84  6E1A               	movwf	?__div_to_l_+3,c
 10903  002B86  0012               	return	
 10904  002B88                     l6250:
 10905  002B88  341C               	rlcf	__div_to_l_@f2+2,w,c
 10906  002B8A  341D               	rlcf	__div_to_l_@f2+3,w,c
 10907  002B8C  6E21               	movwf	__div_to_l_@cntr,c
 10908  002B8E  5021               	movf	__div_to_l_@cntr,w,c
 10909  002B90  A4D8               	btfss	status,2,c
 10910  002B92  D009               	goto	l6256
 10911  002B94  0E00               	movlw	0
 10912  002B96  6E17               	movwf	?__div_to_l_,c
 10913  002B98  0E00               	movlw	0
 10914  002B9A  6E18               	movwf	?__div_to_l_+1,c
 10915  002B9C  0E00               	movlw	0
 10916  002B9E  6E19               	movwf	?__div_to_l_+2,c
 10917  002BA0  0E00               	movlw	0
 10918  002BA2  6E1A               	movwf	?__div_to_l_+3,c
 10919  002BA4  0012               	return	
 10920  002BA6                     l6256:
 10921  002BA6  8E19               	bsf	__div_to_l_@f1+2,7,c
 10922  002BA8  0EFF               	movlw	255
 10923  002BAA  1617               	andwf	__div_to_l_@f1,f,c
 10924  002BAC  0EFF               	movlw	255
 10925  002BAE  1618               	andwf	__div_to_l_@f1+1,f,c
 10926  002BB0  0EFF               	movlw	255
 10927  002BB2  1619               	andwf	__div_to_l_@f1+2,f,c
 10928  002BB4  0E00               	movlw	0
 10929  002BB6  161A               	andwf	__div_to_l_@f1+3,f,c
 10930  002BB8  8E1C               	bsf	__div_to_l_@f2+2,7,c
 10931  002BBA  0EFF               	movlw	255
 10932  002BBC  161A               	andwf	__div_to_l_@f2,f,c
 10933  002BBE  0EFF               	movlw	255
 10934  002BC0  161B               	andwf	__div_to_l_@f2+1,f,c
 10935  002BC2  0EFF               	movlw	255
 10936  002BC4  161C               	andwf	__div_to_l_@f2+2,f,c
 10937  002BC6  0E00               	movlw	0
 10938  002BC8  161D               	andwf	__div_to_l_@f2+3,f,c
 10939  002BCA  0E00               	movlw	0
 10940  002BCC  6E1D               	movwf	__div_to_l_@quot,c
 10941  002BCE  0E00               	movlw	0
 10942  002BD0  6E1E               	movwf	__div_to_l_@quot+1,c
 10943  002BD2  0E00               	movlw	0
 10944  002BD4  6E1F               	movwf	__div_to_l_@quot+2,c
 10945  002BD6  0E00               	movlw	0
 10946  002BD8  6E20               	movwf	__div_to_l_@quot+3,c
 10947  002BDA  0E7F               	movlw	127
 10948  002BDC  5E22               	subwf	__div_to_l_@exp1,f,c
 10949  002BDE  5021               	movf	__div_to_l_@cntr,w,c
 10950  002BE0  0FA0               	addlw	160
 10951  002BE2  5E22               	subwf	__div_to_l_@exp1,f,c
 10952  002BE4  0E20               	movlw	32
 10953  002BE6  6E21               	movwf	__div_to_l_@cntr,c
 10954  002BE8                     l6270:
 10955  002BE8  90D8               	bcf	status,0,c
 10956  002BEA  361D               	rlcf	__div_to_l_@quot,f,c
 10957  002BEC  361E               	rlcf	__div_to_l_@quot+1,f,c
 10958  002BEE  361F               	rlcf	__div_to_l_@quot+2,f,c
 10959  002BF0  3620               	rlcf	__div_to_l_@quot+3,f,c
 10960  002BF2  501A               	movf	__div_to_l_@f2,w,c
 10961  002BF4  5C17               	subwf	__div_to_l_@f1,w,c
 10962  002BF6  501B               	movf	__div_to_l_@f2+1,w,c
 10963  002BF8  5818               	subwfb	__div_to_l_@f1+1,w,c
 10964  002BFA  501C               	movf	__div_to_l_@f2+2,w,c
 10965  002BFC  5819               	subwfb	__div_to_l_@f1+2,w,c
 10966  002BFE  501D               	movf	__div_to_l_@f2+3,w,c
 10967  002C00  581A               	subwfb	__div_to_l_@f1+3,w,c
 10968  002C02  A0D8               	btfss	status,0,c
 10969  002C04  D009               	goto	l6278
 10970  002C06  501A               	movf	__div_to_l_@f2,w,c
 10971  002C08  5E17               	subwf	__div_to_l_@f1,f,c
 10972  002C0A  501B               	movf	__div_to_l_@f2+1,w,c
 10973  002C0C  5A18               	subwfb	__div_to_l_@f1+1,f,c
 10974  002C0E  501C               	movf	__div_to_l_@f2+2,w,c
 10975  002C10  5A19               	subwfb	__div_to_l_@f1+2,f,c
 10976  002C12  501D               	movf	__div_to_l_@f2+3,w,c
 10977  002C14  5A1A               	subwfb	__div_to_l_@f1+3,f,c
 10978  002C16  801D               	bsf	__div_to_l_@quot,0,c
 10979  002C18                     l6278:
 10980  002C18  90D8               	bcf	status,0,c
 10981  002C1A  3617               	rlcf	__div_to_l_@f1,f,c
 10982  002C1C  3618               	rlcf	__div_to_l_@f1+1,f,c
 10983  002C1E  3619               	rlcf	__div_to_l_@f1+2,f,c
 10984  002C20  361A               	rlcf	__div_to_l_@f1+3,f,c
 10985  002C22  2E21               	decfsz	__div_to_l_@cntr,f,c
 10986  002C24  D7E1               	goto	l6270
 10987  002C26  AE22               	btfss	__div_to_l_@exp1,7,c
 10988  002C28  D016               	goto	l6294
 10989  002C2A  5022               	movf	__div_to_l_@exp1,w,c
 10990  002C2C  0A80               	xorlw	128
 10991  002C2E  0F9F               	addlw	159
 10992  002C30  B0D8               	btfsc	status,0,c
 10993  002C32  D009               	goto	l6290
 10994  002C34  0E00               	movlw	0
 10995  002C36  6E17               	movwf	?__div_to_l_,c
 10996  002C38  0E00               	movlw	0
 10997  002C3A  6E18               	movwf	?__div_to_l_+1,c
 10998  002C3C  0E00               	movlw	0
 10999  002C3E  6E19               	movwf	?__div_to_l_+2,c
 11000  002C40  0E00               	movlw	0
 11001  002C42  6E1A               	movwf	?__div_to_l_+3,c
 11002  002C44  0012               	return	
 11003  002C46                     l6290:
 11004  002C46  90D8               	bcf	status,0,c
 11005  002C48  3220               	rrcf	__div_to_l_@quot+3,f,c
 11006  002C4A  321F               	rrcf	__div_to_l_@quot+2,f,c
 11007  002C4C  321E               	rrcf	__div_to_l_@quot+1,f,c
 11008  002C4E  321D               	rrcf	__div_to_l_@quot,f,c
 11009  002C50  3E22               	incfsz	__div_to_l_@exp1,f,c
 11010  002C52  D7F9               	goto	l6290
 11011  002C54  D015               	goto	l993
 11012  002C56                     l6294:
 11013  002C56  0E1F               	movlw	31
 11014  002C58  6422               	cpfsgt	__div_to_l_@exp1,c
 11015  002C5A  D00F               	goto	l6302
 11016  002C5C  0E00               	movlw	0
 11017  002C5E  6E17               	movwf	?__div_to_l_,c
 11018  002C60  0E00               	movlw	0
 11019  002C62  6E18               	movwf	?__div_to_l_+1,c
 11020  002C64  0E00               	movlw	0
 11021  002C66  6E19               	movwf	?__div_to_l_+2,c
 11022  002C68  0E00               	movlw	0
 11023  002C6A  6E1A               	movwf	?__div_to_l_+3,c
 11024  002C6C  0012               	return	
 11025  002C6E                     l6300:
 11026  002C6E  90D8               	bcf	status,0,c
 11027  002C70  361D               	rlcf	__div_to_l_@quot,f,c
 11028  002C72  361E               	rlcf	__div_to_l_@quot+1,f,c
 11029  002C74  361F               	rlcf	__div_to_l_@quot+2,f,c
 11030  002C76  3620               	rlcf	__div_to_l_@quot+3,f,c
 11031  002C78  0622               	decf	__div_to_l_@exp1,f,c
 11032  002C7A                     l6302:
 11033  002C7A  5022               	movf	__div_to_l_@exp1,w,c
 11034  002C7C  A4D8               	btfss	status,2,c
 11035  002C7E  D7F7               	goto	l6300
 11036  002C80                     l993:
 11037  002C80  C01D  F017         	movff	__div_to_l_@quot,?__div_to_l_
 11038  002C84  C01E  F018         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 11039  002C88  C01F  F019         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 11040  002C8C  C020  F01A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 11041  002C90  0012               	return		;funcret
 11042  002C92                     __end_of__div_to_l_:
 11043                           	opt stack 0
 11044                           tblptru	equ	0xFF8
 11045                           tblptrh	equ	0xFF7
 11046                           tblptrl	equ	0xFF6
 11047                           tablat	equ	0xFF5
 11048                           prodh	equ	0xFF4
 11049                           prodl	equ	0xFF3
 11050                           intcon	equ	0xFF2
 11051                           intcon2	equ	0xFF1
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postdec1	equ	0xFE5
 11055                           fsr1l	equ	0xFE1
 11056                           indf2	equ	0xFDF
 11057                           postinc2	equ	0xFDE
 11058                           postdec2	equ	0xFDD
 11059                           fsr2h	equ	0xFDA
 11060                           fsr2l	equ	0xFD9
 11061                           status	equ	0xFD8
 11062                           
 11063 ;; *************** function ___lltoft *****************
 11064 ;; Defined at:
 11065 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lltoft.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  c               4   24[BANK0 ] unsigned long 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  exp             1   80[COMRAM] unsigned char 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  3   24[BANK0 ] float 
 11072 ;; Registers used:
 11073 ;;		wreg, status,2, status,0, cstack
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11079 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;Total ram usage:        9 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    5
 11086 ;; This function calls:
 11087 ;;		___ftpack
 11088 ;; This function is called by:
 11089 ;;		_sprintf
 11090 ;; This function uses a non-reentrant model
 11091 ;;
 11092                           
 11093                           	psect	text39
 11094  0036E0                     __ptext39:
 11095                           	opt stack 0
 11096  0036E0                     ___lltoft:
 11097                           	opt stack 23
 11098                           
 11099                           ;incstack = 0
 11100  0036E0  0E8E               	movlw	142
 11101  0036E2  6E51               	movwf	___lltoft@exp,c
 11102  0036E4  D007               	goto	l6468
 11103  0036E6                     l6466:
 11104  0036E6  0100               	movlb	0	; () banked
 11105  0036E8  90D8               	bcf	status,0,c
 11106  0036EA  339B               	rrcf	(___lltoft@c+3)& (0+255),f,b
 11107  0036EC  339A               	rrcf	(___lltoft@c+2)& (0+255),f,b
 11108  0036EE  3399               	rrcf	(___lltoft@c+1)& (0+255),f,b
 11109  0036F0  3398               	rrcf	___lltoft@c& (0+255),f,b
 11110  0036F2  2A51               	incf	___lltoft@exp,f,c
 11111  0036F4                     l6468:
 11112  0036F4  0E00               	movlw	0
 11113  0036F6  0100               	movlb	0	; () banked
 11114  0036F8  1598               	andwf	___lltoft@c& (0+255),w,b
 11115  0036FA  0100               	movlb	0	; () banked
 11116  0036FC  6F9C               	movwf	??___lltoft& (0+255),b
 11117  0036FE  0E00               	movlw	0
 11118  003700  0100               	movlb	0	; () banked
 11119  003702  1599               	andwf	(___lltoft@c+1)& (0+255),w,b
 11120  003704  0100               	movlb	0	; () banked
 11121  003706  6F9D               	movwf	(??___lltoft+1)& (0+255),b
 11122  003708  0E00               	movlw	0
 11123  00370A  0100               	movlb	0	; () banked
 11124  00370C  159A               	andwf	(___lltoft@c+2)& (0+255),w,b
 11125  00370E  0100               	movlb	0	; () banked
 11126  003710  6F9E               	movwf	(??___lltoft+2)& (0+255),b
 11127  003712  0EFF               	movlw	255
 11128  003714  0100               	movlb	0	; () banked
 11129  003716  159B               	andwf	(___lltoft@c+3)& (0+255),w,b
 11130  003718  0100               	movlb	0	; () banked
 11131  00371A  6F9F               	movwf	(??___lltoft+3)& (0+255),b
 11132  00371C  0100               	movlb	0	; () banked
 11133  00371E  519C               	movf	??___lltoft& (0+255),w,b
 11134  003720  0100               	movlb	0	; () banked
 11135  003722  119D               	iorwf	(??___lltoft+1)& (0+255),w,b
 11136  003724  0100               	movlb	0	; () banked
 11137  003726  119E               	iorwf	(??___lltoft+2)& (0+255),w,b
 11138  003728  0100               	movlb	0	; () banked
 11139  00372A  119F               	iorwf	(??___lltoft+3)& (0+255),w,b
 11140  00372C  A4D8               	btfss	status,2,c
 11141  00372E  D7DB               	goto	l6466
 11142                           
 11143                           ; BSR set to: 0
 11144                           
 11145                           ; BSR set to: 0
 11146  003730  C098  F017         	movff	___lltoft@c,___ftpack@arg
 11147  003734  C099  F018         	movff	___lltoft@c+1,___ftpack@arg+1
 11148  003738  C09A  F019         	movff	___lltoft@c+2,___ftpack@arg+2
 11149  00373C  C051  F01A         	movff	___lltoft@exp,___ftpack@exp
 11150  003740  0E00               	movlw	0
 11151  003742  6E1B               	movwf	___ftpack@sign,c
 11152  003744  EC44  F01A         	call	___ftpack	;wreg free
 11153  003748  C017  F098         	movff	?___ftpack,?___lltoft
 11154  00374C  C018  F099         	movff	?___ftpack+1,?___lltoft+1
 11155  003750  C019  F09A         	movff	?___ftpack+2,?___lltoft+2
 11156  003754  0012               	return	
 11157  003756                     __end_of___lltoft:
 11158                           	opt stack 0
 11159                           tblptru	equ	0xFF8
 11160                           tblptrh	equ	0xFF7
 11161                           tblptrl	equ	0xFF6
 11162                           tablat	equ	0xFF5
 11163                           prodh	equ	0xFF4
 11164                           prodl	equ	0xFF3
 11165                           intcon	equ	0xFF2
 11166                           intcon2	equ	0xFF1
 11167                           postinc0	equ	0xFEE
 11168                           wreg	equ	0xFE8
 11169                           postdec1	equ	0xFE5
 11170                           fsr1l	equ	0xFE1
 11171                           indf2	equ	0xFDF
 11172                           postinc2	equ	0xFDE
 11173                           postdec2	equ	0xFDD
 11174                           fsr2h	equ	0xFDA
 11175                           fsr2l	equ	0xFD9
 11176                           status	equ	0xFD8
 11177                           
 11178 ;; *************** function ___llmod *****************
 11179 ;; Defined at:
 11180 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;  dividend        4   35[COMRAM] unsigned long 
 11183 ;;  divisor         4   39[COMRAM] unsigned long 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;  counter         1   43[COMRAM] unsigned char 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  4   35[COMRAM] unsigned long 
 11188 ;; Registers used:
 11189 ;;		wreg, status,2, status,0
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11196 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11198 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11199 ;;Total ram usage:        9 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; Hardware stack levels required when called:    4
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_sprintf
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text40
 11210  003838                     __ptext40:
 11211                           	opt stack 0
 11212  003838                     ___llmod:
 11213                           	opt stack 24
 11214                           
 11215                           ;incstack = 0
 11216  003838  5028               	movf	___llmod@divisor,w,c
 11217  00383A  1029               	iorwf	___llmod@divisor+1,w,c
 11218  00383C  102A               	iorwf	___llmod@divisor+2,w,c
 11219  00383E  102B               	iorwf	___llmod@divisor+3,w,c
 11220  003840  B4D8               	btfsc	status,2,c
 11221  003842  D024               	goto	l1182
 11222  003844  0E01               	movlw	1
 11223  003846  6E2C               	movwf	___llmod@counter,c
 11224  003848  D006               	goto	l6454
 11225  00384A                     l6452:
 11226  00384A  90D8               	bcf	status,0,c
 11227  00384C  3628               	rlcf	___llmod@divisor,f,c
 11228  00384E  3629               	rlcf	___llmod@divisor+1,f,c
 11229  003850  362A               	rlcf	___llmod@divisor+2,f,c
 11230  003852  362B               	rlcf	___llmod@divisor+3,f,c
 11231  003854  2A2C               	incf	___llmod@counter,f,c
 11232  003856                     l6454:
 11233  003856  AE2B               	btfss	___llmod@divisor+3,7,c
 11234  003858  D7F8               	goto	l6452
 11235  00385A                     l6456:
 11236  00385A  5028               	movf	___llmod@divisor,w,c
 11237  00385C  5C24               	subwf	___llmod@dividend,w,c
 11238  00385E  5029               	movf	___llmod@divisor+1,w,c
 11239  003860  5825               	subwfb	___llmod@dividend+1,w,c
 11240  003862  502A               	movf	___llmod@divisor+2,w,c
 11241  003864  5826               	subwfb	___llmod@dividend+2,w,c
 11242  003866  502B               	movf	___llmod@divisor+3,w,c
 11243  003868  5827               	subwfb	___llmod@dividend+3,w,c
 11244  00386A  A0D8               	btfss	status,0,c
 11245  00386C  D008               	goto	l6460
 11246  00386E  5028               	movf	___llmod@divisor,w,c
 11247  003870  5E24               	subwf	___llmod@dividend,f,c
 11248  003872  5029               	movf	___llmod@divisor+1,w,c
 11249  003874  5A25               	subwfb	___llmod@dividend+1,f,c
 11250  003876  502A               	movf	___llmod@divisor+2,w,c
 11251  003878  5A26               	subwfb	___llmod@dividend+2,f,c
 11252  00387A  502B               	movf	___llmod@divisor+3,w,c
 11253  00387C  5A27               	subwfb	___llmod@dividend+3,f,c
 11254  00387E                     l6460:
 11255  00387E  90D8               	bcf	status,0,c
 11256  003880  322B               	rrcf	___llmod@divisor+3,f,c
 11257  003882  322A               	rrcf	___llmod@divisor+2,f,c
 11258  003884  3229               	rrcf	___llmod@divisor+1,f,c
 11259  003886  3228               	rrcf	___llmod@divisor,f,c
 11260  003888  2E2C               	decfsz	___llmod@counter,f,c
 11261  00388A  D7E7               	goto	l6456
 11262  00388C                     l1182:
 11263  00388C  C024  F024         	movff	___llmod@dividend,?___llmod
 11264  003890  C025  F025         	movff	___llmod@dividend+1,?___llmod+1
 11265  003894  C026  F026         	movff	___llmod@dividend+2,?___llmod+2
 11266  003898  C027  F027         	movff	___llmod@dividend+3,?___llmod+3
 11267  00389C  0012               	return		;funcret
 11268  00389E                     __end_of___llmod:
 11269                           	opt stack 0
 11270                           tblptru	equ	0xFF8
 11271                           tblptrh	equ	0xFF7
 11272                           tblptrl	equ	0xFF6
 11273                           tablat	equ	0xFF5
 11274                           prodh	equ	0xFF4
 11275                           prodl	equ	0xFF3
 11276                           intcon	equ	0xFF2
 11277                           intcon2	equ	0xFF1
 11278                           postinc0	equ	0xFEE
 11279                           wreg	equ	0xFE8
 11280                           postdec1	equ	0xFE5
 11281                           fsr1l	equ	0xFE1
 11282                           indf2	equ	0xFDF
 11283                           postinc2	equ	0xFDE
 11284                           postdec2	equ	0xFDD
 11285                           fsr2h	equ	0xFDA
 11286                           fsr2l	equ	0xFD9
 11287                           status	equ	0xFD8
 11288                           
 11289 ;; *************** function ___lldiv *****************
 11290 ;; Defined at:
 11291 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;  dividend        4   22[COMRAM] unsigned long 
 11294 ;;  divisor         4   26[COMRAM] unsigned long 
 11295 ;; Auto vars:     Size  Location     Type
 11296 ;;  quotient        4   30[COMRAM] unsigned long 
 11297 ;;  counter         1   34[COMRAM] unsigned char 
 11298 ;; Return value:  Size  Location     Type
 11299 ;;                  4   22[COMRAM] unsigned long 
 11300 ;; Registers used:
 11301 ;;		wreg, status,2, status,0
 11302 ;; Tracked objects:
 11303 ;;		On entry : 0/0
 11304 ;;		On exit  : 0/0
 11305 ;;		Unchanged: 0/0
 11306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11307 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11308 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11310 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11311 ;;Total ram usage:       13 bytes
 11312 ;; Hardware stack levels used:    1
 11313 ;; Hardware stack levels required when called:    4
 11314 ;; This function calls:
 11315 ;;		Nothing
 11316 ;; This function is called by:
 11317 ;;		_sprintf
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text41
 11322  00365E                     __ptext41:
 11323                           	opt stack 0
 11324  00365E                     ___lldiv:
 11325                           	opt stack 24
 11326                           
 11327                           ;incstack = 0
 11328  00365E  0E00               	movlw	0
 11329  003660  6E1F               	movwf	___lldiv@quotient,c
 11330  003662  0E00               	movlw	0
 11331  003664  6E20               	movwf	___lldiv@quotient+1,c
 11332  003666  0E00               	movlw	0
 11333  003668  6E21               	movwf	___lldiv@quotient+2,c
 11334  00366A  0E00               	movlw	0
 11335  00366C  6E22               	movwf	___lldiv@quotient+3,c
 11336  00366E  501B               	movf	___lldiv@divisor,w,c
 11337  003670  101C               	iorwf	___lldiv@divisor+1,w,c
 11338  003672  101D               	iorwf	___lldiv@divisor+2,w,c
 11339  003674  101E               	iorwf	___lldiv@divisor+3,w,c
 11340  003676  B4D8               	btfsc	status,2,c
 11341  003678  D02A               	goto	l1172
 11342  00367A  0E01               	movlw	1
 11343  00367C  6E23               	movwf	___lldiv@counter,c
 11344  00367E  D006               	goto	l6434
 11345  003680                     l6432:
 11346  003680  90D8               	bcf	status,0,c
 11347  003682  361B               	rlcf	___lldiv@divisor,f,c
 11348  003684  361C               	rlcf	___lldiv@divisor+1,f,c
 11349  003686  361D               	rlcf	___lldiv@divisor+2,f,c
 11350  003688  361E               	rlcf	___lldiv@divisor+3,f,c
 11351  00368A  2A23               	incf	___lldiv@counter,f,c
 11352  00368C                     l6434:
 11353  00368C  AE1E               	btfss	___lldiv@divisor+3,7,c
 11354  00368E  D7F8               	goto	l6432
 11355  003690                     l6436:
 11356  003690  90D8               	bcf	status,0,c
 11357  003692  361F               	rlcf	___lldiv@quotient,f,c
 11358  003694  3620               	rlcf	___lldiv@quotient+1,f,c
 11359  003696  3621               	rlcf	___lldiv@quotient+2,f,c
 11360  003698  3622               	rlcf	___lldiv@quotient+3,f,c
 11361  00369A  501B               	movf	___lldiv@divisor,w,c
 11362  00369C  5C17               	subwf	___lldiv@dividend,w,c
 11363  00369E  501C               	movf	___lldiv@divisor+1,w,c
 11364  0036A0  5818               	subwfb	___lldiv@dividend+1,w,c
 11365  0036A2  501D               	movf	___lldiv@divisor+2,w,c
 11366  0036A4  5819               	subwfb	___lldiv@dividend+2,w,c
 11367  0036A6  501E               	movf	___lldiv@divisor+3,w,c
 11368  0036A8  581A               	subwfb	___lldiv@dividend+3,w,c
 11369  0036AA  A0D8               	btfss	status,0,c
 11370  0036AC  D009               	goto	l6444
 11371  0036AE  501B               	movf	___lldiv@divisor,w,c
 11372  0036B0  5E17               	subwf	___lldiv@dividend,f,c
 11373  0036B2  501C               	movf	___lldiv@divisor+1,w,c
 11374  0036B4  5A18               	subwfb	___lldiv@dividend+1,f,c
 11375  0036B6  501D               	movf	___lldiv@divisor+2,w,c
 11376  0036B8  5A19               	subwfb	___lldiv@dividend+2,f,c
 11377  0036BA  501E               	movf	___lldiv@divisor+3,w,c
 11378  0036BC  5A1A               	subwfb	___lldiv@dividend+3,f,c
 11379  0036BE  801F               	bsf	___lldiv@quotient,0,c
 11380  0036C0                     l6444:
 11381  0036C0  90D8               	bcf	status,0,c
 11382  0036C2  321E               	rrcf	___lldiv@divisor+3,f,c
 11383  0036C4  321D               	rrcf	___lldiv@divisor+2,f,c
 11384  0036C6  321C               	rrcf	___lldiv@divisor+1,f,c
 11385  0036C8  321B               	rrcf	___lldiv@divisor,f,c
 11386  0036CA  2E23               	decfsz	___lldiv@counter,f,c
 11387  0036CC  D7E1               	goto	l6436
 11388  0036CE                     l1172:
 11389  0036CE  C01F  F017         	movff	___lldiv@quotient,?___lldiv
 11390  0036D2  C020  F018         	movff	___lldiv@quotient+1,?___lldiv+1
 11391  0036D6  C021  F019         	movff	___lldiv@quotient+2,?___lldiv+2
 11392  0036DA  C022  F01A         	movff	___lldiv@quotient+3,?___lldiv+3
 11393  0036DE  0012               	return		;funcret
 11394  0036E0                     __end_of___lldiv:
 11395                           	opt stack 0
 11396                           tblptru	equ	0xFF8
 11397                           tblptrh	equ	0xFF7
 11398                           tblptrl	equ	0xFF6
 11399                           tablat	equ	0xFF5
 11400                           prodh	equ	0xFF4
 11401                           prodl	equ	0xFF3
 11402                           intcon	equ	0xFF2
 11403                           intcon2	equ	0xFF1
 11404                           postinc0	equ	0xFEE
 11405                           wreg	equ	0xFE8
 11406                           postdec1	equ	0xFE5
 11407                           fsr1l	equ	0xFE1
 11408                           indf2	equ	0xFDF
 11409                           postinc2	equ	0xFDE
 11410                           postdec2	equ	0xFDD
 11411                           fsr2h	equ	0xFDA
 11412                           fsr2l	equ	0xFD9
 11413                           status	equ	0xFD8
 11414                           
 11415 ;; *************** function ___fttol *****************
 11416 ;; Defined at:
 11417 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\fttol.c"
 11418 ;; Parameters:    Size  Location     Type
 11419 ;;  f1              3    9[BANK0 ] float 
 11420 ;; Auto vars:     Size  Location     Type
 11421 ;;  lval            4   19[BANK0 ] unsigned long 
 11422 ;;  exp1            1   23[BANK0 ] unsigned char 
 11423 ;;  sign1           1   18[BANK0 ] unsigned char 
 11424 ;; Return value:  Size  Location     Type
 11425 ;;                  4    9[BANK0 ] long 
 11426 ;; Registers used:
 11427 ;;		wreg, status,2, status,0
 11428 ;; Tracked objects:
 11429 ;;		On entry : 0/0
 11430 ;;		On exit  : 0/0
 11431 ;;		Unchanged: 0/0
 11432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11436 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11437 ;;Total ram usage:       15 bytes
 11438 ;; Hardware stack levels used:    1
 11439 ;; Hardware stack levels required when called:    4
 11440 ;; This function calls:
 11441 ;;		Nothing
 11442 ;; This function is called by:
 11443 ;;		_default_display
 11444 ;;		_current_auto_limit_set_display
 11445 ;;		_sprintf
 11446 ;; This function uses a non-reentrant model
 11447 ;;
 11448                           
 11449                           	psect	text42
 11450  0028F4                     __ptext42:
 11451                           	opt stack 0
 11452  0028F4                     ___fttol:
 11453                           	opt stack 24
 11454                           
 11455                           ;incstack = 0
 11456  0028F4  C08B  F08D         	movff	___fttol@f1+2,??___fttol
 11457  0028F8  0100               	movlb	0	; () banked
 11458  0028FA  6B8E               	clrf	(??___fttol+1)& (0+255),b
 11459  0028FC  6B8F               	clrf	(??___fttol+2)& (0+255),b
 11460  0028FE  0100               	movlb	0	; () banked
 11461  002900  358A               	rlcf	(___fttol@f1+1)& (0+255),w,b
 11462  002902  0100               	movlb	0	; () banked
 11463  002904  378D               	rlcf	??___fttol& (0+255),f,b
 11464  002906  E301               	bnc	u6231
 11465  002908  818E               	bsf	(??___fttol+1)& (0+255),0,b
 11466  00290A                     u6231:
 11467  00290A  0100               	movlb	0	; () banked
 11468  00290C  518D               	movf	??___fttol& (0+255),w,b
 11469  00290E  0100               	movlb	0	; () banked
 11470  002910  6F97               	movwf	___fttol@exp1& (0+255),b
 11471  002912  0100               	movlb	0	; () banked
 11472  002914  5197               	movf	___fttol@exp1& (0+255),w,b
 11473  002916  A4D8               	btfss	status,2,c
 11474  002918  D00A               	goto	l6386
 11475                           
 11476                           ; BSR set to: 0
 11477  00291A  0E00               	movlw	0
 11478  00291C  0100               	movlb	0	; () banked
 11479  00291E  6F89               	movwf	?___fttol& (0+255),b
 11480  002920  0E00               	movlw	0
 11481  002922  6F8A               	movwf	(?___fttol+1)& (0+255),b
 11482  002924  0E00               	movlw	0
 11483  002926  6F8B               	movwf	(?___fttol+2)& (0+255),b
 11484  002928  0E00               	movlw	0
 11485  00292A  6F8C               	movwf	(?___fttol+3)& (0+255),b
 11486                           
 11487                           ; BSR set to: 0
 11488  00292C  0012               	return	
 11489  00292E                     l6386:
 11490                           
 11491                           ; BSR set to: 0
 11492  00292E  0E17               	movlw	23
 11493  002930  0100               	movlb	0	; () banked
 11494  002932  6F8D               	movwf	??___fttol& (0+255),b
 11495  002934  C089  F08E         	movff	___fttol@f1,??___fttol+1
 11496  002938  C08A  F08F         	movff	___fttol@f1+1,??___fttol+2
 11497  00293C  C08B  F090         	movff	___fttol@f1+2,??___fttol+3
 11498  002940  0100               	movlb	0	; () banked
 11499  002942  298D               	incf	??___fttol& (0+255),w,b
 11500  002944  0100               	movlb	0	; () banked
 11501  002946  6F91               	movwf	(??___fttol+4)& (0+255),b
 11502  002948  D005               	goto	u6250
 11503  00294A                     u6255:
 11504  00294A  0100               	movlb	0	; () banked
 11505  00294C  90D8               	bcf	status,0,c
 11506  00294E  3390               	rrcf	(??___fttol+3)& (0+255),f,b
 11507  002950  338F               	rrcf	(??___fttol+2)& (0+255),f,b
 11508  002952  338E               	rrcf	(??___fttol+1)& (0+255),f,b
 11509  002954                     u6250:
 11510  002954  0100               	movlb	0	; () banked
 11511  002956  2F91               	decfsz	(??___fttol+4)& (0+255),f,b
 11512  002958  D7F8               	goto	u6255
 11513  00295A  0100               	movlb	0	; () banked
 11514  00295C  518E               	movf	(??___fttol+1)& (0+255),w,b
 11515  00295E  0100               	movlb	0	; () banked
 11516  002960  6F92               	movwf	___fttol@sign1& (0+255),b
 11517                           
 11518                           ; BSR set to: 0
 11519  002962  0100               	movlb	0	; () banked
 11520  002964  8F8A               	bsf	(___fttol@f1+1)& (0+255),7,b
 11521                           
 11522                           ; BSR set to: 0
 11523  002966  0EFF               	movlw	255
 11524  002968  0100               	movlb	0	; () banked
 11525  00296A  1789               	andwf	___fttol@f1& (0+255),f,b
 11526  00296C  0EFF               	movlw	255
 11527  00296E  0100               	movlb	0	; () banked
 11528  002970  178A               	andwf	(___fttol@f1+1)& (0+255),f,b
 11529  002972  0E00               	movlw	0
 11530  002974  0100               	movlb	0	; () banked
 11531  002976  178B               	andwf	(___fttol@f1+2)& (0+255),f,b
 11532                           
 11533                           ; BSR set to: 0
 11534  002978  0100               	movlb	0	; () banked
 11535  00297A  5189               	movf	___fttol@f1& (0+255),w,b
 11536  00297C  0100               	movlb	0	; () banked
 11537  00297E  6F93               	movwf	___fttol@lval& (0+255),b
 11538  002980  0100               	movlb	0	; () banked
 11539  002982  518A               	movf	(___fttol@f1+1)& (0+255),w,b
 11540  002984  0100               	movlb	0	; () banked
 11541  002986  6F94               	movwf	(___fttol@lval+1)& (0+255),b
 11542  002988  0100               	movlb	0	; () banked
 11543  00298A  518B               	movf	(___fttol@f1+2)& (0+255),w,b
 11544  00298C  0100               	movlb	0	; () banked
 11545  00298E  6F95               	movwf	(___fttol@lval+2)& (0+255),b
 11546  002990  0100               	movlb	0	; () banked
 11547  002992  6B96               	clrf	(___fttol@lval+3)& (0+255),b
 11548                           
 11549                           ; BSR set to: 0
 11550  002994  0E8E               	movlw	142
 11551  002996  0100               	movlb	0	; () banked
 11552  002998  5F97               	subwf	___fttol@exp1& (0+255),f,b
 11553                           
 11554                           ; BSR set to: 0
 11555  00299A  0100               	movlb	0	; () banked
 11556  00299C  AF97               	btfss	___fttol@exp1& (0+255),7,b
 11557  00299E  D01A               	goto	l6408
 11558                           
 11559                           ; BSR set to: 0
 11560  0029A0  0100               	movlb	0	; () banked
 11561  0029A2  5197               	movf	___fttol@exp1& (0+255),w,b
 11562  0029A4  0A80               	xorlw	128
 11563  0029A6  0F8F               	addlw	143
 11564  0029A8  B0D8               	btfsc	status,0,c
 11565  0029AA  D00A               	goto	l6404
 11566                           
 11567                           ; BSR set to: 0
 11568  0029AC  0E00               	movlw	0
 11569  0029AE  0100               	movlb	0	; () banked
 11570  0029B0  6F89               	movwf	?___fttol& (0+255),b
 11571  0029B2  0E00               	movlw	0
 11572  0029B4  6F8A               	movwf	(?___fttol+1)& (0+255),b
 11573  0029B6  0E00               	movlw	0
 11574  0029B8  6F8B               	movwf	(?___fttol+2)& (0+255),b
 11575  0029BA  0E00               	movlw	0
 11576  0029BC  6F8C               	movwf	(?___fttol+3)& (0+255),b
 11577                           
 11578                           ; BSR set to: 0
 11579  0029BE  0012               	return	
 11580  0029C0                     l6404:
 11581                           
 11582                           ; BSR set to: 0
 11583  0029C0  0100               	movlb	0	; () banked
 11584  0029C2  90D8               	bcf	status,0,c
 11585  0029C4  3396               	rrcf	(___fttol@lval+3)& (0+255),f,b
 11586  0029C6  3395               	rrcf	(___fttol@lval+2)& (0+255),f,b
 11587  0029C8  3394               	rrcf	(___fttol@lval+1)& (0+255),f,b
 11588  0029CA  3393               	rrcf	___fttol@lval& (0+255),f,b
 11589                           
 11590                           ; BSR set to: 0
 11591  0029CC  0100               	movlb	0	; () banked
 11592  0029CE  3F97               	incfsz	___fttol@exp1& (0+255),f,b
 11593  0029D0  D7F7               	goto	l6404
 11594                           
 11595                           ; BSR set to: 0
 11596  0029D2  D01B               	goto	l6418
 11597  0029D4                     l6408:
 11598                           
 11599                           ; BSR set to: 0
 11600  0029D4  0E17               	movlw	23
 11601  0029D6  0100               	movlb	0	; () banked
 11602  0029D8  6597               	cpfsgt	___fttol@exp1& (0+255),b
 11603  0029DA  D012               	goto	l6416
 11604                           
 11605                           ; BSR set to: 0
 11606  0029DC  0E00               	movlw	0
 11607  0029DE  0100               	movlb	0	; () banked
 11608  0029E0  6F89               	movwf	?___fttol& (0+255),b
 11609  0029E2  0E00               	movlw	0
 11610  0029E4  6F8A               	movwf	(?___fttol+1)& (0+255),b
 11611  0029E6  0E00               	movlw	0
 11612  0029E8  6F8B               	movwf	(?___fttol+2)& (0+255),b
 11613  0029EA  0E00               	movlw	0
 11614  0029EC  6F8C               	movwf	(?___fttol+3)& (0+255),b
 11615                           
 11616                           ; BSR set to: 0
 11617  0029EE  0012               	return	
 11618  0029F0                     l6414:
 11619                           
 11620                           ; BSR set to: 0
 11621  0029F0  0100               	movlb	0	; () banked
 11622  0029F2  90D8               	bcf	status,0,c
 11623  0029F4  3793               	rlcf	___fttol@lval& (0+255),f,b
 11624  0029F6  3794               	rlcf	(___fttol@lval+1)& (0+255),f,b
 11625  0029F8  3795               	rlcf	(___fttol@lval+2)& (0+255),f,b
 11626  0029FA  3796               	rlcf	(___fttol@lval+3)& (0+255),f,b
 11627  0029FC  0100               	movlb	0	; () banked
 11628  0029FE  0797               	decf	___fttol@exp1& (0+255),f,b
 11629  002A00                     l6416:
 11630                           
 11631                           ; BSR set to: 0
 11632  002A00  0100               	movlb	0	; () banked
 11633  002A02  5197               	movf	___fttol@exp1& (0+255),w,b
 11634  002A04  0100               	movlb	0	; () banked
 11635  002A06  A4D8               	btfss	status,2,c
 11636  002A08  D7F3               	goto	l6414
 11637  002A0A                     l6418:
 11638                           
 11639                           ; BSR set to: 0
 11640  002A0A  0100               	movlb	0	; () banked
 11641  002A0C  5192               	movf	___fttol@sign1& (0+255),w,b
 11642  002A0E  0100               	movlb	0	; () banked
 11643  002A10  B4D8               	btfsc	status,2,c
 11644  002A12  D009               	goto	l6422
 11645                           
 11646                           ; BSR set to: 0
 11647  002A14  0100               	movlb	0	; () banked
 11648  002A16  1F96               	comf	(___fttol@lval+3)& (0+255),f,b
 11649  002A18  1F95               	comf	(___fttol@lval+2)& (0+255),f,b
 11650  002A1A  1F94               	comf	(___fttol@lval+1)& (0+255),f,b
 11651  002A1C  6D93               	negf	___fttol@lval& (0+255),b
 11652  002A1E  0E00               	movlw	0
 11653  002A20  2394               	addwfc	(___fttol@lval+1)& (0+255),f,b
 11654  002A22  2395               	addwfc	(___fttol@lval+2)& (0+255),f,b
 11655  002A24  2396               	addwfc	(___fttol@lval+3)& (0+255),f,b
 11656  002A26                     l6422:
 11657                           
 11658                           ; BSR set to: 0
 11659  002A26  C093  F089         	movff	___fttol@lval,?___fttol
 11660  002A2A  C094  F08A         	movff	___fttol@lval+1,?___fttol+1
 11661  002A2E  C095  F08B         	movff	___fttol@lval+2,?___fttol+2
 11662  002A32  C096  F08C         	movff	___fttol@lval+3,?___fttol+3
 11663  002A36  0012               	return	
 11664  002A38                     __end_of___fttol:
 11665                           	opt stack 0
 11666                           tblptru	equ	0xFF8
 11667                           tblptrh	equ	0xFF7
 11668                           tblptrl	equ	0xFF6
 11669                           tablat	equ	0xFF5
 11670                           prodh	equ	0xFF4
 11671                           prodl	equ	0xFF3
 11672                           intcon	equ	0xFF2
 11673                           intcon2	equ	0xFF1
 11674                           postinc0	equ	0xFEE
 11675                           wreg	equ	0xFE8
 11676                           postdec1	equ	0xFE5
 11677                           fsr1l	equ	0xFE1
 11678                           indf2	equ	0xFDF
 11679                           postinc2	equ	0xFDE
 11680                           postdec2	equ	0xFDD
 11681                           fsr2h	equ	0xFDA
 11682                           fsr2l	equ	0xFD9
 11683                           status	equ	0xFD8
 11684                           
 11685 ;; *************** function ___ftsub *****************
 11686 ;; Defined at:
 11687 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftsub.c"
 11688 ;; Parameters:    Size  Location     Type
 11689 ;;  f1              3   44[BANK0 ] float 
 11690 ;;  f2              3   47[BANK0 ] float 
 11691 ;; Auto vars:     Size  Location     Type
 11692 ;;		None
 11693 ;; Return value:  Size  Location     Type
 11694 ;;                  3   44[BANK0 ] float 
 11695 ;; Registers used:
 11696 ;;		wreg, status,2, status,0, cstack
 11697 ;; Tracked objects:
 11698 ;;		On entry : 0/0
 11699 ;;		On exit  : 0/0
 11700 ;;		Unchanged: 0/0
 11701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11702 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11705 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11706 ;;Total ram usage:        6 bytes
 11707 ;; Hardware stack levels used:    1
 11708 ;; Hardware stack levels required when called:    6
 11709 ;; This function calls:
 11710 ;;		___ftadd
 11711 ;; This function is called by:
 11712 ;;		_sprintf
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text43
 11717  003AB0                     __ptext43:
 11718                           	opt stack 0
 11719  003AB0                     ___ftsub:
 11720                           	opt stack 22
 11721                           
 11722                           ; BSR set to: 0
 11723                           ;incstack = 0
 11724  003AB0  0100               	movlb	0	; () banked
 11725  003AB2  51AF               	movf	___ftsub@f2& (0+255),w,b
 11726  003AB4  0100               	movlb	0	; () banked
 11727  003AB6  11B0               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 11728  003AB8  0100               	movlb	0	; () banked
 11729  003ABA  11B1               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 11730  003ABC  B4D8               	btfsc	status,2,c
 11731  003ABE  D009               	goto	l6354
 11732                           
 11733                           ; BSR set to: 0
 11734  003AC0  0E00               	movlw	0
 11735  003AC2  0100               	movlb	0	; () banked
 11736  003AC4  1BAF               	xorwf	___ftsub@f2& (0+255),f,b
 11737  003AC6  0E00               	movlw	0
 11738  003AC8  0100               	movlb	0	; () banked
 11739  003ACA  1BB0               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 11740  003ACC  0E80               	movlw	128
 11741  003ACE  0100               	movlb	0	; () banked
 11742  003AD0  1BB1               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 11743  003AD2                     l6354:
 11744                           
 11745                           ; BSR set to: 0
 11746  003AD2  C0AC  F0A0         	movff	___ftsub@f1,___ftadd@f1
 11747  003AD6  C0AD  F0A1         	movff	___ftsub@f1+1,___ftadd@f1+1
 11748  003ADA  C0AE  F0A2         	movff	___ftsub@f1+2,___ftadd@f1+2
 11749  003ADE  C0AF  F0A3         	movff	___ftsub@f2,___ftadd@f2
 11750  003AE2  C0B0  F0A4         	movff	___ftsub@f2+1,___ftadd@f2+1
 11751  003AE6  C0B1  F0A5         	movff	___ftsub@f2+2,___ftadd@f2+2
 11752  003AEA  EC70  F010         	call	___ftadd	;wreg free
 11753  003AEE  C0A0  F0AC         	movff	?___ftadd,?___ftsub
 11754  003AF2  C0A1  F0AD         	movff	?___ftadd+1,?___ftsub+1
 11755  003AF6  C0A2  F0AE         	movff	?___ftadd+2,?___ftsub+2
 11756  003AFA  0012               	return	
 11757  003AFC                     __end_of___ftsub:
 11758                           	opt stack 0
 11759                           tblptru	equ	0xFF8
 11760                           tblptrh	equ	0xFF7
 11761                           tblptrl	equ	0xFF6
 11762                           tablat	equ	0xFF5
 11763                           prodh	equ	0xFF4
 11764                           prodl	equ	0xFF3
 11765                           intcon	equ	0xFF2
 11766                           intcon2	equ	0xFF1
 11767                           postinc0	equ	0xFEE
 11768                           wreg	equ	0xFE8
 11769                           postdec1	equ	0xFE5
 11770                           fsr1l	equ	0xFE1
 11771                           indf2	equ	0xFDF
 11772                           postinc2	equ	0xFDE
 11773                           postdec2	equ	0xFDD
 11774                           fsr2h	equ	0xFDA
 11775                           fsr2l	equ	0xFD9
 11776                           status	equ	0xFD8
 11777                           
 11778 ;; *************** function ___ftadd *****************
 11779 ;; Defined at:
 11780 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftadd.c"
 11781 ;; Parameters:    Size  Location     Type
 11782 ;;  f1              3   32[BANK0 ] float 
 11783 ;;  f2              3   35[BANK0 ] float 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  exp1            1   43[BANK0 ] unsigned char 
 11786 ;;  exp2            1   42[BANK0 ] unsigned char 
 11787 ;;  sign            1   41[BANK0 ] unsigned char 
 11788 ;; Return value:  Size  Location     Type
 11789 ;;                  3   32[BANK0 ] float 
 11790 ;; Registers used:
 11791 ;;		wreg, status,2, status,0, cstack
 11792 ;; Tracked objects:
 11793 ;;		On entry : 0/0
 11794 ;;		On exit  : 0/0
 11795 ;;		Unchanged: 0/0
 11796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11797 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11798 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11799 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11800 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11801 ;;Total ram usage:       12 bytes
 11802 ;; Hardware stack levels used:    1
 11803 ;; Hardware stack levels required when called:    5
 11804 ;; This function calls:
 11805 ;;		___ftpack
 11806 ;; This function is called by:
 11807 ;;		_default_display
 11808 ;;		_current_auto_limit_set_display
 11809 ;;		_main
 11810 ;;		_sprintf
 11811 ;;		___ftsub
 11812 ;; This function uses a non-reentrant model
 11813 ;;
 11814                           
 11815                           	psect	text44
 11816  0020E0                     __ptext44:
 11817                           	opt stack 0
 11818  0020E0                     ___ftadd:
 11819                           	opt stack 22
 11820                           
 11821                           ;incstack = 0
 11822  0020E0  C0A2  F0A6         	movff	___ftadd@f1+2,??___ftadd
 11823  0020E4  0100               	movlb	0	; () banked
 11824  0020E6  6BA7               	clrf	(??___ftadd+1)& (0+255),b
 11825  0020E8  6BA8               	clrf	(??___ftadd+2)& (0+255),b
 11826  0020EA  0100               	movlb	0	; () banked
 11827  0020EC  35A1               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 11828  0020EE  0100               	movlb	0	; () banked
 11829  0020F0  37A6               	rlcf	??___ftadd& (0+255),f,b
 11830  0020F2  E301               	bnc	u5491
 11831  0020F4  81A7               	bsf	(??___ftadd+1)& (0+255),0,b
 11832  0020F6                     u5491:
 11833  0020F6  0100               	movlb	0	; () banked
 11834  0020F8  51A6               	movf	??___ftadd& (0+255),w,b
 11835  0020FA  0100               	movlb	0	; () banked
 11836  0020FC  6FAB               	movwf	___ftadd@exp1& (0+255),b
 11837  0020FE  C0A5  F0A6         	movff	___ftadd@f2+2,??___ftadd
 11838  002102  0100               	movlb	0	; () banked
 11839  002104  6BA7               	clrf	(??___ftadd+1)& (0+255),b
 11840  002106  6BA8               	clrf	(??___ftadd+2)& (0+255),b
 11841  002108  0100               	movlb	0	; () banked
 11842  00210A  35A4               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 11843  00210C  0100               	movlb	0	; () banked
 11844  00210E  37A6               	rlcf	??___ftadd& (0+255),f,b
 11845  002110  E301               	bnc	u5501
 11846  002112  81A7               	bsf	(??___ftadd+1)& (0+255),0,b
 11847  002114                     u5501:
 11848  002114  0100               	movlb	0	; () banked
 11849  002116  51A6               	movf	??___ftadd& (0+255),w,b
 11850  002118  0100               	movlb	0	; () banked
 11851  00211A  6FAA               	movwf	___ftadd@exp2& (0+255),b
 11852                           
 11853                           ; BSR set to: 0
 11854  00211C  0100               	movlb	0	; () banked
 11855  00211E  51AB               	movf	___ftadd@exp1& (0+255),w,b
 11856  002120  0100               	movlb	0	; () banked
 11857  002122  B4D8               	btfsc	status,2,c
 11858  002124  D011               	goto	l1048
 11859                           
 11860                           ; BSR set to: 0
 11861  002126  0100               	movlb	0	; () banked
 11862  002128  51AA               	movf	___ftadd@exp2& (0+255),w,b
 11863  00212A  0100               	movlb	0	; () banked
 11864  00212C  5DAB               	subwf	___ftadd@exp1& (0+255),w,b
 11865  00212E  B0D8               	btfsc	status,0,c
 11866  002130  D012               	goto	l5926
 11867                           
 11868                           ; BSR set to: 0
 11869  002132  0100               	movlb	0	; () banked
 11870  002134  51AB               	movf	___ftadd@exp1& (0+255),w,b
 11871  002136  0800               	sublw	0
 11872  002138  0100               	movlb	0	; () banked
 11873  00213A  25AA               	addwf	___ftadd@exp2& (0+255),w,b
 11874  00213C  0100               	movlb	0	; () banked
 11875  00213E  6FA6               	movwf	??___ftadd& (0+255),b
 11876  002140  0E18               	movlw	24
 11877  002142  0100               	movlb	0	; () banked
 11878  002144  65A6               	cpfsgt	??___ftadd& (0+255),b
 11879  002146  D007               	goto	l5926
 11880  002148                     l1048:
 11881                           
 11882                           ; BSR set to: 0
 11883  002148  C0A3  F0A0         	movff	___ftadd@f2,?___ftadd
 11884  00214C  C0A4  F0A1         	movff	___ftadd@f2+1,?___ftadd+1
 11885  002150  C0A5  F0A2         	movff	___ftadd@f2+2,?___ftadd+2
 11886  002154  0012               	return	
 11887  002156                     l5926:
 11888                           
 11889                           ; BSR set to: 0
 11890  002156  0100               	movlb	0	; () banked
 11891  002158  51AA               	movf	___ftadd@exp2& (0+255),w,b
 11892  00215A  0100               	movlb	0	; () banked
 11893  00215C  B4D8               	btfsc	status,2,c
 11894  00215E  D011               	goto	l1052
 11895                           
 11896                           ; BSR set to: 0
 11897  002160  0100               	movlb	0	; () banked
 11898  002162  51AB               	movf	___ftadd@exp1& (0+255),w,b
 11899  002164  0100               	movlb	0	; () banked
 11900  002166  5DAA               	subwf	___ftadd@exp2& (0+255),w,b
 11901  002168  B0D8               	btfsc	status,0,c
 11902  00216A  D012               	goto	l5932
 11903                           
 11904                           ; BSR set to: 0
 11905  00216C  0100               	movlb	0	; () banked
 11906  00216E  51AA               	movf	___ftadd@exp2& (0+255),w,b
 11907  002170  0800               	sublw	0
 11908  002172  0100               	movlb	0	; () banked
 11909  002174  25AB               	addwf	___ftadd@exp1& (0+255),w,b
 11910  002176  0100               	movlb	0	; () banked
 11911  002178  6FA6               	movwf	??___ftadd& (0+255),b
 11912  00217A  0E18               	movlw	24
 11913  00217C  0100               	movlb	0	; () banked
 11914  00217E  65A6               	cpfsgt	??___ftadd& (0+255),b
 11915  002180  D007               	goto	l5932
 11916  002182                     l1052:
 11917                           
 11918                           ; BSR set to: 0
 11919  002182  C0A0  F0A0         	movff	___ftadd@f1,?___ftadd
 11920  002186  C0A1  F0A1         	movff	___ftadd@f1+1,?___ftadd+1
 11921  00218A  C0A2  F0A2         	movff	___ftadd@f1+2,?___ftadd+2
 11922  00218E  0012               	return	
 11923  002190                     l5932:
 11924                           
 11925                           ; BSR set to: 0
 11926  002190  0E06               	movlw	6
 11927  002192  0100               	movlb	0	; () banked
 11928  002194  6FA9               	movwf	___ftadd@sign& (0+255),b
 11929                           
 11930                           ; BSR set to: 0
 11931  002196  0100               	movlb	0	; () banked
 11932  002198  AFA2               	btfss	(___ftadd@f1+2)& (0+255),7,b
 11933  00219A  D002               	goto	l5938
 11934                           
 11935                           ; BSR set to: 0
 11936  00219C  0100               	movlb	0	; () banked
 11937  00219E  8FA9               	bsf	___ftadd@sign& (0+255),7,b
 11938  0021A0                     l5938:
 11939                           
 11940                           ; BSR set to: 0
 11941  0021A0  0100               	movlb	0	; () banked
 11942  0021A2  AFA5               	btfss	(___ftadd@f2+2)& (0+255),7,b
 11943  0021A4  D002               	goto	l1054
 11944                           
 11945                           ; BSR set to: 0
 11946  0021A6  0100               	movlb	0	; () banked
 11947  0021A8  8DA9               	bsf	___ftadd@sign& (0+255),6,b
 11948  0021AA                     l1054:
 11949                           
 11950                           ; BSR set to: 0
 11951  0021AA  0100               	movlb	0	; () banked
 11952  0021AC  8FA1               	bsf	(___ftadd@f1+1)& (0+255),7,b
 11953                           
 11954                           ; BSR set to: 0
 11955  0021AE  0EFF               	movlw	255
 11956  0021B0  0100               	movlb	0	; () banked
 11957  0021B2  17A0               	andwf	___ftadd@f1& (0+255),f,b
 11958  0021B4  0EFF               	movlw	255
 11959  0021B6  0100               	movlb	0	; () banked
 11960  0021B8  17A1               	andwf	(___ftadd@f1+1)& (0+255),f,b
 11961  0021BA  0E00               	movlw	0
 11962  0021BC  0100               	movlb	0	; () banked
 11963  0021BE  17A2               	andwf	(___ftadd@f1+2)& (0+255),f,b
 11964  0021C0  0100               	movlb	0	; () banked
 11965  0021C2  8FA4               	bsf	(___ftadd@f2+1)& (0+255),7,b
 11966                           
 11967                           ; BSR set to: 0
 11968  0021C4  0EFF               	movlw	255
 11969  0021C6  0100               	movlb	0	; () banked
 11970  0021C8  17A3               	andwf	___ftadd@f2& (0+255),f,b
 11971  0021CA  0EFF               	movlw	255
 11972  0021CC  0100               	movlb	0	; () banked
 11973  0021CE  17A4               	andwf	(___ftadd@f2+1)& (0+255),f,b
 11974  0021D0  0E00               	movlw	0
 11975  0021D2  0100               	movlb	0	; () banked
 11976  0021D4  17A5               	andwf	(___ftadd@f2+2)& (0+255),f,b
 11977                           
 11978                           ; BSR set to: 0
 11979  0021D6  0100               	movlb	0	; () banked
 11980  0021D8  51AA               	movf	___ftadd@exp2& (0+255),w,b
 11981  0021DA  0100               	movlb	0	; () banked
 11982  0021DC  5DAB               	subwf	___ftadd@exp1& (0+255),w,b
 11983  0021DE  B0D8               	btfsc	status,0,c
 11984  0021E0  D025               	goto	l5958
 11985  0021E2                     l5948:
 11986                           
 11987                           ; BSR set to: 0
 11988  0021E2  0100               	movlb	0	; () banked
 11989  0021E4  90D8               	bcf	status,0,c
 11990  0021E6  37A3               	rlcf	___ftadd@f2& (0+255),f,b
 11991  0021E8  37A4               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 11992  0021EA  37A5               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 11993  0021EC  0100               	movlb	0	; () banked
 11994  0021EE  07AA               	decf	___ftadd@exp2& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997  0021F0  0100               	movlb	0	; () banked
 11998  0021F2  51AB               	movf	___ftadd@exp1& (0+255),w,b
 11999  0021F4  0100               	movlb	0	; () banked
 12000  0021F6  19AA               	xorwf	___ftadd@exp2& (0+255),w,b
 12001  0021F8  B4D8               	btfsc	status,2,c
 12002  0021FA  D011               	goto	l5956
 12003                           
 12004                           ; BSR set to: 0
 12005  0021FC  0100               	movlb	0	; () banked
 12006  0021FE  07A9               	decf	___ftadd@sign& (0+255),f,b
 12007  002200  C0A9  F0A6         	movff	___ftadd@sign,??___ftadd
 12008  002204  0E07               	movlw	7
 12009  002206  0100               	movlb	0	; () banked
 12010  002208  17A6               	andwf	??___ftadd& (0+255),f,b
 12011  00220A  B4D8               	btfsc	status,2,c
 12012  00220C  D008               	goto	l5956
 12013  00220E  D7E9               	goto	l5948
 12014  002210                     l5954:
 12015                           
 12016                           ; BSR set to: 0
 12017  002210  0100               	movlb	0	; () banked
 12018  002212  90D8               	bcf	status,0,c
 12019  002214  33A2               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 12020  002216  33A1               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 12021  002218  33A0               	rrcf	___ftadd@f1& (0+255),f,b
 12022  00221A  0100               	movlb	0	; () banked
 12023  00221C  2BAB               	incf	___ftadd@exp1& (0+255),f,b
 12024  00221E                     l5956:
 12025                           
 12026                           ; BSR set to: 0
 12027  00221E  0100               	movlb	0	; () banked
 12028  002220  51AA               	movf	___ftadd@exp2& (0+255),w,b
 12029  002222  0100               	movlb	0	; () banked
 12030  002224  19AB               	xorwf	___ftadd@exp1& (0+255),w,b
 12031  002226  B4D8               	btfsc	status,2,c
 12032  002228  D02B               	goto	l1063
 12033  00222A  D7F2               	goto	l5954
 12034  00222C                     l5958:
 12035                           
 12036                           ; BSR set to: 0
 12037  00222C  0100               	movlb	0	; () banked
 12038  00222E  51AB               	movf	___ftadd@exp1& (0+255),w,b
 12039  002230  0100               	movlb	0	; () banked
 12040  002232  5DAA               	subwf	___ftadd@exp2& (0+255),w,b
 12041  002234  B0D8               	btfsc	status,0,c
 12042  002236  D024               	goto	l1063
 12043  002238                     l5960:
 12044                           
 12045                           ; BSR set to: 0
 12046  002238  0100               	movlb	0	; () banked
 12047  00223A  90D8               	bcf	status,0,c
 12048  00223C  37A0               	rlcf	___ftadd@f1& (0+255),f,b
 12049  00223E  37A1               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 12050  002240  37A2               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 12051  002242  0100               	movlb	0	; () banked
 12052  002244  07AB               	decf	___ftadd@exp1& (0+255),f,b
 12053                           
 12054                           ; BSR set to: 0
 12055  002246  0100               	movlb	0	; () banked
 12056  002248  51AB               	movf	___ftadd@exp1& (0+255),w,b
 12057  00224A  0100               	movlb	0	; () banked
 12058  00224C  19AA               	xorwf	___ftadd@exp2& (0+255),w,b
 12059  00224E  B4D8               	btfsc	status,2,c
 12060  002250  D011               	goto	l5968
 12061                           
 12062                           ; BSR set to: 0
 12063  002252  0100               	movlb	0	; () banked
 12064  002254  07A9               	decf	___ftadd@sign& (0+255),f,b
 12065  002256  C0A9  F0A6         	movff	___ftadd@sign,??___ftadd
 12066  00225A  0E07               	movlw	7
 12067  00225C  0100               	movlb	0	; () banked
 12068  00225E  17A6               	andwf	??___ftadd& (0+255),f,b
 12069  002260  B4D8               	btfsc	status,2,c
 12070  002262  D008               	goto	l5968
 12071  002264  D7E9               	goto	l5960
 12072  002266                     l5966:
 12073                           
 12074                           ; BSR set to: 0
 12075  002266  0100               	movlb	0	; () banked
 12076  002268  90D8               	bcf	status,0,c
 12077  00226A  33A5               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 12078  00226C  33A4               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 12079  00226E  33A3               	rrcf	___ftadd@f2& (0+255),f,b
 12080  002270  0100               	movlb	0	; () banked
 12081  002272  2BAA               	incf	___ftadd@exp2& (0+255),f,b
 12082  002274                     l5968:
 12083                           
 12084                           ; BSR set to: 0
 12085  002274  0100               	movlb	0	; () banked
 12086  002276  51AA               	movf	___ftadd@exp2& (0+255),w,b
 12087  002278  0100               	movlb	0	; () banked
 12088  00227A  19AB               	xorwf	___ftadd@exp1& (0+255),w,b
 12089  00227C  A4D8               	btfss	status,2,c
 12090  00227E  D7F3               	goto	l5966
 12091  002280                     l1063:
 12092                           
 12093                           ; BSR set to: 0
 12094  002280  0100               	movlb	0	; () banked
 12095  002282  AFA9               	btfss	___ftadd@sign& (0+255),7,b
 12096  002284  D012               	goto	l1072
 12097                           
 12098                           ; BSR set to: 0
 12099  002286  0EFF               	movlw	255
 12100  002288  0100               	movlb	0	; () banked
 12101  00228A  1BA0               	xorwf	___ftadd@f1& (0+255),f,b
 12102  00228C  0EFF               	movlw	255
 12103  00228E  0100               	movlb	0	; () banked
 12104  002290  1BA1               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 12105  002292  0EFF               	movlw	255
 12106  002294  0100               	movlb	0	; () banked
 12107  002296  1BA2               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 12108  002298  0E01               	movlw	1
 12109  00229A  0100               	movlb	0	; () banked
 12110  00229C  27A0               	addwf	___ftadd@f1& (0+255),f,b
 12111  00229E  0E00               	movlw	0
 12112  0022A0  0100               	movlb	0	; () banked
 12113  0022A2  23A1               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 12114  0022A4  0E00               	movlw	0
 12115  0022A6  0100               	movlb	0	; () banked
 12116  0022A8  23A2               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 12117  0022AA                     l1072:
 12118                           
 12119                           ; BSR set to: 0
 12120  0022AA  0100               	movlb	0	; () banked
 12121  0022AC  ADA9               	btfss	___ftadd@sign& (0+255),6,b
 12122  0022AE  D012               	goto	l5974
 12123                           
 12124                           ; BSR set to: 0
 12125  0022B0  0EFF               	movlw	255
 12126  0022B2  0100               	movlb	0	; () banked
 12127  0022B4  1BA3               	xorwf	___ftadd@f2& (0+255),f,b
 12128  0022B6  0EFF               	movlw	255
 12129  0022B8  0100               	movlb	0	; () banked
 12130  0022BA  1BA4               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12131  0022BC  0EFF               	movlw	255
 12132  0022BE  0100               	movlb	0	; () banked
 12133  0022C0  1BA5               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12134  0022C2  0E01               	movlw	1
 12135  0022C4  0100               	movlb	0	; () banked
 12136  0022C6  27A3               	addwf	___ftadd@f2& (0+255),f,b
 12137  0022C8  0E00               	movlw	0
 12138  0022CA  0100               	movlb	0	; () banked
 12139  0022CC  23A4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12140  0022CE  0E00               	movlw	0
 12141  0022D0  0100               	movlb	0	; () banked
 12142  0022D2  23A5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12143  0022D4                     l5974:
 12144                           
 12145                           ; BSR set to: 0
 12146  0022D4  0E00               	movlw	0
 12147  0022D6  0100               	movlb	0	; () banked
 12148  0022D8  6FA9               	movwf	___ftadd@sign& (0+255),b
 12149                           
 12150                           ; BSR set to: 0
 12151  0022DA  0100               	movlb	0	; () banked
 12152  0022DC  51A0               	movf	___ftadd@f1& (0+255),w,b
 12153  0022DE  0100               	movlb	0	; () banked
 12154  0022E0  27A3               	addwf	___ftadd@f2& (0+255),f,b
 12155  0022E2  0100               	movlb	0	; () banked
 12156  0022E4  51A1               	movf	(___ftadd@f1+1)& (0+255),w,b
 12157  0022E6  0100               	movlb	0	; () banked
 12158  0022E8  23A4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12159  0022EA  0100               	movlb	0	; () banked
 12160  0022EC  51A2               	movf	(___ftadd@f1+2)& (0+255),w,b
 12161  0022EE  0100               	movlb	0	; () banked
 12162  0022F0  23A5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12163                           
 12164                           ; BSR set to: 0
 12165  0022F2  0100               	movlb	0	; () banked
 12166  0022F4  AFA5               	btfss	(___ftadd@f2+2)& (0+255),7,b
 12167  0022F6  D015               	goto	l5984
 12168                           
 12169                           ; BSR set to: 0
 12170  0022F8  0EFF               	movlw	255
 12171  0022FA  0100               	movlb	0	; () banked
 12172  0022FC  1BA3               	xorwf	___ftadd@f2& (0+255),f,b
 12173  0022FE  0EFF               	movlw	255
 12174  002300  0100               	movlb	0	; () banked
 12175  002302  1BA4               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 12176  002304  0EFF               	movlw	255
 12177  002306  0100               	movlb	0	; () banked
 12178  002308  1BA5               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 12179  00230A  0E01               	movlw	1
 12180  00230C  0100               	movlb	0	; () banked
 12181  00230E  27A3               	addwf	___ftadd@f2& (0+255),f,b
 12182  002310  0E00               	movlw	0
 12183  002312  0100               	movlb	0	; () banked
 12184  002314  23A4               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 12185  002316  0E00               	movlw	0
 12186  002318  0100               	movlb	0	; () banked
 12187  00231A  23A5               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 12188                           
 12189                           ; BSR set to: 0
 12190  00231C  0E01               	movlw	1
 12191  00231E  0100               	movlb	0	; () banked
 12192  002320  6FA9               	movwf	___ftadd@sign& (0+255),b
 12193  002322                     l5984:
 12194                           
 12195                           ; BSR set to: 0
 12196  002322  C0A3  F017         	movff	___ftadd@f2,___ftpack@arg
 12197  002326  C0A4  F018         	movff	___ftadd@f2+1,___ftpack@arg+1
 12198  00232A  C0A5  F019         	movff	___ftadd@f2+2,___ftpack@arg+2
 12199  00232E  C0AB  F01A         	movff	___ftadd@exp1,___ftpack@exp
 12200  002332  C0A9  F01B         	movff	___ftadd@sign,___ftpack@sign
 12201  002336  EC44  F01A         	call	___ftpack	;wreg free
 12202  00233A  C017  F0A0         	movff	?___ftpack,?___ftadd
 12203  00233E  C018  F0A1         	movff	?___ftpack+1,?___ftadd+1
 12204  002342  C019  F0A2         	movff	?___ftpack+2,?___ftadd+2
 12205  002346  0012               	return	
 12206  002348                     __end_of___ftadd:
 12207                           	opt stack 0
 12208                           tblptru	equ	0xFF8
 12209                           tblptrh	equ	0xFF7
 12210                           tblptrl	equ	0xFF6
 12211                           tablat	equ	0xFF5
 12212                           prodh	equ	0xFF4
 12213                           prodl	equ	0xFF3
 12214                           intcon	equ	0xFF2
 12215                           intcon2	equ	0xFF1
 12216                           postinc0	equ	0xFEE
 12217                           wreg	equ	0xFE8
 12218                           postdec1	equ	0xFE5
 12219                           fsr1l	equ	0xFE1
 12220                           indf2	equ	0xFDF
 12221                           postinc2	equ	0xFDE
 12222                           postdec2	equ	0xFDD
 12223                           fsr2h	equ	0xFDA
 12224                           fsr2l	equ	0xFD9
 12225                           status	equ	0xFD8
 12226                           
 12227 ;; *************** function ___ftneg *****************
 12228 ;; Defined at:
 12229 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftneg.c"
 12230 ;; Parameters:    Size  Location     Type
 12231 ;;  f1              3   30[COMRAM] float 
 12232 ;; Auto vars:     Size  Location     Type
 12233 ;;		None
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  3   30[COMRAM] float 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12243 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12246 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12247 ;;Total ram usage:        3 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    4
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_default_display
 12254 ;;		_current_auto_limit_set_display
 12255 ;;		_sprintf
 12256 ;; This function uses a non-reentrant model
 12257 ;;
 12258                           
 12259                           	psect	text45
 12260  003DD0                     __ptext45:
 12261                           	opt stack 0
 12262  003DD0                     ___ftneg:
 12263                           	opt stack 24
 12264                           
 12265                           ;incstack = 0
 12266  003DD0  501F               	movf	___ftneg@f1,w,c
 12267  003DD2  1020               	iorwf	___ftneg@f1+1,w,c
 12268  003DD4  1021               	iorwf	___ftneg@f1+2,w,c
 12269  003DD6  B4D8               	btfsc	status,2,c
 12270  003DD8  D006               	goto	l1122
 12271  003DDA  0E00               	movlw	0
 12272  003DDC  1A1F               	xorwf	___ftneg@f1,f,c
 12273  003DDE  0E00               	movlw	0
 12274  003DE0  1A20               	xorwf	___ftneg@f1+1,f,c
 12275  003DE2  0E80               	movlw	128
 12276  003DE4  1A21               	xorwf	___ftneg@f1+2,f,c
 12277  003DE6                     l1122:
 12278  003DE6  C01F  F01F         	movff	___ftneg@f1,?___ftneg
 12279  003DEA  C020  F020         	movff	___ftneg@f1+1,?___ftneg+1
 12280  003DEE  C021  F021         	movff	___ftneg@f1+2,?___ftneg+2
 12281  003DF2  0012               	return		;funcret
 12282  003DF4                     __end_of___ftneg:
 12283                           	opt stack 0
 12284                           tblptru	equ	0xFF8
 12285                           tblptrh	equ	0xFF7
 12286                           tblptrl	equ	0xFF6
 12287                           tablat	equ	0xFF5
 12288                           prodh	equ	0xFF4
 12289                           prodl	equ	0xFF3
 12290                           intcon	equ	0xFF2
 12291                           intcon2	equ	0xFF1
 12292                           postinc0	equ	0xFEE
 12293                           wreg	equ	0xFE8
 12294                           postdec1	equ	0xFE5
 12295                           fsr1l	equ	0xFE1
 12296                           indf2	equ	0xFDF
 12297                           postinc2	equ	0xFDE
 12298                           postdec2	equ	0xFDD
 12299                           fsr2h	equ	0xFDA
 12300                           fsr2l	equ	0xFD9
 12301                           status	equ	0xFD8
 12302                           
 12303 ;; *************** function ___ftge *****************
 12304 ;; Defined at:
 12305 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftge.c"
 12306 ;; Parameters:    Size  Location     Type
 12307 ;;  ff1             3   44[BANK0 ] float 
 12308 ;;  ff2             3   47[BANK0 ] float 
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;		None
 12311 ;; Return value:  Size  Location     Type
 12312 ;;		None               void
 12313 ;; Registers used:
 12314 ;;		wreg, status,2, status,0
 12315 ;; Tracked objects:
 12316 ;;		On entry : 0/0
 12317 ;;		On exit  : 0/0
 12318 ;;		Unchanged: 0/0
 12319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12320 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12322 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12323 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12324 ;;Total ram usage:        9 bytes
 12325 ;; Hardware stack levels used:    1
 12326 ;; Hardware stack levels required when called:    4
 12327 ;; This function calls:
 12328 ;;		Nothing
 12329 ;; This function is called by:
 12330 ;;		_sprintf
 12331 ;; This function uses a non-reentrant model
 12332 ;;
 12333                           
 12334                           	psect	text46
 12335  0033C0                     __ptext46:
 12336                           	opt stack 0
 12337  0033C0                     ___ftge:
 12338                           	opt stack 24
 12339                           
 12340                           ;incstack = 0
 12341  0033C0  0100               	movlb	0	; () banked
 12342  0033C2  AFAE               	btfss	(___ftge@ff1+2)& (0+255),7,b
 12343  0033C4  D01D               	goto	l6362
 12344                           
 12345                           ; BSR set to: 0
 12346  0033C6  C0AC  F0B2         	movff	___ftge@ff1,??___ftge
 12347  0033CA  C0AD  F0B3         	movff	___ftge@ff1+1,??___ftge+1
 12348  0033CE  C0AE  F0B4         	movff	___ftge@ff1+2,??___ftge+2
 12349  0033D2  0100               	movlb	0	; () banked
 12350  0033D4  1FB2               	comf	??___ftge& (0+255),f,b
 12351  0033D6  1FB3               	comf	(??___ftge+1)& (0+255),f,b
 12352  0033D8  1FB4               	comf	(??___ftge+2)& (0+255),f,b
 12353  0033DA  2BB2               	incf	??___ftge& (0+255),f,b
 12354  0033DC  0E00               	movlw	0
 12355  0033DE  23B3               	addwfc	(??___ftge+1)& (0+255),f,b
 12356  0033E0  23B4               	addwfc	(??___ftge+2)& (0+255),f,b
 12357  0033E2  0E00               	movlw	0
 12358  0033E4  0100               	movlb	0	; () banked
 12359  0033E6  25B2               	addwf	??___ftge& (0+255),w,b
 12360  0033E8  0100               	movlb	0	; () banked
 12361  0033EA  6FAC               	movwf	___ftge@ff1& (0+255),b
 12362  0033EC  0E00               	movlw	0
 12363  0033EE  0100               	movlb	0	; () banked
 12364  0033F0  21B3               	addwfc	(??___ftge+1)& (0+255),w,b
 12365  0033F2  0100               	movlb	0	; () banked
 12366  0033F4  6FAD               	movwf	(___ftge@ff1+1)& (0+255),b
 12367  0033F6  0E80               	movlw	128
 12368  0033F8  0100               	movlb	0	; () banked
 12369  0033FA  21B4               	addwfc	(??___ftge+2)& (0+255),w,b
 12370  0033FC  0100               	movlb	0	; () banked
 12371  0033FE  6FAE               	movwf	(___ftge@ff1+2)& (0+255),b
 12372  003400                     l6362:
 12373                           
 12374                           ; BSR set to: 0
 12375  003400  0100               	movlb	0	; () banked
 12376  003402  AFB1               	btfss	(___ftge@ff2+2)& (0+255),7,b
 12377  003404  D01D               	goto	l6366
 12378                           
 12379                           ; BSR set to: 0
 12380  003406  C0AF  F0B2         	movff	___ftge@ff2,??___ftge
 12381  00340A  C0B0  F0B3         	movff	___ftge@ff2+1,??___ftge+1
 12382  00340E  C0B1  F0B4         	movff	___ftge@ff2+2,??___ftge+2
 12383  003412  0100               	movlb	0	; () banked
 12384  003414  1FB2               	comf	??___ftge& (0+255),f,b
 12385  003416  1FB3               	comf	(??___ftge+1)& (0+255),f,b
 12386  003418  1FB4               	comf	(??___ftge+2)& (0+255),f,b
 12387  00341A  2BB2               	incf	??___ftge& (0+255),f,b
 12388  00341C  0E00               	movlw	0
 12389  00341E  23B3               	addwfc	(??___ftge+1)& (0+255),f,b
 12390  003420  23B4               	addwfc	(??___ftge+2)& (0+255),f,b
 12391  003422  0E00               	movlw	0
 12392  003424  0100               	movlb	0	; () banked
 12393  003426  25B2               	addwf	??___ftge& (0+255),w,b
 12394  003428  0100               	movlb	0	; () banked
 12395  00342A  6FAF               	movwf	___ftge@ff2& (0+255),b
 12396  00342C  0E00               	movlw	0
 12397  00342E  0100               	movlb	0	; () banked
 12398  003430  21B3               	addwfc	(??___ftge+1)& (0+255),w,b
 12399  003432  0100               	movlb	0	; () banked
 12400  003434  6FB0               	movwf	(___ftge@ff2+1)& (0+255),b
 12401  003436  0E80               	movlw	128
 12402  003438  0100               	movlb	0	; () banked
 12403  00343A  21B4               	addwfc	(??___ftge+2)& (0+255),w,b
 12404  00343C  0100               	movlb	0	; () banked
 12405  00343E  6FB1               	movwf	(___ftge@ff2+2)& (0+255),b
 12406  003440                     l6366:
 12407                           
 12408                           ; BSR set to: 0
 12409  003440  0E00               	movlw	0
 12410  003442  0100               	movlb	0	; () banked
 12411  003444  1BAC               	xorwf	___ftge@ff1& (0+255),f,b
 12412  003446  0E00               	movlw	0
 12413  003448  0100               	movlb	0	; () banked
 12414  00344A  1BAD               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 12415  00344C  0E80               	movlw	128
 12416  00344E  0100               	movlb	0	; () banked
 12417  003450  1BAE               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 12418                           
 12419                           ; BSR set to: 0
 12420  003452  0E00               	movlw	0
 12421  003454  0100               	movlb	0	; () banked
 12422  003456  1BAF               	xorwf	___ftge@ff2& (0+255),f,b
 12423  003458  0E00               	movlw	0
 12424  00345A  0100               	movlb	0	; () banked
 12425  00345C  1BB0               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 12426  00345E  0E80               	movlw	128
 12427  003460  0100               	movlb	0	; () banked
 12428  003462  1BB1               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 12429  003464  0100               	movlb	0	; () banked
 12430  003466  51AF               	movf	___ftge@ff2& (0+255),w,b
 12431  003468  0100               	movlb	0	; () banked
 12432  00346A  5DAC               	subwf	___ftge@ff1& (0+255),w,b
 12433  00346C  0100               	movlb	0	; () banked
 12434  00346E  51B0               	movf	(___ftge@ff2+1)& (0+255),w,b
 12435  003470  0100               	movlb	0	; () banked
 12436  003472  59AD               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 12437  003474  0100               	movlb	0	; () banked
 12438  003476  51B1               	movf	(___ftge@ff2+2)& (0+255),w,b
 12439  003478  0100               	movlb	0	; () banked
 12440  00347A  59AE               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 12441  00347C  B0D8               	btfsc	status,0,c
 12442  00347E  D002               	goto	l6372
 12443                           
 12444                           ; BSR set to: 0
 12445  003480  90D8               	bcf	status,0,c
 12446  003482  0012               	return	
 12447  003484                     l6372:
 12448                           
 12449                           ; BSR set to: 0
 12450  003484  80D8               	bsf	status,0,c
 12451                           
 12452                           ; BSR set to: 0
 12453  003486  0012               	return	
 12454  003488                     __end_of___ftge:
 12455                           	opt stack 0
 12456                           tblptru	equ	0xFF8
 12457                           tblptrh	equ	0xFF7
 12458                           tblptrl	equ	0xFF6
 12459                           tablat	equ	0xFF5
 12460                           prodh	equ	0xFF4
 12461                           prodl	equ	0xFF3
 12462                           intcon	equ	0xFF2
 12463                           intcon2	equ	0xFF1
 12464                           postinc0	equ	0xFEE
 12465                           wreg	equ	0xFE8
 12466                           postdec1	equ	0xFE5
 12467                           fsr1l	equ	0xFE1
 12468                           indf2	equ	0xFDF
 12469                           postinc2	equ	0xFDE
 12470                           postdec2	equ	0xFDD
 12471                           fsr2h	equ	0xFDA
 12472                           fsr2l	equ	0xFD9
 12473                           status	equ	0xFD8
 12474                           
 12475 ;; *************** function ___ftdiv *****************
 12476 ;; Defined at:
 12477 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\ftdiv.c"
 12478 ;; Parameters:    Size  Location     Type
 12479 ;;  f1              3   74[COMRAM] float 
 12480 ;;  f2              3   77[COMRAM] float 
 12481 ;; Auto vars:     Size  Location     Type
 12482 ;;  f3              3    4[BANK0 ] float 
 12483 ;;  sign            1    8[BANK0 ] unsigned char 
 12484 ;;  exp             1    7[BANK0 ] unsigned char 
 12485 ;;  cntr            1    3[BANK0 ] unsigned char 
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  3   74[COMRAM] float 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2, status,0, cstack
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12496 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;Total ram usage:       15 bytes
 12500 ;; Hardware stack levels used:    1
 12501 ;; Hardware stack levels required when called:    5
 12502 ;; This function calls:
 12503 ;;		___ftpack
 12504 ;; This function is called by:
 12505 ;;		_default_display
 12506 ;;		_voltage_set_display
 12507 ;;		_current_protection_set_display
 12508 ;;		_current_limit_set_display
 12509 ;;		_current_auto_limit_set_display
 12510 ;;		_main
 12511 ;;		_sprintf
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text47
 12516  002ECE                     __ptext47:
 12517                           	opt stack 0
 12518  002ECE                     ___ftdiv:
 12519                           	opt stack 23
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;incstack = 0
 12523  002ECE  C04D  F080         	movff	___ftdiv@f1+2,??___ftdiv
 12524  002ED2  0100               	movlb	0	; () banked
 12525  002ED4  6B81               	clrf	(??___ftdiv+1)& (0+255),b
 12526  002ED6  6B82               	clrf	(??___ftdiv+2)& (0+255),b
 12527  002ED8  344C               	rlcf	___ftdiv@f1+1,w,c
 12528  002EDA  0100               	movlb	0	; () banked
 12529  002EDC  3780               	rlcf	??___ftdiv& (0+255),f,b
 12530  002EDE  E301               	bnc	u6131
 12531  002EE0  8181               	bsf	(??___ftdiv+1)& (0+255),0,b
 12532  002EE2                     u6131:
 12533  002EE2  0100               	movlb	0	; () banked
 12534  002EE4  5180               	movf	??___ftdiv& (0+255),w,b
 12535  002EE6  0100               	movlb	0	; () banked
 12536  002EE8  6F87               	movwf	___ftdiv@exp& (0+255),b
 12537  002EEA  0100               	movlb	0	; () banked
 12538  002EEC  5187               	movf	___ftdiv@exp& (0+255),w,b
 12539  002EEE  A4D8               	btfss	status,2,c
 12540  002EF0  D007               	goto	l6310
 12541                           
 12542                           ; BSR set to: 0
 12543  002EF2  0E00               	movlw	0
 12544  002EF4  6E4B               	movwf	?___ftdiv,c
 12545  002EF6  0E00               	movlw	0
 12546  002EF8  6E4C               	movwf	?___ftdiv+1,c
 12547  002EFA  0E00               	movlw	0
 12548  002EFC  6E4D               	movwf	?___ftdiv+2,c
 12549                           
 12550                           ; BSR set to: 0
 12551  002EFE  0012               	return	
 12552  002F00                     l6310:
 12553                           
 12554                           ; BSR set to: 0
 12555  002F00  C050  F080         	movff	___ftdiv@f2+2,??___ftdiv
 12556  002F04  0100               	movlb	0	; () banked
 12557  002F06  6B81               	clrf	(??___ftdiv+1)& (0+255),b
 12558  002F08  6B82               	clrf	(??___ftdiv+2)& (0+255),b
 12559  002F0A  344F               	rlcf	___ftdiv@f2+1,w,c
 12560  002F0C  0100               	movlb	0	; () banked
 12561  002F0E  3780               	rlcf	??___ftdiv& (0+255),f,b
 12562  002F10  E301               	bnc	u6151
 12563  002F12  8181               	bsf	(??___ftdiv+1)& (0+255),0,b
 12564  002F14                     u6151:
 12565  002F14  0100               	movlb	0	; () banked
 12566  002F16  5180               	movf	??___ftdiv& (0+255),w,b
 12567  002F18  0100               	movlb	0	; () banked
 12568  002F1A  6F88               	movwf	___ftdiv@sign& (0+255),b
 12569  002F1C  0100               	movlb	0	; () banked
 12570  002F1E  5188               	movf	___ftdiv@sign& (0+255),w,b
 12571  002F20  A4D8               	btfss	status,2,c
 12572  002F22  D007               	goto	l6316
 12573                           
 12574                           ; BSR set to: 0
 12575  002F24  0E00               	movlw	0
 12576  002F26  6E4B               	movwf	?___ftdiv,c
 12577  002F28  0E00               	movlw	0
 12578  002F2A  6E4C               	movwf	?___ftdiv+1,c
 12579  002F2C  0E00               	movlw	0
 12580  002F2E  6E4D               	movwf	?___ftdiv+2,c
 12581                           
 12582                           ; BSR set to: 0
 12583  002F30  0012               	return	
 12584  002F32                     l6316:
 12585                           
 12586                           ; BSR set to: 0
 12587  002F32  0E00               	movlw	0
 12588  002F34  0100               	movlb	0	; () banked
 12589  002F36  6F84               	movwf	___ftdiv@f3& (0+255),b
 12590  002F38  0E00               	movlw	0
 12591  002F3A  0100               	movlb	0	; () banked
 12592  002F3C  6F85               	movwf	(___ftdiv@f3+1)& (0+255),b
 12593  002F3E  0E00               	movlw	0
 12594  002F40  0100               	movlb	0	; () banked
 12595  002F42  6F86               	movwf	(___ftdiv@f3+2)& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598  002F44  0100               	movlb	0	; () banked
 12599  002F46  5188               	movf	___ftdiv@sign& (0+255),w,b
 12600  002F48  0F89               	addlw	137
 12601  002F4A  0100               	movlb	0	; () banked
 12602  002F4C  5F87               	subwf	___ftdiv@exp& (0+255),f,b
 12603                           
 12604                           ; BSR set to: 0
 12605  002F4E  C04D  F088         	movff	___ftdiv@f1+2,___ftdiv@sign
 12606                           
 12607                           ; BSR set to: 0
 12608  002F52  5050               	movf	___ftdiv@f2+2,w,c
 12609  002F54  0100               	movlb	0	; () banked
 12610  002F56  1B88               	xorwf	___ftdiv@sign& (0+255),f,b
 12611                           
 12612                           ; BSR set to: 0
 12613  002F58  0E80               	movlw	128
 12614  002F5A  0100               	movlb	0	; () banked
 12615  002F5C  1788               	andwf	___ftdiv@sign& (0+255),f,b
 12616                           
 12617                           ; BSR set to: 0
 12618  002F5E  8E4C               	bsf	___ftdiv@f1+1,7,c
 12619                           
 12620                           ; BSR set to: 0
 12621  002F60  0EFF               	movlw	255
 12622  002F62  164B               	andwf	___ftdiv@f1,f,c
 12623  002F64  0EFF               	movlw	255
 12624  002F66  164C               	andwf	___ftdiv@f1+1,f,c
 12625  002F68  0E00               	movlw	0
 12626  002F6A  164D               	andwf	___ftdiv@f1+2,f,c
 12627                           
 12628                           ; BSR set to: 0
 12629  002F6C  8E4F               	bsf	___ftdiv@f2+1,7,c
 12630                           
 12631                           ; BSR set to: 0
 12632  002F6E  0EFF               	movlw	255
 12633  002F70  164E               	andwf	___ftdiv@f2,f,c
 12634  002F72  0EFF               	movlw	255
 12635  002F74  164F               	andwf	___ftdiv@f2+1,f,c
 12636  002F76  0E00               	movlw	0
 12637  002F78  1650               	andwf	___ftdiv@f2+2,f,c
 12638                           
 12639                           ; BSR set to: 0
 12640  002F7A  0E18               	movlw	24
 12641  002F7C  0100               	movlb	0	; () banked
 12642  002F7E  6F83               	movwf	___ftdiv@cntr& (0+255),b
 12643  002F80                     l6336:
 12644                           
 12645                           ; BSR set to: 0
 12646  002F80  0100               	movlb	0	; () banked
 12647  002F82  90D8               	bcf	status,0,c
 12648  002F84  3784               	rlcf	___ftdiv@f3& (0+255),f,b
 12649  002F86  3785               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 12650  002F88  3786               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 12651                           
 12652                           ; BSR set to: 0
 12653  002F8A  504E               	movf	___ftdiv@f2,w,c
 12654  002F8C  5C4B               	subwf	___ftdiv@f1,w,c
 12655  002F8E  504F               	movf	___ftdiv@f2+1,w,c
 12656  002F90  584C               	subwfb	___ftdiv@f1+1,w,c
 12657  002F92  5050               	movf	___ftdiv@f2+2,w,c
 12658  002F94  584D               	subwfb	___ftdiv@f1+2,w,c
 12659  002F96  A0D8               	btfss	status,0,c
 12660  002F98  D008               	goto	l1083
 12661                           
 12662                           ; BSR set to: 0
 12663  002F9A  504E               	movf	___ftdiv@f2,w,c
 12664  002F9C  5E4B               	subwf	___ftdiv@f1,f,c
 12665  002F9E  504F               	movf	___ftdiv@f2+1,w,c
 12666  002FA0  5A4C               	subwfb	___ftdiv@f1+1,f,c
 12667  002FA2  5050               	movf	___ftdiv@f2+2,w,c
 12668  002FA4  5A4D               	subwfb	___ftdiv@f1+2,f,c
 12669                           
 12670                           ; BSR set to: 0
 12671  002FA6  0100               	movlb	0	; () banked
 12672  002FA8  8184               	bsf	___ftdiv@f3& (0+255),0,b
 12673  002FAA                     l1083:
 12674                           
 12675                           ; BSR set to: 0
 12676  002FAA  90D8               	bcf	status,0,c
 12677  002FAC  364B               	rlcf	___ftdiv@f1,f,c
 12678  002FAE  364C               	rlcf	___ftdiv@f1+1,f,c
 12679  002FB0  364D               	rlcf	___ftdiv@f1+2,f,c
 12680                           
 12681                           ; BSR set to: 0
 12682  002FB2  0100               	movlb	0	; () banked
 12683  002FB4  2F83               	decfsz	___ftdiv@cntr& (0+255),f,b
 12684  002FB6  D7E4               	goto	l6336
 12685                           
 12686                           ; BSR set to: 0
 12687                           
 12688                           ; BSR set to: 0
 12689  002FB8  C084  F017         	movff	___ftdiv@f3,___ftpack@arg
 12690  002FBC  C085  F018         	movff	___ftdiv@f3+1,___ftpack@arg+1
 12691  002FC0  C086  F019         	movff	___ftdiv@f3+2,___ftpack@arg+2
 12692  002FC4  C087  F01A         	movff	___ftdiv@exp,___ftpack@exp
 12693  002FC8  C088  F01B         	movff	___ftdiv@sign,___ftpack@sign
 12694  002FCC  EC44  F01A         	call	___ftpack	;wreg free
 12695  002FD0  C017  F04B         	movff	?___ftpack,?___ftdiv
 12696  002FD4  C018  F04C         	movff	?___ftpack+1,?___ftdiv+1
 12697  002FD8  C019  F04D         	movff	?___ftpack+2,?___ftdiv+2
 12698  002FDC  0012               	return	
 12699  002FDE                     __end_of___ftdiv:
 12700                           	opt stack 0
 12701                           tblptru	equ	0xFF8
 12702                           tblptrh	equ	0xFF7
 12703                           tblptrl	equ	0xFF6
 12704                           tablat	equ	0xFF5
 12705                           prodh	equ	0xFF4
 12706                           prodl	equ	0xFF3
 12707                           intcon	equ	0xFF2
 12708                           intcon2	equ	0xFF1
 12709                           postinc0	equ	0xFEE
 12710                           wreg	equ	0xFE8
 12711                           postdec1	equ	0xFE5
 12712                           fsr1l	equ	0xFE1
 12713                           indf2	equ	0xFDF
 12714                           postinc2	equ	0xFDE
 12715                           postdec2	equ	0xFDD
 12716                           fsr2h	equ	0xFDA
 12717                           fsr2l	equ	0xFD9
 12718                           status	equ	0xFD8
 12719                           
 12720 ;; *************** function _putrsXLCD *****************
 12721 ;; Defined at:
 12722 ;;		line 16 in file "putrxlcd.c"
 12723 ;; Parameters:    Size  Location     Type
 12724 ;;  buffer          2   23[COMRAM] PTR const unsigned char 
 12725 ;;		 -> STR_57(5), STR_56(17), STR_55(17), STR_54(17), 
 12726 ;;		 -> STR_53(13), STR_52(6), STR_51(18), STR_49(6), 
 12727 ;;		 -> STR_48(6), STR_47(11), STR_46(5), STR_44(10), 
 12728 ;;		 -> STR_43(8), STR_41(6), STR_40(6), STR_39(10), 
 12729 ;;		 -> STR_38(5), STR_36(10), STR_35(7), STR_33(6), 
 12730 ;;		 -> STR_32(6), STR_31(10), STR_29(4), STR_28(10), 
 12731 ;;		 -> STR_27(6), ResultString_set_u(10), STR_25(2), STR_24(9), 
 12732 ;;		 -> STR_23(17), STR_22(17), ResultString_brightness_percent(5), ResultString_brightness(5), 
 12733 ;;		 -> STR_19(2), STR_18(9), STR_17(17), STR_16(17), 
 12734 ;;		 -> ResultString_contrast_percent(5), ResultString_contrast(5), STR_13(12), STR_11(4), 
 12735 ;;		 -> STR_10(12), STR_8(4), STR_7(12), ResultString_set_i(10), 
 12736 ;;		 -> STR_5(4), STR_4(12), ResultString_i(10), STR_3(12), 
 12737 ;;		 -> ResultString_u(10), STR_2(4), STR_1(4), 
 12738 ;; Auto vars:     Size  Location     Type
 12739 ;;		None
 12740 ;; Return value:  Size  Location     Type
 12741 ;;                  1    wreg      void 
 12742 ;; Registers used:
 12743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12744 ;; Tracked objects:
 12745 ;;		On entry : 0/0
 12746 ;;		On exit  : 0/0
 12747 ;;		Unchanged: 0/0
 12748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12752 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12753 ;;Total ram usage:        2 bytes
 12754 ;; Hardware stack levels used:    1
 12755 ;; Hardware stack levels required when called:    6
 12756 ;; This function calls:
 12757 ;;		_BusyXLCD
 12758 ;;		_WriteDataXLCD
 12759 ;; This function is called by:
 12760 ;;		_default_display
 12761 ;;		_contrast_display
 12762 ;;		_brightness_display
 12763 ;;		_voltage_set_display
 12764 ;;		_current_protection_set_display
 12765 ;;		_current_limit_set_display
 12766 ;;		_current_auto_limit_set_display
 12767 ;;		_protection_display
 12768 ;;		_main
 12769 ;; This function uses a non-reentrant model
 12770 ;;
 12771                           
 12772                           	psect	text48
 12773  0038FC                     __ptext48:
 12774                           	opt stack 0
 12775  0038FC                     _putrsXLCD:
 12776                           	opt stack 23
 12777                           
 12778                           ;putrxlcd.c: 18: while(*buffer)
 12779                           
 12780                           ;incstack = 0
 12781  0038FC  D019               	goto	l4554
 12782  0038FE                     l4548:
 12783  0038FE  ECBC  F01D         	call	_BusyXLCD	;wreg free
 12784  003902  0900               	iorlw	0
 12785  003904  A4D8               	btfss	status,2,c
 12786  003906  D7FB               	goto	l4548
 12787                           
 12788                           ;putrxlcd.c: 21: WriteDataXLCD(*buffer);
 12789  003908  C018  FFF6         	movff	putrsXLCD@buffer,tblptrl
 12790  00390C  C019  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
 12791  003910  6AF8               	clrf	tblptru,c
 12792  003912  0E0F               	movlw	(high __ramtop+-1)
 12793  003914  64F7               	cpfsgt	tblptrh,c
 12794  003916  D003               	bra	u3847
 12795  003918  0008               	tblrd		*
 12796  00391A  50F5               	movf	tablat,w,c
 12797  00391C  D005               	bra	u3840
 12798  00391E                     u3847:
 12799  00391E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12800  003922  CFF7 FFEA          	movff	tblptrh,fsr0h
 12801  003926  50EF               	movf	indf0,w,c
 12802  003928                     u3840:
 12803  003928  EC9D  F01D         	call	_WriteDataXLCD
 12804                           
 12805                           ;putrxlcd.c: 22: buffer++;
 12806  00392C  4A18               	infsnz	putrsXLCD@buffer,f,c
 12807  00392E  2A19               	incf	putrsXLCD@buffer+1,f,c
 12808  003930                     l4554:
 12809  003930  C018  FFF6         	movff	putrsXLCD@buffer,tblptrl
 12810  003934  C019  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
 12811  003938  6AF8               	clrf	tblptru,c
 12812  00393A  0E0F               	movlw	(high __ramtop+-1)
 12813  00393C  64F7               	cpfsgt	tblptrh,c
 12814  00393E  D003               	bra	u3857
 12815  003940  0008               	tblrd		*
 12816  003942  50F5               	movf	tablat,w,c
 12817  003944  D005               	bra	u3850
 12818  003946                     u3857:
 12819  003946  CFF6 FFE9          	movff	tblptrl,fsr0l
 12820  00394A  CFF7 FFEA          	movff	tblptrh,fsr0h
 12821  00394E  50EF               	movf	indf0,w,c
 12822  003950                     u3850:
 12823  003950  0900               	iorlw	0
 12824  003952  B4D8               	btfsc	status,2,c
 12825  003954  0012               	return	
 12826  003956  D7D3               	goto	l4548
 12827  003958                     __end_of_putrsXLCD:
 12828                           	opt stack 0
 12829                           tblptru	equ	0xFF8
 12830                           tblptrh	equ	0xFF7
 12831                           tblptrl	equ	0xFF6
 12832                           tablat	equ	0xFF5
 12833                           prodh	equ	0xFF4
 12834                           prodl	equ	0xFF3
 12835                           intcon	equ	0xFF2
 12836                           intcon2	equ	0xFF1
 12837                           indf0	equ	0xFEF
 12838                           postinc0	equ	0xFEE
 12839                           fsr0h	equ	0xFEA
 12840                           fsr0l	equ	0xFE9
 12841                           wreg	equ	0xFE8
 12842                           postdec1	equ	0xFE5
 12843                           fsr1l	equ	0xFE1
 12844                           indf2	equ	0xFDF
 12845                           postinc2	equ	0xFDE
 12846                           postdec2	equ	0xFDD
 12847                           fsr2h	equ	0xFDA
 12848                           fsr2l	equ	0xFD9
 12849                           status	equ	0xFD8
 12850                           
 12851 ;; *************** function _WriteDataXLCD *****************
 12852 ;; Defined at:
 12853 ;;		line 16 in file "writdata.c"
 12854 ;; Parameters:    Size  Location     Type
 12855 ;;  data            1    wreg     unsigned char 
 12856 ;; Auto vars:     Size  Location     Type
 12857 ;;  data            1   22[COMRAM] unsigned char 
 12858 ;; Return value:  Size  Location     Type
 12859 ;;                  1    wreg      void 
 12860 ;; Registers used:
 12861 ;;		wreg, status,2, status,0, cstack
 12862 ;; Tracked objects:
 12863 ;;		On entry : 0/0
 12864 ;;		On exit  : 0/0
 12865 ;;		Unchanged: 0/0
 12866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;Total ram usage:        1 bytes
 12872 ;; Hardware stack levels used:    1
 12873 ;; Hardware stack levels required when called:    5
 12874 ;; This function calls:
 12875 ;;		_DelayFor18TCY
 12876 ;; This function is called by:
 12877 ;;		_putrsXLCD
 12878 ;;		_putsXLCD
 12879 ;; This function uses a non-reentrant model
 12880 ;;
 12881                           
 12882                           	psect	text49
 12883  003B3A                     __ptext49:
 12884                           	opt stack 0
 12885  003B3A                     _WriteDataXLCD:
 12886                           	opt stack 23
 12887                           
 12888                           ;incstack = 0
 12889                           ;WriteDataXLCD@data stored from wreg
 12890  003B3A  6E17               	movwf	WriteDataXLCD@data,c
 12891                           
 12892                           ;writdata.c: 35: TRISB &= 0xf0;
 12893  003B3C  0EF0               	movlw	240
 12894  003B3E  1693               	andwf	3987,f,c	;volatile
 12895                           
 12896                           ;writdata.c: 36: PORTB &= 0xf0;
 12897  003B40  0EF0               	movlw	240
 12898  003B42  1681               	andwf	3969,f,c	;volatile
 12899                           
 12900                           ;writdata.c: 37: PORTB |= ((data>>4)&0x0f);
 12901  003B44  3817               	swapf	WriteDataXLCD@data,w,c
 12902  003B46  0B0F               	andlw	15
 12903  003B48  0B0F               	andlw	15
 12904  003B4A  1281               	iorwf	3969,f,c	;volatile
 12905                           
 12906                           ;writdata.c: 39: LATCbits.LATC0 = 1;
 12907  003B4C  808B               	bsf	3979,0,c	;volatile
 12908                           
 12909                           ;writdata.c: 40: LATCbits.LATC2 = 0;
 12910  003B4E  948B               	bcf	3979,2,c	;volatile
 12911                           
 12912                           ;writdata.c: 41: DelayFor18TCY();
 12913  003B50  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 12914                           
 12915                           ;writdata.c: 42: LATCbits.LATC1 = 1;
 12916  003B54  828B               	bsf	3979,1,c	;volatile
 12917                           
 12918                           ;writdata.c: 43: DelayFor18TCY();
 12919  003B56  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 12920                           
 12921                           ;writdata.c: 44: LATCbits.LATC1 = 0;
 12922  003B5A  928B               	bcf	3979,1,c	;volatile
 12923                           
 12924                           ;writdata.c: 49: PORTB &= 0xf0;
 12925  003B5C  0EF0               	movlw	240
 12926  003B5E  1681               	andwf	3969,f,c	;volatile
 12927                           
 12928                           ;writdata.c: 50: PORTB |= (data&0x0f);
 12929  003B60  5017               	movf	WriteDataXLCD@data,w,c
 12930  003B62  0B0F               	andlw	15
 12931  003B64  1281               	iorwf	3969,f,c	;volatile
 12932                           
 12933                           ;writdata.c: 52: DelayFor18TCY();
 12934  003B66  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 12935                           
 12936                           ;writdata.c: 53: LATCbits.LATC1 = 1;
 12937  003B6A  828B               	bsf	3979,1,c	;volatile
 12938                           
 12939                           ;writdata.c: 54: DelayFor18TCY();
 12940  003B6C  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 12941                           
 12942                           ;writdata.c: 55: LATCbits.LATC1 = 0;
 12943  003B70  928B               	bcf	3979,1,c	;volatile
 12944                           
 12945                           ;writdata.c: 59: TRISB |= 0x0f;
 12946  003B72  0E0F               	movlw	15
 12947  003B74  1293               	iorwf	3987,f,c	;volatile
 12948  003B76  0012               	return	
 12949  003B78                     __end_of_WriteDataXLCD:
 12950                           	opt stack 0
 12951                           tblptru	equ	0xFF8
 12952                           tblptrh	equ	0xFF7
 12953                           tblptrl	equ	0xFF6
 12954                           tablat	equ	0xFF5
 12955                           prodh	equ	0xFF4
 12956                           prodl	equ	0xFF3
 12957                           intcon	equ	0xFF2
 12958                           intcon2	equ	0xFF1
 12959                           indf0	equ	0xFEF
 12960                           postinc0	equ	0xFEE
 12961                           fsr0h	equ	0xFEA
 12962                           fsr0l	equ	0xFE9
 12963                           wreg	equ	0xFE8
 12964                           postdec1	equ	0xFE5
 12965                           fsr1l	equ	0xFE1
 12966                           indf2	equ	0xFDF
 12967                           postinc2	equ	0xFDE
 12968                           postdec2	equ	0xFDD
 12969                           fsr2h	equ	0xFDA
 12970                           fsr2l	equ	0xFD9
 12971                           status	equ	0xFD8
 12972                           
 12973 ;; *************** function _BusyXLCD *****************
 12974 ;; Defined at:
 12975 ;;		line 11 in file "busyxlcd.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;		None
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      unsigned char 
 12982 ;; Registers used:
 12983 ;;		wreg, cstack
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;Total ram usage:        0 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; Hardware stack levels required when called:    5
 12996 ;; This function calls:
 12997 ;;		_DelayFor18TCY
 12998 ;; This function is called by:
 12999 ;;		_init_XLCD
 13000 ;;		_clear_display
 13001 ;;		_OpenXLCD
 13002 ;;		_putrsXLCD
 13003 ;;		_putsXLCD
 13004 ;; This function uses a non-reentrant model
 13005 ;;
 13006                           
 13007                           	psect	text50
 13008  003B78                     __ptext50:
 13009                           	opt stack 0
 13010  003B78                     _BusyXLCD:
 13011                           	opt stack 23
 13012                           
 13013                           ;busyxlcd.c: 13: LATCbits.LATC2 = 1;
 13014                           
 13015                           ;incstack = 0
 13016  003B78  848B               	bsf	3979,2,c	;volatile
 13017                           
 13018                           ;busyxlcd.c: 14: LATCbits.LATC0 = 0;
 13019  003B7A  908B               	bcf	3979,0,c	;volatile
 13020                           
 13021                           ;busyxlcd.c: 15: DelayFor18TCY();
 13022  003B7C  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13023                           
 13024                           ;busyxlcd.c: 16: LATCbits.LATC1 = 1;
 13025  003B80  828B               	bsf	3979,1,c	;volatile
 13026                           
 13027                           ;busyxlcd.c: 17: DelayFor18TCY();
 13028  003B82  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13029                           
 13030                           ;busyxlcd.c: 35: if(PORTB&0x08)
 13031  003B86  A681               	btfss	3969,3,c	;volatile
 13032  003B88  D00A               	goto	l374
 13033                           
 13034                           ;busyxlcd.c: 37: {
 13035                           ;busyxlcd.c: 38: LATCbits.LATC1 = 0;
 13036  003B8A  928B               	bcf	3979,1,c	;volatile
 13037                           
 13038                           ;busyxlcd.c: 39: DelayFor18TCY();
 13039  003B8C  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13040                           
 13041                           ;busyxlcd.c: 40: LATCbits.LATC1 = 1;
 13042  003B90  828B               	bsf	3979,1,c	;volatile
 13043                           
 13044                           ;busyxlcd.c: 41: DelayFor18TCY();
 13045  003B92  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13046                           
 13047                           ;busyxlcd.c: 42: LATCbits.LATC1 = 0;
 13048  003B96  928B               	bcf	3979,1,c	;volatile
 13049                           
 13050                           ;busyxlcd.c: 43: LATCbits.LATC2 = 0;
 13051  003B98  948B               	bcf	3979,2,c	;volatile
 13052                           
 13053                           ;busyxlcd.c: 44: return 1;
 13054  003B9A  0E01               	movlw	1
 13055                           
 13056                           ;busyxlcd.c: 45: }
 13057  003B9C  0012               	return	
 13058  003B9E                     l374:
 13059                           
 13060                           ;busyxlcd.c: 46: else
 13061                           ;busyxlcd.c: 47: {
 13062                           ;busyxlcd.c: 48: LATCbits.LATC1 = 0;
 13063  003B9E  928B               	bcf	3979,1,c	;volatile
 13064                           
 13065                           ;busyxlcd.c: 49: DelayFor18TCY();
 13066  003BA0  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13067                           
 13068                           ;busyxlcd.c: 50: LATCbits.LATC1 = 1;
 13069  003BA4  828B               	bsf	3979,1,c	;volatile
 13070                           
 13071                           ;busyxlcd.c: 51: DelayFor18TCY();
 13072  003BA6  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13073                           
 13074                           ;busyxlcd.c: 52: LATCbits.LATC1 = 0;
 13075  003BAA  928B               	bcf	3979,1,c	;volatile
 13076                           
 13077                           ;busyxlcd.c: 53: LATCbits.LATC2 = 0;
 13078  003BAC  948B               	bcf	3979,2,c	;volatile
 13079                           
 13080                           ;busyxlcd.c: 54: return 0;
 13081  003BAE  0E00               	movlw	0
 13082  003BB0  0012               	return	
 13083  003BB2                     __end_of_BusyXLCD:
 13084                           	opt stack 0
 13085                           tblptru	equ	0xFF8
 13086                           tblptrh	equ	0xFF7
 13087                           tblptrl	equ	0xFF6
 13088                           tablat	equ	0xFF5
 13089                           prodh	equ	0xFF4
 13090                           prodl	equ	0xFF3
 13091                           intcon	equ	0xFF2
 13092                           intcon2	equ	0xFF1
 13093                           indf0	equ	0xFEF
 13094                           postinc0	equ	0xFEE
 13095                           fsr0h	equ	0xFEA
 13096                           fsr0l	equ	0xFE9
 13097                           wreg	equ	0xFE8
 13098                           postdec1	equ	0xFE5
 13099                           fsr1l	equ	0xFE1
 13100                           indf2	equ	0xFDF
 13101                           postinc2	equ	0xFDE
 13102                           postdec2	equ	0xFDD
 13103                           fsr2h	equ	0xFDA
 13104                           fsr2l	equ	0xFD9
 13105                           status	equ	0xFD8
 13106                           
 13107 ;; *************** function ___lwtoft *****************
 13108 ;; Defined at:
 13109 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwtoft.c"
 13110 ;; Parameters:    Size  Location     Type
 13111 ;;  c               2   49[COMRAM] unsigned int 
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;		None
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  3   49[COMRAM] float 
 13116 ;; Registers used:
 13117 ;;		wreg, status,2, status,0, cstack
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13123 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13126 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13127 ;;Total ram usage:        3 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:    5
 13130 ;; This function calls:
 13131 ;;		___ftpack
 13132 ;; This function is called by:
 13133 ;;		_contrast_display
 13134 ;;		_brightness_display
 13135 ;;		_voltage_set_display
 13136 ;;		_current_protection_set_display
 13137 ;;		_current_limit_set_display
 13138 ;;		_main
 13139 ;; This function uses a non-reentrant model
 13140 ;;
 13141                           
 13142                           	psect	text51
 13143  003DF4                     __ptext51:
 13144                           	opt stack 0
 13145  003DF4                     ___lwtoft:
 13146                           	opt stack 24
 13147                           
 13148                           ;incstack = 0
 13149  003DF4  C032  F017         	movff	___lwtoft@c,___ftpack@arg
 13150  003DF8  C033  F018         	movff	___lwtoft@c+1,___ftpack@arg+1
 13151  003DFC  6A19               	clrf	___ftpack@arg+2,c
 13152  003DFE  0E8E               	movlw	142
 13153  003E00  6E1A               	movwf	___ftpack@exp,c
 13154  003E02  0E00               	movlw	0
 13155  003E04  6E1B               	movwf	___ftpack@sign,c
 13156  003E06  EC44  F01A         	call	___ftpack	;wreg free
 13157  003E0A  C017  F032         	movff	?___ftpack,?___lwtoft
 13158  003E0E  C018  F033         	movff	?___ftpack+1,?___lwtoft+1
 13159  003E12  C019  F034         	movff	?___ftpack+2,?___lwtoft+2
 13160  003E16  0012               	return	
 13161  003E18                     __end_of___lwtoft:
 13162                           	opt stack 0
 13163                           tblptru	equ	0xFF8
 13164                           tblptrh	equ	0xFF7
 13165                           tblptrl	equ	0xFF6
 13166                           tablat	equ	0xFF5
 13167                           prodh	equ	0xFF4
 13168                           prodl	equ	0xFF3
 13169                           intcon	equ	0xFF2
 13170                           intcon2	equ	0xFF1
 13171                           indf0	equ	0xFEF
 13172                           postinc0	equ	0xFEE
 13173                           fsr0h	equ	0xFEA
 13174                           fsr0l	equ	0xFE9
 13175                           wreg	equ	0xFE8
 13176                           postdec1	equ	0xFE5
 13177                           fsr1l	equ	0xFE1
 13178                           indf2	equ	0xFDF
 13179                           postinc2	equ	0xFDE
 13180                           postdec2	equ	0xFDD
 13181                           fsr2h	equ	0xFDA
 13182                           fsr2l	equ	0xFD9
 13183                           status	equ	0xFD8
 13184                           
 13185 ;; *************** function ___ftpack *****************
 13186 ;; Defined at:
 13187 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\float.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  arg             3   22[COMRAM] unsigned um
 13190 ;;  exp             1   25[COMRAM] unsigned char 
 13191 ;;  sign            1   26[COMRAM] unsigned char 
 13192 ;; Auto vars:     Size  Location     Type
 13193 ;;		None
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  3   22[COMRAM] float 
 13196 ;; Registers used:
 13197 ;;		wreg, status,2, status,0
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13203 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13205 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13206 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13207 ;;Total ram usage:        8 bytes
 13208 ;; Hardware stack levels used:    1
 13209 ;; Hardware stack levels required when called:    4
 13210 ;; This function calls:
 13211 ;;		Nothing
 13212 ;; This function is called by:
 13213 ;;		___ftadd
 13214 ;;		___ftdiv
 13215 ;;		___ftmul
 13216 ;;		___lltoft
 13217 ;;		___lwtoft
 13218 ;; This function uses a non-reentrant model
 13219 ;;
 13220                           
 13221                           	psect	text52
 13222  003488                     __ptext52:
 13223                           	opt stack 0
 13224  003488                     ___ftpack:
 13225                           	opt stack 22
 13226                           
 13227                           ;incstack = 0
 13228  003488  501A               	movf	___ftpack@exp,w,c
 13229  00348A  B4D8               	btfsc	status,2,c
 13230  00348C  D005               	goto	l5880
 13231  00348E  5017               	movf	___ftpack@arg,w,c
 13232  003490  1018               	iorwf	___ftpack@arg+1,w,c
 13233  003492  1019               	iorwf	___ftpack@arg+2,w,c
 13234  003494  A4D8               	btfss	status,2,c
 13235  003496  D00C               	goto	l5886
 13236  003498                     l5880:
 13237  003498  0E00               	movlw	0
 13238  00349A  6E17               	movwf	?___ftpack,c
 13239  00349C  0E00               	movlw	0
 13240  00349E  6E18               	movwf	?___ftpack+1,c
 13241  0034A0  0E00               	movlw	0
 13242  0034A2  6E19               	movwf	?___ftpack+2,c
 13243  0034A4  0012               	return	
 13244  0034A6                     l5884:
 13245  0034A6  2A1A               	incf	___ftpack@exp,f,c
 13246  0034A8  90D8               	bcf	status,0,c
 13247  0034AA  3219               	rrcf	___ftpack@arg+2,f,c
 13248  0034AC  3218               	rrcf	___ftpack@arg+1,f,c
 13249  0034AE  3217               	rrcf	___ftpack@arg,f,c
 13250  0034B0                     l5886:
 13251  0034B0  0E00               	movlw	0
 13252  0034B2  1417               	andwf	___ftpack@arg,w,c
 13253  0034B4  6E1C               	movwf	??___ftpack& (0+255),c
 13254  0034B6  0E00               	movlw	0
 13255  0034B8  1418               	andwf	___ftpack@arg+1,w,c
 13256  0034BA  6E1D               	movwf	(??___ftpack+1)& (0+255),c
 13257  0034BC  0EFE               	movlw	254
 13258  0034BE  1419               	andwf	___ftpack@arg+2,w,c
 13259  0034C0  6E1E               	movwf	(??___ftpack+2)& (0+255),c
 13260  0034C2  501C               	movf	??___ftpack,w,c
 13261  0034C4  101D               	iorwf	??___ftpack+1,w,c
 13262  0034C6  101E               	iorwf	??___ftpack+2,w,c
 13263  0034C8  B4D8               	btfsc	status,2,c
 13264  0034CA  D00C               	goto	l5892
 13265  0034CC  D7EC               	goto	l5884
 13266  0034CE                     l5888:
 13267  0034CE  2A1A               	incf	___ftpack@exp,f,c
 13268  0034D0  0E01               	movlw	1
 13269  0034D2  2617               	addwf	___ftpack@arg,f,c
 13270  0034D4  0E00               	movlw	0
 13271  0034D6  2218               	addwfc	___ftpack@arg+1,f,c
 13272  0034D8  0E00               	movlw	0
 13273  0034DA  2219               	addwfc	___ftpack@arg+2,f,c
 13274  0034DC  90D8               	bcf	status,0,c
 13275  0034DE  3219               	rrcf	___ftpack@arg+2,f,c
 13276  0034E0  3218               	rrcf	___ftpack@arg+1,f,c
 13277  0034E2  3217               	rrcf	___ftpack@arg,f,c
 13278  0034E4                     l5892:
 13279  0034E4  0E00               	movlw	0
 13280  0034E6  1417               	andwf	___ftpack@arg,w,c
 13281  0034E8  6E1C               	movwf	??___ftpack& (0+255),c
 13282  0034EA  0E00               	movlw	0
 13283  0034EC  1418               	andwf	___ftpack@arg+1,w,c
 13284  0034EE  6E1D               	movwf	(??___ftpack+1)& (0+255),c
 13285  0034F0  0EFF               	movlw	255
 13286  0034F2  1419               	andwf	___ftpack@arg+2,w,c
 13287  0034F4  6E1E               	movwf	(??___ftpack+2)& (0+255),c
 13288  0034F6  501C               	movf	??___ftpack,w,c
 13289  0034F8  101D               	iorwf	??___ftpack+1,w,c
 13290  0034FA  101E               	iorwf	??___ftpack+2,w,c
 13291  0034FC  B4D8               	btfsc	status,2,c
 13292  0034FE  D006               	goto	l5896
 13293  003500  D7E6               	goto	l5888
 13294  003502                     l5894:
 13295  003502  061A               	decf	___ftpack@exp,f,c
 13296  003504  90D8               	bcf	status,0,c
 13297  003506  3617               	rlcf	___ftpack@arg,f,c
 13298  003508  3618               	rlcf	___ftpack@arg+1,f,c
 13299  00350A  3619               	rlcf	___ftpack@arg+2,f,c
 13300  00350C                     l5896:
 13301  00350C  BE18               	btfsc	___ftpack@arg+1,7,c
 13302  00350E  D003               	goto	l1025
 13303  003510  0E02               	movlw	2
 13304  003512  601A               	cpfslt	___ftpack@exp,c
 13305  003514  D7F6               	goto	l5894
 13306  003516                     l1025:
 13307  003516  A01A               	btfss	___ftpack@exp,0,c
 13308  003518  9E18               	bcf	___ftpack@arg+1,7,c
 13309  00351A  90D8               	bcf	status,0,c
 13310  00351C  321A               	rrcf	___ftpack@exp,f,c
 13311  00351E  501A               	movf	___ftpack@exp,w,c
 13312  003520  1219               	iorwf	___ftpack@arg+2,f,c
 13313  003522  501B               	movf	___ftpack@sign,w,c
 13314  003524  A4D8               	btfss	status,2,c
 13315  003526  8E19               	bsf	___ftpack@arg+2,7,c
 13316  003528  C017  F017         	movff	___ftpack@arg,?___ftpack
 13317  00352C  C018  F018         	movff	___ftpack@arg+1,?___ftpack+1
 13318  003530  C019  F019         	movff	___ftpack@arg+2,?___ftpack+2
 13319  003534  0012               	return	
 13320  003536                     __end_of___ftpack:
 13321                           	opt stack 0
 13322                           tblptru	equ	0xFF8
 13323                           tblptrh	equ	0xFF7
 13324                           tblptrl	equ	0xFF6
 13325                           tablat	equ	0xFF5
 13326                           prodh	equ	0xFF4
 13327                           prodl	equ	0xFF3
 13328                           intcon	equ	0xFF2
 13329                           intcon2	equ	0xFF1
 13330                           indf0	equ	0xFEF
 13331                           postinc0	equ	0xFEE
 13332                           fsr0h	equ	0xFEA
 13333                           fsr0l	equ	0xFE9
 13334                           wreg	equ	0xFE8
 13335                           postdec1	equ	0xFE5
 13336                           fsr1l	equ	0xFE1
 13337                           indf2	equ	0xFDF
 13338                           postinc2	equ	0xFDE
 13339                           postdec2	equ	0xFDD
 13340                           fsr2h	equ	0xFDA
 13341                           fsr2l	equ	0xFD9
 13342                           status	equ	0xFD8
 13343                           
 13344 ;; *************** function ___lwdiv *****************
 13345 ;; Defined at:
 13346 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;  dividend        2   42[COMRAM] unsigned int 
 13349 ;;  divisor         2   44[COMRAM] unsigned int 
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;  quotient        2   46[COMRAM] unsigned int 
 13352 ;;  counter         1   48[COMRAM] unsigned char 
 13353 ;; Return value:  Size  Location     Type
 13354 ;;                  2   42[COMRAM] unsigned int 
 13355 ;; Registers used:
 13356 ;;		wreg, status,2, status,0
 13357 ;; Tracked objects:
 13358 ;;		On entry : 0/0
 13359 ;;		On exit  : 0/0
 13360 ;;		Unchanged: 0/0
 13361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13365 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13366 ;;Total ram usage:        7 bytes
 13367 ;; Hardware stack levels used:    1
 13368 ;; Hardware stack levels required when called:    4
 13369 ;; This function calls:
 13370 ;;		Nothing
 13371 ;; This function is called by:
 13372 ;;		_contrast_display
 13373 ;;		_brightness_display
 13374 ;; This function uses a non-reentrant model
 13375 ;;
 13376                           
 13377                           	psect	text53
 13378  003A0C                     __ptext53:
 13379                           	opt stack 0
 13380  003A0C                     ___lwdiv:
 13381                           	opt stack 25
 13382                           
 13383                           ;incstack = 0
 13384  003A0C  0E00               	movlw	0
 13385  003A0E  6E30               	movwf	___lwdiv@quotient+1,c
 13386  003A10  0E00               	movlw	0
 13387  003A12  6E2F               	movwf	___lwdiv@quotient,c
 13388  003A14  502D               	movf	___lwdiv@divisor,w,c
 13389  003A16  102E               	iorwf	___lwdiv@divisor+1,w,c
 13390  003A18  B4D8               	btfsc	status,2,c
 13391  003A1A  D01C               	goto	l1225
 13392  003A1C  0E01               	movlw	1
 13393  003A1E  6E31               	movwf	___lwdiv@counter,c
 13394  003A20  D004               	goto	l5060
 13395  003A22                     l5058:
 13396  003A22  90D8               	bcf	status,0,c
 13397  003A24  362D               	rlcf	___lwdiv@divisor,f,c
 13398  003A26  362E               	rlcf	___lwdiv@divisor+1,f,c
 13399  003A28  2A31               	incf	___lwdiv@counter,f,c
 13400  003A2A                     l5060:
 13401  003A2A  AE2E               	btfss	___lwdiv@divisor+1,7,c
 13402  003A2C  D7FA               	goto	l5058
 13403  003A2E                     l5062:
 13404  003A2E  90D8               	bcf	status,0,c
 13405  003A30  362F               	rlcf	___lwdiv@quotient,f,c
 13406  003A32  3630               	rlcf	___lwdiv@quotient+1,f,c
 13407  003A34  502D               	movf	___lwdiv@divisor,w,c
 13408  003A36  5C2B               	subwf	___lwdiv@dividend,w,c
 13409  003A38  502E               	movf	___lwdiv@divisor+1,w,c
 13410  003A3A  582C               	subwfb	___lwdiv@dividend+1,w,c
 13411  003A3C  A0D8               	btfss	status,0,c
 13412  003A3E  D005               	goto	l5070
 13413  003A40  502D               	movf	___lwdiv@divisor,w,c
 13414  003A42  5E2B               	subwf	___lwdiv@dividend,f,c
 13415  003A44  502E               	movf	___lwdiv@divisor+1,w,c
 13416  003A46  5A2C               	subwfb	___lwdiv@dividend+1,f,c
 13417  003A48  802F               	bsf	___lwdiv@quotient,0,c
 13418  003A4A                     l5070:
 13419  003A4A  90D8               	bcf	status,0,c
 13420  003A4C  322E               	rrcf	___lwdiv@divisor+1,f,c
 13421  003A4E  322D               	rrcf	___lwdiv@divisor,f,c
 13422  003A50  2E31               	decfsz	___lwdiv@counter,f,c
 13423  003A52  D7ED               	goto	l5062
 13424  003A54                     l1225:
 13425  003A54  C02F  F02B         	movff	___lwdiv@quotient,?___lwdiv
 13426  003A58  C030  F02C         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13427  003A5C  0012               	return		;funcret
 13428  003A5E                     __end_of___lwdiv:
 13429                           	opt stack 0
 13430                           tblptru	equ	0xFF8
 13431                           tblptrh	equ	0xFF7
 13432                           tblptrl	equ	0xFF6
 13433                           tablat	equ	0xFF5
 13434                           prodh	equ	0xFF4
 13435                           prodl	equ	0xFF3
 13436                           intcon	equ	0xFF2
 13437                           intcon2	equ	0xFF1
 13438                           indf0	equ	0xFEF
 13439                           postinc0	equ	0xFEE
 13440                           fsr0h	equ	0xFEA
 13441                           fsr0l	equ	0xFE9
 13442                           wreg	equ	0xFE8
 13443                           postdec1	equ	0xFE5
 13444                           fsr1l	equ	0xFE1
 13445                           indf2	equ	0xFDF
 13446                           postinc2	equ	0xFDE
 13447                           postdec2	equ	0xFDD
 13448                           fsr2h	equ	0xFDA
 13449                           fsr2l	equ	0xFD9
 13450                           status	equ	0xFD8
 13451                           
 13452 ;; *************** function _SetDDRamAddr *****************
 13453 ;; Defined at:
 13454 ;;		line 13 in file "setddram.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;  DDaddr          1    wreg     unsigned char 
 13457 ;; Auto vars:     Size  Location     Type
 13458 ;;  DDaddr          1   25[COMRAM] unsigned char 
 13459 ;; Return value:  Size  Location     Type
 13460 ;;                  1    wreg      void 
 13461 ;; Registers used:
 13462 ;;		wreg, status,2, status,0, cstack
 13463 ;; Tracked objects:
 13464 ;;		On entry : 0/0
 13465 ;;		On exit  : 0/0
 13466 ;;		Unchanged: 0/0
 13467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13470 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13471 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13472 ;;Total ram usage:        4 bytes
 13473 ;; Hardware stack levels used:    1
 13474 ;; Hardware stack levels required when called:    5
 13475 ;; This function calls:
 13476 ;;		_DelayFor18TCY
 13477 ;; This function is called by:
 13478 ;;		_default_display
 13479 ;;		_contrast_display
 13480 ;;		_brightness_display
 13481 ;;		_voltage_set_display
 13482 ;;		_current_protection_set_display
 13483 ;;		_current_limit_set_display
 13484 ;;		_current_auto_limit_set_display
 13485 ;;		_protection_display
 13486 ;;		_main
 13487 ;;		_OpenXLCD
 13488 ;; This function uses a non-reentrant model
 13489 ;;
 13490                           
 13491                           	psect	text54
 13492  003A5E                     __ptext54:
 13493                           	opt stack 0
 13494  003A5E                     _SetDDRamAddr:
 13495                           	opt stack 24
 13496                           
 13497                           ;incstack = 0
 13498                           ;SetDDRamAddr@DDaddr stored from wreg
 13499  003A5E  6E1A               	movwf	SetDDRamAddr@DDaddr,c
 13500                           
 13501                           ;setddram.c: 32: TRISB &= 0xf0;
 13502  003A60  0EF0               	movlw	240
 13503  003A62  1693               	andwf	3987,f,c	;volatile
 13504                           
 13505                           ;setddram.c: 33: PORTB &= 0xf0;
 13506  003A64  0EF0               	movlw	240
 13507  003A66  1681               	andwf	3969,f,c	;volatile
 13508                           
 13509                           ;setddram.c: 34: PORTB |= (((DDaddr | 0b10000000)>>4) & 0x0f);
 13510  003A68  501A               	movf	SetDDRamAddr@DDaddr,w,c
 13511  003A6A  6E17               	movwf	??_SetDDRamAddr& (0+255),c
 13512  003A6C  6A18               	clrf	(??_SetDDRamAddr+1)& (0+255),c
 13513  003A6E  8E17               	bsf	??_SetDDRamAddr,7,c
 13514  003A70  0E04               	movlw	4
 13515  003A72  6E19               	movwf	(??_SetDDRamAddr+2)& (0+255),c
 13516  003A74                     u3235:
 13517  003A74  3418               	rlcf	??_SetDDRamAddr+1,w,c
 13518  003A76  3218               	rrcf	??_SetDDRamAddr+1,f,c
 13519  003A78  3217               	rrcf	??_SetDDRamAddr,f,c
 13520  003A7A  2E19               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
 13521  003A7C  D7FB               	goto	u3235
 13522  003A7E  5017               	movf	??_SetDDRamAddr,w,c
 13523  003A80  0B0F               	andlw	15
 13524  003A82  1281               	iorwf	3969,f,c	;volatile
 13525                           
 13526                           ;setddram.c: 36: LATCbits.LATC2 = 0;
 13527  003A84  948B               	bcf	3979,2,c	;volatile
 13528                           
 13529                           ;setddram.c: 37: LATCbits.LATC0 = 0;
 13530  003A86  908B               	bcf	3979,0,c	;volatile
 13531                           
 13532                           ;setddram.c: 38: DelayFor18TCY();
 13533  003A88  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13534                           
 13535                           ;setddram.c: 39: LATCbits.LATC1 = 1;
 13536  003A8C  828B               	bsf	3979,1,c	;volatile
 13537                           
 13538                           ;setddram.c: 40: DelayFor18TCY();
 13539  003A8E  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13540                           
 13541                           ;setddram.c: 41: LATCbits.LATC1 = 0;
 13542  003A92  928B               	bcf	3979,1,c	;volatile
 13543                           
 13544                           ;setddram.c: 46: PORTB &= 0xf0;
 13545  003A94  0EF0               	movlw	240
 13546  003A96  1681               	andwf	3969,f,c	;volatile
 13547                           
 13548                           ;setddram.c: 47: PORTB |= (DDaddr&0x0f);
 13549  003A98  501A               	movf	SetDDRamAddr@DDaddr,w,c
 13550  003A9A  0B0F               	andlw	15
 13551  003A9C  1281               	iorwf	3969,f,c	;volatile
 13552                           
 13553                           ;setddram.c: 49: DelayFor18TCY();
 13554  003A9E  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13555                           
 13556                           ;setddram.c: 50: LATCbits.LATC1 = 1;
 13557  003AA2  828B               	bsf	3979,1,c	;volatile
 13558                           
 13559                           ;setddram.c: 51: DelayFor18TCY();
 13560  003AA4  EC1B  F01F         	call	_DelayFor18TCY	;wreg free
 13561                           
 13562                           ;setddram.c: 52: LATCbits.LATC1 = 0;
 13563  003AA8  928B               	bcf	3979,1,c	;volatile
 13564                           
 13565                           ;setddram.c: 56: TRISB |= 0x0f;
 13566  003AAA  0E0F               	movlw	15
 13567  003AAC  1293               	iorwf	3987,f,c	;volatile
 13568  003AAE  0012               	return	
 13569  003AB0                     __end_of_SetDDRamAddr:
 13570                           	opt stack 0
 13571                           tblptru	equ	0xFF8
 13572                           tblptrh	equ	0xFF7
 13573                           tblptrl	equ	0xFF6
 13574                           tablat	equ	0xFF5
 13575                           prodh	equ	0xFF4
 13576                           prodl	equ	0xFF3
 13577                           intcon	equ	0xFF2
 13578                           intcon2	equ	0xFF1
 13579                           indf0	equ	0xFEF
 13580                           postinc0	equ	0xFEE
 13581                           fsr0h	equ	0xFEA
 13582                           fsr0l	equ	0xFE9
 13583                           wreg	equ	0xFE8
 13584                           postdec1	equ	0xFE5
 13585                           fsr1l	equ	0xFE1
 13586                           indf2	equ	0xFDF
 13587                           postinc2	equ	0xFDE
 13588                           postdec2	equ	0xFDD
 13589                           fsr2h	equ	0xFDA
 13590                           fsr2l	equ	0xFD9
 13591                           status	equ	0xFD8
 13592                           
 13593 ;; *************** function _DelayFor18TCY *****************
 13594 ;; Defined at:
 13595 ;;		line 49 in file "LCD_user_functions.h"
 13596 ;; Parameters:    Size  Location     Type
 13597 ;;		None
 13598 ;; Auto vars:     Size  Location     Type
 13599 ;;		None
 13600 ;; Return value:  Size  Location     Type
 13601 ;;                  1    wreg      void 
 13602 ;; Registers used:
 13603 ;;		None
 13604 ;; Tracked objects:
 13605 ;;		On entry : 0/0
 13606 ;;		On exit  : 0/0
 13607 ;;		Unchanged: 0/0
 13608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13613 ;;Total ram usage:        0 bytes
 13614 ;; Hardware stack levels used:    1
 13615 ;; Hardware stack levels required when called:    4
 13616 ;; This function calls:
 13617 ;;		Nothing
 13618 ;; This function is called by:
 13619 ;;		_BusyXLCD
 13620 ;;		_SetDDRamAddr
 13621 ;;		_WriteCmdXLCD
 13622 ;;		_WriteDataXLCD
 13623 ;;		_ReadAddrXLCD
 13624 ;;		_ReadDataXLCD
 13625 ;;		_SetCGRamAddr
 13626 ;; This function uses a non-reentrant model
 13627 ;;
 13628                           
 13629                           	psect	text55
 13630  003E36                     __ptext55:
 13631                           	opt stack 0
 13632  003E36                     _DelayFor18TCY:
 13633                           	opt stack 23
 13634                           
 13635                           ;LCD_user_functions.h: 50: __nop(); __nop(); __nop(); __nop();
 13636                           
 13637                           ;incstack = 0
 13638  003E36  F000               	nop	
 13639  003E38  F000               	nop	
 13640  003E3A  F000               	nop	
 13641  003E3C  F000               	nop	
 13642                           
 13643                           ;LCD_user_functions.h: 51: __nop(); __nop(); __nop(); __nop();
 13644  003E3E  F000               	nop	
 13645  003E40  F000               	nop	
 13646  003E42  F000               	nop	
 13647  003E44  F000               	nop	
 13648                           
 13649                           ;LCD_user_functions.h: 52: __nop(); __nop(); __nop(); __nop();
 13650  003E46  F000               	nop	
 13651  003E48  F000               	nop	
 13652  003E4A  F000               	nop	
 13653  003E4C  F000               	nop	
 13654                           
 13655                           ;LCD_user_functions.h: 53: __nop(); __nop();
 13656  003E4E  F000               	nop	
 13657  003E50  F000               	nop	
 13658                           
 13659                           ;LCD_user_functions.h: 54: return;
 13660  003E52  0012               	return		;funcret
 13661  003E54                     __end_of_DelayFor18TCY:
 13662                           	opt stack 0
 13663                           tblptru	equ	0xFF8
 13664                           tblptrh	equ	0xFF7
 13665                           tblptrl	equ	0xFF6
 13666                           tablat	equ	0xFF5
 13667                           prodh	equ	0xFF4
 13668                           prodl	equ	0xFF3
 13669                           intcon	equ	0xFF2
 13670                           intcon2	equ	0xFF1
 13671                           indf0	equ	0xFEF
 13672                           postinc0	equ	0xFEE
 13673                           fsr0h	equ	0xFEA
 13674                           fsr0l	equ	0xFE9
 13675                           wreg	equ	0xFE8
 13676                           postdec1	equ	0xFE5
 13677                           fsr1l	equ	0xFE1
 13678                           indf2	equ	0xFDF
 13679                           postinc2	equ	0xFDE
 13680                           postdec2	equ	0xFDD
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function _SetChanADC *****************
 13686 ;; Defined at:
 13687 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\ADC\adcsetch.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  channel         1    wreg     unsigned char 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  channel         1   23[COMRAM] unsigned char 
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  1    wreg      void 
 13694 ;; Registers used:
 13695 ;;		wreg, status,2, status,0
 13696 ;; Tracked objects:
 13697 ;;		On entry : 0/0
 13698 ;;		On exit  : 0/0
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13705 ;;Total ram usage:        2 bytes
 13706 ;; Hardware stack levels used:    1
 13707 ;; Hardware stack levels required when called:    4
 13708 ;; This function calls:
 13709 ;;		Nothing
 13710 ;; This function is called by:
 13711 ;;		_main
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           	psect	text56
 13716  003F08                     __ptext56:
 13717                           	opt stack 0
 13718  003F08                     _SetChanADC:
 13719                           	opt stack 26
 13720                           
 13721                           ;incstack = 0
 13722                           ;SetChanADC@channel stored from wreg
 13723  003F08  6E18               	movwf	SetChanADC@channel,c
 13724  003F0A  CFC2 F017          	movff	4034,??_SetChanADC	;volatile
 13725  003F0E  0EC3               	movlw	195
 13726  003F10  1617               	andwf	??_SetChanADC,f,c
 13727  003F12  90D8               	bcf	status,0,c
 13728  003F14  3018               	rrcf	SetChanADC@channel,w,c
 13729  003F16  0B3C               	andlw	60
 13730  003F18  1017               	iorwf	??_SetChanADC,w,c
 13731  003F1A  6EC2               	movwf	4034,c	;volatile
 13732  003F1C  0012               	return		;funcret
 13733  003F1E                     __end_of_SetChanADC:
 13734                           	opt stack 0
 13735                           tblptru	equ	0xFF8
 13736                           tblptrh	equ	0xFF7
 13737                           tblptrl	equ	0xFF6
 13738                           tablat	equ	0xFF5
 13739                           prodh	equ	0xFF4
 13740                           prodl	equ	0xFF3
 13741                           intcon	equ	0xFF2
 13742                           intcon2	equ	0xFF1
 13743                           indf0	equ	0xFEF
 13744                           postinc0	equ	0xFEE
 13745                           fsr0h	equ	0xFEA
 13746                           fsr0l	equ	0xFE9
 13747                           wreg	equ	0xFE8
 13748                           postdec1	equ	0xFE5
 13749                           fsr1l	equ	0xFE1
 13750                           indf2	equ	0xFDF
 13751                           postinc2	equ	0xFDE
 13752                           postdec2	equ	0xFDD
 13753                           fsr2h	equ	0xFDA
 13754                           fsr2l	equ	0xFD9
 13755                           status	equ	0xFD8
 13756                           
 13757 ;; *************** function _ReadADC *****************
 13758 ;; Defined at:
 13759 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\ADC\adcread.c"
 13760 ;; Parameters:    Size  Location     Type
 13761 ;;		None
 13762 ;; Auto vars:     Size  Location     Type
 13763 ;;		None
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  2   22[COMRAM] int 
 13766 ;; Registers used:
 13767 ;;		wreg, status,2
 13768 ;; Tracked objects:
 13769 ;;		On entry : 0/0
 13770 ;;		On exit  : 0/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13776 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13777 ;;Total ram usage:        4 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; Hardware stack levels required when called:    4
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		_main
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           	psect	text57
 13788  003F52                     __ptext57:
 13789                           	opt stack 0
 13790  003F52                     _ReadADC:
 13791                           	opt stack 26
 13792                           
 13793                           ;incstack = 0
 13794  003F52  50C4               	movf	4036,w,c	;volatile
 13795  003F54  6E19               	movwf	??_ReadADC& (0+255),c
 13796  003F56  50C3               	movf	4035,w,c	;volatile
 13797  003F58  6E17               	movwf	?_ReadADC,c
 13798  003F5A  C019  F018         	movff	??_ReadADC,?_ReadADC+1
 13799  003F5E  0012               	return	
 13800  003F60                     __end_of_ReadADC:
 13801                           	opt stack 0
 13802                           tblptru	equ	0xFF8
 13803                           tblptrh	equ	0xFF7
 13804                           tblptrl	equ	0xFF6
 13805                           tablat	equ	0xFF5
 13806                           prodh	equ	0xFF4
 13807                           prodl	equ	0xFF3
 13808                           intcon	equ	0xFF2
 13809                           intcon2	equ	0xFF1
 13810                           indf0	equ	0xFEF
 13811                           postinc0	equ	0xFEE
 13812                           fsr0h	equ	0xFEA
 13813                           fsr0l	equ	0xFE9
 13814                           wreg	equ	0xFE8
 13815                           postdec1	equ	0xFE5
 13816                           fsr1l	equ	0xFE1
 13817                           indf2	equ	0xFDF
 13818                           postinc2	equ	0xFDE
 13819                           postdec2	equ	0xFDD
 13820                           fsr2h	equ	0xFDA
 13821                           fsr2l	equ	0xFD9
 13822                           status	equ	0xFD8
 13823                           
 13824 ;; *************** function _Delay1Sec *****************
 13825 ;; Defined at:
 13826 ;;		line 65 in file "LCD_user_functions.h"
 13827 ;; Parameters:    Size  Location     Type
 13828 ;;		None
 13829 ;; Auto vars:     Size  Location     Type
 13830 ;;  cntDelay        2   23[COMRAM] int 
 13831 ;; Return value:  Size  Location     Type
 13832 ;;                  1    wreg      void 
 13833 ;; Registers used:
 13834 ;;		wreg, status,2, status,0
 13835 ;; Tracked objects:
 13836 ;;		On entry : 0/0
 13837 ;;		On exit  : 0/0
 13838 ;;		Unchanged: 0/0
 13839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13843 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13844 ;;Total ram usage:        3 bytes
 13845 ;; Hardware stack levels used:    1
 13846 ;; Hardware stack levels required when called:    4
 13847 ;; This function calls:
 13848 ;;		Nothing
 13849 ;; This function is called by:
 13850 ;;		_main
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           	psect	text58
 13855  003CA8                     __ptext58:
 13856                           	opt stack 0
 13857  003CA8                     _Delay1Sec:
 13858                           	opt stack 26
 13859                           
 13860                           ;LCD_user_functions.h: 66: for (int cntDelay = 0; cntDelay < 20; cntDelay ++) _delay((un
      +                          signed long)((50)*(8000000/4000.0)));
 13861                           
 13862                           ;incstack = 0
 13863  003CA8  0E00               	movlw	0
 13864  003CAA  6E19               	movwf	Delay1Sec@cntDelay+1,c
 13865  003CAC  0E00               	movlw	0
 13866  003CAE  6E18               	movwf	Delay1Sec@cntDelay,c
 13867  003CB0                     l5108:
 13868  003CB0  BE19               	btfsc	Delay1Sec@cntDelay+1,7,c
 13869  003CB2  D006               	goto	l5112
 13870  003CB4  5019               	movf	Delay1Sec@cntDelay+1,w,c
 13871  003CB6  E10E               	bnz	l106
 13872  003CB8  0E14               	movlw	20
 13873  003CBA  5C18               	subwf	Delay1Sec@cntDelay,w,c
 13874  003CBC  B0D8               	btfsc	status,0,c
 13875  003CBE  0012               	return	
 13876  003CC0                     l5112:
 13877  003CC0  0E82               	movlw	130
 13878  003CC2  6E17               	movwf	??_Delay1Sec& (0+255),c
 13879  003CC4  0EDE               	movlw	222
 13880  003CC6                     u7617:
 13881  003CC6  2EE8               	decfsz	wreg,f,c
 13882  003CC8  D7FE               	bra	u7617
 13883  003CCA  2E17               	decfsz	??_Delay1Sec& (0+255),f,c
 13884  003CCC  D7FC               	bra	u7617
 13885  003CCE  4A18               	infsnz	Delay1Sec@cntDelay,f,c
 13886  003CD0  2A19               	incf	Delay1Sec@cntDelay+1,f,c
 13887  003CD2  D7EE               	goto	l5108
 13888  003CD4                     l106:
 13889  003CD4  0012               	return		;funcret
 13890  003CD6                     __end_of_Delay1Sec:
 13891                           	opt stack 0
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           intcon2	equ	0xFF1
 13900                           indf0	equ	0xFEF
 13901                           postinc0	equ	0xFEE
 13902                           fsr0h	equ	0xFEA
 13903                           fsr0l	equ	0xFE9
 13904                           wreg	equ	0xFE8
 13905                           postdec1	equ	0xFE5
 13906                           fsr1l	equ	0xFE1
 13907                           indf2	equ	0xFDF
 13908                           postinc2	equ	0xFDE
 13909                           postdec2	equ	0xFDD
 13910                           fsr2h	equ	0xFDA
 13911                           fsr2l	equ	0xFD9
 13912                           status	equ	0xFD8
 13913                           
 13914 ;; *************** function _ConvertADC *****************
 13915 ;; Defined at:
 13916 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\ADC\adcconv.c"
 13917 ;; Parameters:    Size  Location     Type
 13918 ;;		None
 13919 ;; Auto vars:     Size  Location     Type
 13920 ;;		None
 13921 ;; Return value:  Size  Location     Type
 13922 ;;                  1    wreg      void 
 13923 ;; Registers used:
 13924 ;;		None
 13925 ;; Tracked objects:
 13926 ;;		On entry : 0/0
 13927 ;;		On exit  : 0/0
 13928 ;;		Unchanged: 0/0
 13929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13934 ;;Total ram usage:        0 bytes
 13935 ;; Hardware stack levels used:    1
 13936 ;; Hardware stack levels required when called:    4
 13937 ;; This function calls:
 13938 ;;		Nothing
 13939 ;; This function is called by:
 13940 ;;		_main
 13941 ;; This function uses a non-reentrant model
 13942 ;;
 13943                           
 13944                           	psect	text59
 13945  003F86                     __ptext59:
 13946                           	opt stack 0
 13947  003F86                     _ConvertADC:
 13948                           	opt stack 26
 13949                           
 13950                           ;incstack = 0
 13951  003F86  82C2               	bsf	4034,1,c	;volatile
 13952  003F88  0012               	return		;funcret
 13953  003F8A                     __end_of_ConvertADC:
 13954                           	opt stack 0
 13955                           tblptru	equ	0xFF8
 13956                           tblptrh	equ	0xFF7
 13957                           tblptrl	equ	0xFF6
 13958                           tablat	equ	0xFF5
 13959                           prodh	equ	0xFF4
 13960                           prodl	equ	0xFF3
 13961                           intcon	equ	0xFF2
 13962                           intcon2	equ	0xFF1
 13963                           indf0	equ	0xFEF
 13964                           postinc0	equ	0xFEE
 13965                           fsr0h	equ	0xFEA
 13966                           fsr0l	equ	0xFE9
 13967                           wreg	equ	0xFE8
 13968                           postdec1	equ	0xFE5
 13969                           fsr1l	equ	0xFE1
 13970                           indf2	equ	0xFDF
 13971                           postinc2	equ	0xFDE
 13972                           postdec2	equ	0xFDD
 13973                           fsr2h	equ	0xFDA
 13974                           fsr2l	equ	0xFD9
 13975                           status	equ	0xFD8
 13976                           
 13977 ;; *************** function _BusyADC *****************
 13978 ;; Defined at:
 13979 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\ADC\adcbusy.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;		None
 13982 ;; Auto vars:     Size  Location     Type
 13983 ;;		None
 13984 ;; Return value:  Size  Location     Type
 13985 ;;                  1    wreg      unsigned char 
 13986 ;; Registers used:
 13987 ;;		wreg
 13988 ;; Tracked objects:
 13989 ;;		On entry : 0/0
 13990 ;;		On exit  : 0/0
 13991 ;;		Unchanged: 0/0
 13992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;Total ram usage:        0 bytes
 13998 ;; Hardware stack levels used:    1
 13999 ;; Hardware stack levels required when called:    4
 14000 ;; This function calls:
 14001 ;;		Nothing
 14002 ;; This function is called by:
 14003 ;;		_main
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           	psect	text60
 14008  003F60                     __ptext60:
 14009                           	opt stack 0
 14010  003F60                     _BusyADC:
 14011                           	opt stack 26
 14012                           
 14013                           ;incstack = 0
 14014  003F60  A2C2               	btfss	4034,1,c	;volatile
 14015  003F62  D002               	goto	u4930
 14016  003F64  0E01               	movlw	1
 14017  003F66  0012               	return	
 14018  003F68                     u4930:
 14019  003F68  0E00               	movlw	0
 14020  003F6A  0012               	return	
 14021  003F6C                     __end_of_BusyADC:
 14022                           	opt stack 0
 14023                           tblptru	equ	0xFF8
 14024                           tblptrh	equ	0xFF7
 14025                           tblptrl	equ	0xFF6
 14026                           tablat	equ	0xFF5
 14027                           prodh	equ	0xFF4
 14028                           prodl	equ	0xFF3
 14029                           intcon	equ	0xFF2
 14030                           intcon2	equ	0xFF1
 14031                           indf0	equ	0xFEF
 14032                           postinc0	equ	0xFEE
 14033                           fsr0h	equ	0xFEA
 14034                           fsr0l	equ	0xFE9
 14035                           wreg	equ	0xFE8
 14036                           postdec1	equ	0xFE5
 14037                           fsr1l	equ	0xFE1
 14038                           indf2	equ	0xFDF
 14039                           postinc2	equ	0xFDE
 14040                           postdec2	equ	0xFDD
 14041                           fsr2h	equ	0xFDA
 14042                           fsr2l	equ	0xFD9
 14043                           status	equ	0xFD8
 14044                           
 14045 ;; *************** function _rotary_encoder *****************
 14046 ;; Defined at:
 14047 ;;		line 311 in file "lcd_trials_4bits.c"
 14048 ;; Parameters:    Size  Location     Type
 14049 ;;		None
 14050 ;; Auto vars:     Size  Location     Type
 14051 ;;		None
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  1    wreg      void 
 14054 ;; Registers used:
 14055 ;;		wreg, status,2, status,0, cstack
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14063 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14064 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14065 ;;Total ram usage:       16 bytes
 14066 ;; Hardware stack levels used:    1
 14067 ;; Hardware stack levels required when called:    3
 14068 ;; This function calls:
 14069 ;;		i2_send_dac_i_spi
 14070 ;;		i2_send_dac_u_spi
 14071 ;; This function is called by:
 14072 ;;		Interrupt level 2
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           	psect	intcode
 14077  000008                     __pintcode:
 14078                           	opt stack 0
 14079  000008                     _rotary_encoder:
 14080                           	opt stack 22
 14081                           
 14082                           ;incstack = 0
 14083  000008  8268               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14084  00000A  ED3A  F00F         	call	int_func,f	;refresh shadow registers
 14085                           tblptru	equ	0xFF8
 14086                           tblptrh	equ	0xFF7
 14087                           tblptrl	equ	0xFF6
 14088                           tablat	equ	0xFF5
 14089                           prodh	equ	0xFF4
 14090                           prodl	equ	0xFF3
 14091                           intcon	equ	0xFF2
 14092                           intcon2	equ	0xFF1
 14093                           indf0	equ	0xFEF
 14094                           postinc0	equ	0xFEE
 14095                           fsr0h	equ	0xFEA
 14096                           fsr0l	equ	0xFE9
 14097                           wreg	equ	0xFE8
 14098                           postdec1	equ	0xFE5
 14099                           fsr1l	equ	0xFE1
 14100                           indf2	equ	0xFDF
 14101                           postinc2	equ	0xFDE
 14102                           postdec2	equ	0xFDD
 14103                           fsr2h	equ	0xFDA
 14104                           fsr2l	equ	0xFD9
 14105                           status	equ	0xFD8
 14106                           
 14107                           	psect	intcode_body
 14108  001E74                     __pintcode_body:
 14109                           	opt stack 22
 14110  001E74                     int_func:
 14111                           	opt stack 22
 14112  001E74  0006               	pop		; remove dummy address from shadow register refresh
 14113  001E76  CFFA F009          	movff	pclath,??_rotary_encoder+2
 14114  001E7A  CFFB F00A          	movff	pclatu,??_rotary_encoder+3
 14115  001E7E  CFE9 F00B          	movff	fsr0l,??_rotary_encoder+4
 14116  001E82  CFEA F00C          	movff	fsr0h,??_rotary_encoder+5
 14117  001E86  CFE1 F00D          	movff	fsr1l,??_rotary_encoder+6
 14118  001E8A  CFE2 F00E          	movff	fsr1h,??_rotary_encoder+7
 14119  001E8E  CFD9 F00F          	movff	fsr2l,??_rotary_encoder+8
 14120  001E92  CFDA F010          	movff	fsr2h,??_rotary_encoder+9
 14121  001E96  CFF3 F011          	movff	prodl,??_rotary_encoder+10
 14122  001E9A  CFF4 F012          	movff	prodh,??_rotary_encoder+11
 14123  001E9E  CFF6 F013          	movff	tblptrl,??_rotary_encoder+12
 14124  001EA2  CFF7 F014          	movff	tblptrh,??_rotary_encoder+13
 14125  001EA6  CFF8 F015          	movff	tblptru,??_rotary_encoder+14
 14126  001EAA  CFF5 F016          	movff	tablat,??_rotary_encoder+15
 14127                           
 14128                           ;lcd_trials_4bits.c: 313: GIE = 0;
 14129  001EAE  9EF2               	bcf	intcon,7,c	;volatile
 14130                           
 14131                           ;lcd_trials_4bits.c: 314: if (RBIF == 1) {
 14132  001EB0  A0F2               	btfss	intcon,0,c	;volatile
 14133  001EB2  D0F8               	goto	i2l299
 14134                           
 14135                           ;lcd_trials_4bits.c: 315: if ((RB5 == 1) && (i_mode == 0)) {
 14136  001EB4  AA81               	btfss	3969,5,c	;volatile
 14137  001EB6  D016               	goto	i2l5470
 14138  001EB8  0100               	movlb	0	; () banked
 14139  001EBA  51E5               	movf	_i_mode& (0+255),w,b
 14140  001EBC  A4D8               	btfss	status,2,c
 14141  001EBE  D012               	goto	i2l5470
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;lcd_trials_4bits.c: 318: DAC_u = 0;
 14145  001EC0  0E00               	movlw	0
 14146  001EC2  6E64               	movwf	_DAC_u+1,c
 14147  001EC4  0E00               	movlw	0
 14148  001EC6  6E63               	movwf	_DAC_u,c
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;lcd_trials_4bits.c: 319: send_dac_u_spi();
 14152  001EC8  EC6B  F01E         	call	i2_send_dac_u_spi	;wreg free
 14153                           
 14154                           ;lcd_trials_4bits.c: 320: DAC_u = 11;
 14155  001ECC  0E00               	movlw	0
 14156  001ECE  6E64               	movwf	_DAC_u+1,c
 14157  001ED0  0E0B               	movlw	11
 14158  001ED2  6E63               	movwf	_DAC_u,c
 14159                           
 14160                           ;lcd_trials_4bits.c: 321: display_mode = 7;
 14161  001ED4  0E07               	movlw	7
 14162  001ED6  6E56               	movwf	_display_mode,c
 14163                           
 14164                           ;lcd_trials_4bits.c: 322: return_default_display_counter = 0;
 14165  001ED8  0E00               	movlw	0
 14166  001EDA  0100               	movlb	0	; () banked
 14167  001EDC  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
 14168  001EDE  0E00               	movlw	0
 14169  001EE0  6FDD               	movwf	_return_default_display_counter& (0+255),b
 14170                           
 14171                           ;lcd_trials_4bits.c: 323: } else {
 14172  001EE2  D0DB               	goto	i2l275
 14173  001EE4                     i2l5470:
 14174                           
 14175                           ;lcd_trials_4bits.c: 324: if (RB7 == RA4) {
 14176  001EE4  A880               	btfss	3968,4,c	;volatile
 14177  001EE6  D002               	goto	i2u497_40
 14178  001EE8  0E01               	movlw	1
 14179  001EEA  D001               	goto	i2u497_42
 14180  001EEC                     i2u497_40:
 14181  001EEC  0E00               	movlw	0
 14182  001EEE                     i2u497_42:
 14183  001EEE  6E07               	movwf	??_rotary_encoder& (0+255),c
 14184  001EF0  AE81               	btfss	3969,7,c	;volatile
 14185  001EF2  D002               	goto	i2u498_40
 14186  001EF4  0E01               	movlw	1
 14187  001EF6  D001               	goto	i2u498_42
 14188  001EF8                     i2u498_40:
 14189  001EF8  0E00               	movlw	0
 14190  001EFA                     i2u498_42:
 14191  001EFA  1A07               	xorwf	??_rotary_encoder,f,c
 14192  001EFC  A4D8               	btfss	status,2,c
 14193  001EFE  D002               	goto	i2l5474
 14194                           
 14195                           ;lcd_trials_4bits.c: 325: rotary_direction = 0;
 14196  001F00  0E00               	movlw	0
 14197  001F02  D001               	goto	L10
 14198  001F04                     i2l5474:
 14199                           
 14200                           ;lcd_trials_4bits.c: 327: rotary_direction = 1;
 14201  001F04  0E01               	movlw	1
 14202  001F06                     L10:
 14203  001F06  6E55               	movwf	_rotary_direction,c
 14204                           
 14205                           ;lcd_trials_4bits.c: 328: }
 14206                           ;lcd_trials_4bits.c: 329: _delay((unsigned long)((1)*(8000000/4000.0)));
 14207  001F08  0E03               	movlw	3
 14208  001F0A  6E07               	movwf	??_rotary_encoder& (0+255),c
 14209  001F0C  0E98               	movlw	152
 14210  001F0E                     i2u762_47:
 14211  001F0E  2EE8               	decfsz	wreg,f,c
 14212  001F10  D7FE               	bra	i2u762_47
 14213  001F12  2E07               	decfsz	??_rotary_encoder& (0+255),f,c
 14214  001F14  D7FC               	bra	i2u762_47
 14215                           
 14216                           ;lcd_trials_4bits.c: 330: return_default_display_counter = 0;
 14217  001F16  0E00               	movlw	0
 14218  001F18  0100               	movlb	0	; () banked
 14219  001F1A  6FDE               	movwf	(_return_default_display_counter+1)& (0+255),b
 14220  001F1C  0E00               	movlw	0
 14221  001F1E  6FDD               	movwf	_return_default_display_counter& (0+255),b
 14222                           
 14223                           ;lcd_trials_4bits.c: 331: switch (display_mode){
 14224  001F20  D0B1               	goto	i2l5530
 14225  001F22                     i2l5480:
 14226                           
 14227                           ;lcd_trials_4bits.c: 333: {
 14228                           ;lcd_trials_4bits.c: 334: if (rotary_direction == 1) {
 14229  001F22  0455               	decf	_rotary_direction,w,c
 14230  001F24  A4D8               	btfss	status,2,c
 14231  001F26  D012               	goto	i2l5488
 14232                           
 14233                           ;lcd_trials_4bits.c: 335: if ((DAC_u + step_size) < 4096) {
 14234  001F28  505D               	movf	_step_size,w,c
 14235  001F2A  2463               	addwf	_DAC_u,w,c
 14236  001F2C  6E07               	movwf	??_rotary_encoder& (0+255),c
 14237  001F2E  505E               	movf	_step_size+1,w,c
 14238  001F30  2064               	addwfc	_DAC_u+1,w,c
 14239  001F32  6E08               	movwf	(??_rotary_encoder+1)& (0+255),c
 14240  001F34  0E10               	movlw	16
 14241  001F36  5C08               	subwf	??_rotary_encoder+1,w,c
 14242  001F38  B0D8               	btfsc	status,0,c
 14243  001F3A  D006               	goto	i2l5486
 14244                           
 14245                           ;lcd_trials_4bits.c: 336: DAC_u = DAC_u + step_size;
 14246  001F3C  505D               	movf	_step_size,w,c
 14247  001F3E  2463               	addwf	_DAC_u,w,c
 14248  001F40  6E63               	movwf	_DAC_u,c
 14249  001F42  505E               	movf	_step_size+1,w,c
 14250  001F44  2064               	addwfc	_DAC_u+1,w,c
 14251  001F46  6E64               	movwf	_DAC_u+1,c
 14252  001F48                     i2l5486:
 14253                           
 14254                           ;lcd_trials_4bits.c: 337: }
 14255                           ;lcd_trials_4bits.c: 341: send_dac_u_spi();
 14256  001F48  EC6B  F01E         	call	i2_send_dac_u_spi	;wreg free
 14257  001F4C                     i2l5488:
 14258                           
 14259                           ;lcd_trials_4bits.c: 342: }
 14260                           ;lcd_trials_4bits.c: 343: if (rotary_direction == 0) {
 14261  001F4C  5055               	movf	_rotary_direction,w,c
 14262  001F4E  A4D8               	btfss	status,2,c
 14263  001F50  D0A4               	goto	i2l275
 14264                           
 14265                           ;lcd_trials_4bits.c: 344: if ((DAC_u - step_size) > step_size) {
 14266  001F52  C05D  F007         	movff	_step_size,??_rotary_encoder
 14267  001F56  C05E  F008         	movff	_step_size+1,??_rotary_encoder+1
 14268  001F5A  1E07               	comf	??_rotary_encoder,f,c
 14269  001F5C  1E08               	comf	??_rotary_encoder+1,f,c
 14270  001F5E  4A07               	infsnz	??_rotary_encoder,f,c
 14271  001F60  2A08               	incf	??_rotary_encoder+1,f,c
 14272  001F62  5063               	movf	_DAC_u,w,c
 14273  001F64  2607               	addwf	??_rotary_encoder,f,c
 14274  001F66  5064               	movf	_DAC_u+1,w,c
 14275  001F68  2208               	addwfc	??_rotary_encoder+1,f,c
 14276  001F6A  5007               	movf	??_rotary_encoder,w,c
 14277  001F6C  5C5D               	subwf	_step_size,w,c
 14278  001F6E  5008               	movf	??_rotary_encoder+1,w,c
 14279  001F70  585E               	subwfb	_step_size+1,w,c
 14280  001F72  B0D8               	btfsc	status,0,c
 14281  001F74  D00E               	goto	i2l5494
 14282                           
 14283                           ;lcd_trials_4bits.c: 345: DAC_u = DAC_u - step_size;
 14284  001F76  C05D  F007         	movff	_step_size,??_rotary_encoder
 14285  001F7A  C05E  F008         	movff	_step_size+1,??_rotary_encoder+1
 14286  001F7E  1E07               	comf	??_rotary_encoder,f,c
 14287  001F80  1E08               	comf	??_rotary_encoder+1,f,c
 14288  001F82  4A07               	infsnz	??_rotary_encoder,f,c
 14289  001F84  2A08               	incf	??_rotary_encoder+1,f,c
 14290  001F86  5063               	movf	_DAC_u,w,c
 14291  001F88  2407               	addwf	??_rotary_encoder,w,c
 14292  001F8A  6E63               	movwf	_DAC_u,c
 14293  001F8C  5064               	movf	_DAC_u+1,w,c
 14294  001F8E  2008               	addwfc	??_rotary_encoder+1,w,c
 14295  001F90  6E64               	movwf	_DAC_u+1,c
 14296  001F92                     i2l5494:
 14297                           
 14298                           ;lcd_trials_4bits.c: 346: }
 14299                           ;lcd_trials_4bits.c: 350: send_dac_u_spi();
 14300  001F92  EC6B  F01E         	call	i2_send_dac_u_spi	;wreg free
 14301                           
 14302                           ;lcd_trials_4bits.c: 351: }
 14303                           ;lcd_trials_4bits.c: 352: break;
 14304  001F96  D081               	goto	i2l275
 14305  001F98                     i2l5496:
 14306                           
 14307                           ;lcd_trials_4bits.c: 355: {
 14308                           ;lcd_trials_4bits.c: 356: if (rotary_direction == 1) {
 14309  001F98  0455               	decf	_rotary_direction,w,c
 14310  001F9A  A4D8               	btfss	status,2,c
 14311  001F9C  D012               	goto	i2l5504
 14312                           
 14313                           ;lcd_trials_4bits.c: 357: if ((DAC_i + step_size) < 4096) {
 14314  001F9E  505D               	movf	_step_size,w,c
 14315  001FA0  2465               	addwf	_DAC_i,w,c
 14316  001FA2  6E07               	movwf	??_rotary_encoder& (0+255),c
 14317  001FA4  505E               	movf	_step_size+1,w,c
 14318  001FA6  2066               	addwfc	_DAC_i+1,w,c
 14319  001FA8  6E08               	movwf	(??_rotary_encoder+1)& (0+255),c
 14320  001FAA  0E10               	movlw	16
 14321  001FAC  5C08               	subwf	??_rotary_encoder+1,w,c
 14322  001FAE  B0D8               	btfsc	status,0,c
 14323  001FB0  D006               	goto	i2l5502
 14324                           
 14325                           ;lcd_trials_4bits.c: 358: DAC_i = DAC_i + step_size;
 14326  001FB2  505D               	movf	_step_size,w,c
 14327  001FB4  2465               	addwf	_DAC_i,w,c
 14328  001FB6  6E65               	movwf	_DAC_i,c
 14329  001FB8  505E               	movf	_step_size+1,w,c
 14330  001FBA  2066               	addwfc	_DAC_i+1,w,c
 14331  001FBC  6E66               	movwf	_DAC_i+1,c
 14332  001FBE                     i2l5502:
 14333                           
 14334                           ;lcd_trials_4bits.c: 359: }
 14335                           ;lcd_trials_4bits.c: 363: send_dac_i_spi();
 14336  001FBE  EC82  F01E         	call	i2_send_dac_i_spi	;wreg free
 14337  001FC2                     i2l5504:
 14338                           
 14339                           ;lcd_trials_4bits.c: 364: }
 14340                           ;lcd_trials_4bits.c: 365: if (rotary_direction == 0) {
 14341  001FC2  5055               	movf	_rotary_direction,w,c
 14342  001FC4  A4D8               	btfss	status,2,c
 14343  001FC6  D069               	goto	i2l275
 14344                           
 14345                           ;lcd_trials_4bits.c: 366: if ((DAC_i - step_size) > step_size) {
 14346  001FC8  C05D  F007         	movff	_step_size,??_rotary_encoder
 14347  001FCC  C05E  F008         	movff	_step_size+1,??_rotary_encoder+1
 14348  001FD0  1E07               	comf	??_rotary_encoder,f,c
 14349  001FD2  1E08               	comf	??_rotary_encoder+1,f,c
 14350  001FD4  4A07               	infsnz	??_rotary_encoder,f,c
 14351  001FD6  2A08               	incf	??_rotary_encoder+1,f,c
 14352  001FD8  5065               	movf	_DAC_i,w,c
 14353  001FDA  2607               	addwf	??_rotary_encoder,f,c
 14354  001FDC  5066               	movf	_DAC_i+1,w,c
 14355  001FDE  2208               	addwfc	??_rotary_encoder+1,f,c
 14356  001FE0  5007               	movf	??_rotary_encoder,w,c
 14357  001FE2  5C5D               	subwf	_step_size,w,c
 14358  001FE4  5008               	movf	??_rotary_encoder+1,w,c
 14359  001FE6  585E               	subwfb	_step_size+1,w,c
 14360  001FE8  B0D8               	btfsc	status,0,c
 14361  001FEA  D00E               	goto	i2l5510
 14362                           
 14363                           ;lcd_trials_4bits.c: 367: DAC_i = DAC_i - step_size;
 14364  001FEC  C05D  F007         	movff	_step_size,??_rotary_encoder
 14365  001FF0  C05E  F008         	movff	_step_size+1,??_rotary_encoder+1
 14366  001FF4  1E07               	comf	??_rotary_encoder,f,c
 14367  001FF6  1E08               	comf	??_rotary_encoder+1,f,c
 14368  001FF8  4A07               	infsnz	??_rotary_encoder,f,c
 14369  001FFA  2A08               	incf	??_rotary_encoder+1,f,c
 14370  001FFC  5065               	movf	_DAC_i,w,c
 14371  001FFE  2407               	addwf	??_rotary_encoder,w,c
 14372  002000  6E65               	movwf	_DAC_i,c
 14373  002002  5066               	movf	_DAC_i+1,w,c
 14374  002004  2008               	addwfc	??_rotary_encoder+1,w,c
 14375  002006  6E66               	movwf	_DAC_i+1,c
 14376  002008                     i2l5510:
 14377                           
 14378                           ;lcd_trials_4bits.c: 368: }
 14379                           ;lcd_trials_4bits.c: 372: send_dac_i_spi();
 14380  002008  EC82  F01E         	call	i2_send_dac_i_spi	;wreg free
 14381                           
 14382                           ;lcd_trials_4bits.c: 373: }
 14383                           ;lcd_trials_4bits.c: 374: break;
 14384  00200C  D046               	goto	i2l275
 14385  00200E                     i2l5512:
 14386                           
 14387                           ;lcd_trials_4bits.c: 377: {
 14388                           ;lcd_trials_4bits.c: 378: if (rotary_direction == 1) {
 14389  00200E  0455               	decf	_rotary_direction,w,c
 14390  002010  A4D8               	btfss	status,2,c
 14391  002012  D012               	goto	i2l5520
 14392                           
 14393                           ;lcd_trials_4bits.c: 379: if ((DAC_i + step_size) < 4096) {
 14394  002014  505D               	movf	_step_size,w,c
 14395  002016  2465               	addwf	_DAC_i,w,c
 14396  002018  6E07               	movwf	??_rotary_encoder& (0+255),c
 14397  00201A  505E               	movf	_step_size+1,w,c
 14398  00201C  2066               	addwfc	_DAC_i+1,w,c
 14399  00201E  6E08               	movwf	(??_rotary_encoder+1)& (0+255),c
 14400  002020  0E10               	movlw	16
 14401  002022  5C08               	subwf	??_rotary_encoder+1,w,c
 14402  002024  B0D8               	btfsc	status,0,c
 14403  002026  D006               	goto	i2l5518
 14404                           
 14405                           ;lcd_trials_4bits.c: 380: DAC_i = DAC_i + step_size;
 14406  002028  505D               	movf	_step_size,w,c
 14407  00202A  2465               	addwf	_DAC_i,w,c
 14408  00202C  6E65               	movwf	_DAC_i,c
 14409  00202E  505E               	movf	_step_size+1,w,c
 14410  002030  2066               	addwfc	_DAC_i+1,w,c
 14411  002032  6E66               	movwf	_DAC_i+1,c
 14412  002034                     i2l5518:
 14413                           
 14414                           ;lcd_trials_4bits.c: 381: }
 14415                           ;lcd_trials_4bits.c: 385: send_dac_i_spi();
 14416  002034  EC82  F01E         	call	i2_send_dac_i_spi	;wreg free
 14417  002038                     i2l5520:
 14418                           
 14419                           ;lcd_trials_4bits.c: 386: }
 14420                           ;lcd_trials_4bits.c: 387: if (rotary_direction == 0) {
 14421  002038  5055               	movf	_rotary_direction,w,c
 14422  00203A  A4D8               	btfss	status,2,c
 14423  00203C  D02E               	goto	i2l275
 14424                           
 14425                           ;lcd_trials_4bits.c: 388: if ((DAC_i - step_size) > step_size) {
 14426  00203E  C05D  F007         	movff	_step_size,??_rotary_encoder
 14427  002042  C05E  F008         	movff	_step_size+1,??_rotary_encoder+1
 14428  002046  1E07               	comf	??_rotary_encoder,f,c
 14429  002048  1E08               	comf	??_rotary_encoder+1,f,c
 14430  00204A  4A07               	infsnz	??_rotary_encoder,f,c
 14431  00204C  2A08               	incf	??_rotary_encoder+1,f,c
 14432  00204E  5065               	movf	_DAC_i,w,c
 14433  002050  2607               	addwf	??_rotary_encoder,f,c
 14434  002052  5066               	movf	_DAC_i+1,w,c
 14435  002054  2208               	addwfc	??_rotary_encoder+1,f,c
 14436  002056  5007               	movf	??_rotary_encoder,w,c
 14437  002058  5C5D               	subwf	_step_size,w,c
 14438  00205A  5008               	movf	??_rotary_encoder+1,w,c
 14439  00205C  585E               	subwfb	_step_size+1,w,c
 14440  00205E  B0D8               	btfsc	status,0,c
 14441  002060  D00E               	goto	i2l5526
 14442                           
 14443                           ;lcd_trials_4bits.c: 389: DAC_i = DAC_i - step_size;
 14444  002062  C05D  F007         	movff	_step_size,??_rotary_encoder
 14445  002066  C05E  F008         	movff	_step_size+1,??_rotary_encoder+1
 14446  00206A  1E07               	comf	??_rotary_encoder,f,c
 14447  00206C  1E08               	comf	??_rotary_encoder+1,f,c
 14448  00206E  4A07               	infsnz	??_rotary_encoder,f,c
 14449  002070  2A08               	incf	??_rotary_encoder+1,f,c
 14450  002072  5065               	movf	_DAC_i,w,c
 14451  002074  2407               	addwf	??_rotary_encoder,w,c
 14452  002076  6E65               	movwf	_DAC_i,c
 14453  002078  5066               	movf	_DAC_i+1,w,c
 14454  00207A  2008               	addwfc	??_rotary_encoder+1,w,c
 14455  00207C  6E66               	movwf	_DAC_i+1,c
 14456  00207E                     i2l5526:
 14457                           
 14458                           ;lcd_trials_4bits.c: 390: }
 14459                           ;lcd_trials_4bits.c: 394: send_dac_i_spi();
 14460  00207E  EC82  F01E         	call	i2_send_dac_i_spi	;wreg free
 14461                           
 14462                           ;lcd_trials_4bits.c: 405: }
 14463                           ;lcd_trials_4bits.c: 406: }
 14464                           
 14465                           ;lcd_trials_4bits.c: 403: {
 14466                           ;lcd_trials_4bits.c: 404: break;
 14467                           
 14468                           ;lcd_trials_4bits.c: 401: }
 14469                           ;lcd_trials_4bits.c: 402: default:
 14470                           
 14471                           ;lcd_trials_4bits.c: 399: {
 14472                           ;lcd_trials_4bits.c: 400: break;
 14473                           
 14474                           ;lcd_trials_4bits.c: 397: }
 14475                           ;lcd_trials_4bits.c: 398: case 4:
 14476                           
 14477                           ;lcd_trials_4bits.c: 395: }
 14478                           ;lcd_trials_4bits.c: 396: break;
 14479  002082  D00B               	goto	i2l275
 14480  002084                     i2l5530:
 14481  002084  5056               	movf	_display_mode,w,c
 14482                           
 14483                           ; Switch size 1, requested type "space"
 14484                           ; Number of cases is 4, Range of values is 1 to 4
 14485                           ; switch strategies available:
 14486                           ; Name         Instructions Cycles
 14487                           ; simple_byte           13     7 (average)
 14488                           ;	Chosen strategy is simple_byte
 14489  002086  0A01               	xorlw	1	; case 1
 14490  002088  B4D8               	btfsc	status,2,c
 14491  00208A  D74B               	goto	i2l5480
 14492  00208C  0A03               	xorlw	3	; case 2
 14493  00208E  B4D8               	btfsc	status,2,c
 14494  002090  D783               	goto	i2l5496
 14495  002092  0A01               	xorlw	1	; case 3
 14496  002094  B4D8               	btfsc	status,2,c
 14497  002096  D7BB               	goto	i2l5512
 14498  002098  0A07               	xorlw	7	; case 4
 14499  00209A                     i2l275:
 14500                           
 14501                           ;lcd_trials_4bits.c: 407: }
 14502                           ;lcd_trials_4bits.c: 408: if (RB7 == 1) __nop();
 14503  00209A  BE81               	btfsc	3969,7,c	;volatile
 14504  00209C  F000               	nop	
 14505                           
 14506                           ;lcd_trials_4bits.c: 409: if (RB7 == 0) __nop();
 14507  00209E  AE81               	btfss	3969,7,c	;volatile
 14508  0020A0  F000               	nop	
 14509                           
 14510                           ;lcd_trials_4bits.c: 410: RBIF = 0;
 14511  0020A2  90F2               	bcf	intcon,0,c	;volatile
 14512  0020A4                     i2l299:
 14513  0020A4  C016  FFF5         	movff	??_rotary_encoder+15,tablat
 14514  0020A8  C015  FFF8         	movff	??_rotary_encoder+14,tblptru
 14515  0020AC  C014  FFF7         	movff	??_rotary_encoder+13,tblptrh
 14516  0020B0  C013  FFF6         	movff	??_rotary_encoder+12,tblptrl
 14517  0020B4  C012  FFF4         	movff	??_rotary_encoder+11,prodh
 14518  0020B8  C011  FFF3         	movff	??_rotary_encoder+10,prodl
 14519  0020BC  C010  FFDA         	movff	??_rotary_encoder+9,fsr2h
 14520  0020C0  C00F  FFD9         	movff	??_rotary_encoder+8,fsr2l
 14521  0020C4  C00E  FFE2         	movff	??_rotary_encoder+7,fsr1h
 14522  0020C8  C00D  FFE1         	movff	??_rotary_encoder+6,fsr1l
 14523  0020CC  C00C  FFEA         	movff	??_rotary_encoder+5,fsr0h
 14524  0020D0  C00B  FFE9         	movff	??_rotary_encoder+4,fsr0l
 14525  0020D4  C00A  FFFB         	movff	??_rotary_encoder+3,pclatu
 14526  0020D8  C009  FFFA         	movff	??_rotary_encoder+2,pclath
 14527  0020DC  9268               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14528  0020DE  0011               	retfie		f
 14529  0020E0                     __end_of_rotary_encoder:
 14530                           	opt stack 0
 14531                           pclatu	equ	0xFFB
 14532                           pclath	equ	0xFFA
 14533                           tblptru	equ	0xFF8
 14534                           tblptrh	equ	0xFF7
 14535                           tblptrl	equ	0xFF6
 14536                           tablat	equ	0xFF5
 14537                           prodh	equ	0xFF4
 14538                           prodl	equ	0xFF3
 14539                           intcon	equ	0xFF2
 14540                           intcon2	equ	0xFF1
 14541                           indf0	equ	0xFEF
 14542                           postinc0	equ	0xFEE
 14543                           fsr0h	equ	0xFEA
 14544                           fsr0l	equ	0xFE9
 14545                           wreg	equ	0xFE8
 14546                           postdec1	equ	0xFE5
 14547                           fsr1h	equ	0xFE2
 14548                           fsr1l	equ	0xFE1
 14549                           indf2	equ	0xFDF
 14550                           postinc2	equ	0xFDE
 14551                           postdec2	equ	0xFDD
 14552                           fsr2h	equ	0xFDA
 14553                           fsr2l	equ	0xFD9
 14554                           status	equ	0xFD8
 14555                           
 14556 ;; *************** function i2_send_dac_u_spi *****************
 14557 ;; Defined at:
 14558 ;;		line 110 in file "ADC_user_functions.h"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		wreg, status,2, status,0, cstack
 14567 ;; Tracked objects:
 14568 ;;		On entry : 0/0
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14576 ;;Total ram usage:        0 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:    2
 14579 ;; This function calls:
 14580 ;;		i2_WriteSPI
 14581 ;;		i2_init_dac_SPI
 14582 ;; This function is called by:
 14583 ;;		_rotary_encoder
 14584 ;; This function uses a non-reentrant model
 14585 ;;
 14586                           
 14587                           	psect	text62
 14588  003CD6                     __ptext62:
 14589                           	opt stack 0
 14590  003CD6                     i2_send_dac_u_spi:
 14591                           	opt stack 22
 14592                           
 14593                           ;ADC_user_functions.h: 111: dac_u_low = DAC_u;
 14594                           
 14595                           ;incstack = 0
 14596  003CD6  C063  F059         	movff	_DAC_u,_dac_u_low
 14597                           
 14598                           ;ADC_user_functions.h: 112: cmd_dac_u_high = (DAC_u >> 8) & 0b00001111;
 14599  003CDA  5064               	movf	_DAC_u+1,w,c
 14600  003CDC  0B0F               	andlw	15
 14601  003CDE  6E5A               	movwf	_cmd_dac_u_high,c
 14602                           
 14603                           ;ADC_user_functions.h: 113: cmd_dac_u_high = cmd_dac_u_high | cmd_dac;
 14604  003CE0  505A               	movf	_cmd_dac_u_high,w,c
 14605  003CE2  1067               	iorwf	_cmd_dac,w,c
 14606  003CE4  6E5A               	movwf	_cmd_dac_u_high,c
 14607                           
 14608                           ;ADC_user_functions.h: 114: init_dac_SPI();
 14609  003CE6  EC46  F01F         	call	i2_init_dac_SPI	;wreg free
 14610                           
 14611                           ;ADC_user_functions.h: 115: LATBbits.LATB4 = 0;
 14612  003CEA  988A               	bcf	3978,4,c	;volatile
 14613                           
 14614                           ;ADC_user_functions.h: 116: __nop(); __nop(); __nop();
 14615  003CEC  F000               	nop	
 14616  003CEE  F000               	nop	
 14617  003CF0  F000               	nop	
 14618                           
 14619                           ;ADC_user_functions.h: 117: WriteSPI(cmd_dac_u_high);
 14620  003CF2  505A               	movf	_cmd_dac_u_high,w,c
 14621  003CF4  EC6D  F01F         	call	i2_WriteSPI
 14622                           
 14623                           ;ADC_user_functions.h: 118: WriteSPI(dac_u_low);
 14624  003CF8  5059               	movf	_dac_u_low,w,c
 14625  003CFA  EC6D  F01F         	call	i2_WriteSPI
 14626                           
 14627                           ;ADC_user_functions.h: 119: LATBbits.LATB4 = 1;
 14628  003CFE  888A               	bsf	3978,4,c	;volatile
 14629                           
 14630                           ;ADC_user_functions.h: 120: (SSPCON1 &=0xDF);
 14631  003D00  9AC6               	bcf	4038,5,c	;volatile
 14632  003D02  0012               	return		;funcret
 14633  003D04                     __end_ofi2_send_dac_u_spi:
 14634                           	opt stack 0
 14635                           pclatu	equ	0xFFB
 14636                           pclath	equ	0xFFA
 14637                           tblptru	equ	0xFF8
 14638                           tblptrh	equ	0xFF7
 14639                           tblptrl	equ	0xFF6
 14640                           tablat	equ	0xFF5
 14641                           prodh	equ	0xFF4
 14642                           prodl	equ	0xFF3
 14643                           intcon	equ	0xFF2
 14644                           intcon2	equ	0xFF1
 14645                           indf0	equ	0xFEF
 14646                           postinc0	equ	0xFEE
 14647                           fsr0h	equ	0xFEA
 14648                           fsr0l	equ	0xFE9
 14649                           wreg	equ	0xFE8
 14650                           postdec1	equ	0xFE5
 14651                           fsr1h	equ	0xFE2
 14652                           fsr1l	equ	0xFE1
 14653                           indf2	equ	0xFDF
 14654                           postinc2	equ	0xFDE
 14655                           postdec2	equ	0xFDD
 14656                           fsr2h	equ	0xFDA
 14657                           fsr2l	equ	0xFD9
 14658                           status	equ	0xFD8
 14659                           
 14660 ;; *************** function i2_send_dac_i_spi *****************
 14661 ;; Defined at:
 14662 ;;		line 123 in file "ADC_user_functions.h"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;		None
 14665 ;; Auto vars:     Size  Location     Type
 14666 ;;		None
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  1    wreg      void 
 14669 ;; Registers used:
 14670 ;;		wreg, status,2, status,0, cstack
 14671 ;; Tracked objects:
 14672 ;;		On entry : 0/0
 14673 ;;		On exit  : 0/0
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14680 ;;Total ram usage:        0 bytes
 14681 ;; Hardware stack levels used:    1
 14682 ;; Hardware stack levels required when called:    2
 14683 ;; This function calls:
 14684 ;;		i2_WriteSPI
 14685 ;;		i2_init_dac_SPI
 14686 ;; This function is called by:
 14687 ;;		_rotary_encoder
 14688 ;; This function uses a non-reentrant model
 14689 ;;
 14690                           
 14691                           	psect	text63
 14692  003D04                     __ptext63:
 14693                           	opt stack 0
 14694  003D04                     i2_send_dac_i_spi:
 14695                           	opt stack 22
 14696                           
 14697                           ;ADC_user_functions.h: 124: dac_i_low = DAC_i;
 14698                           
 14699                           ;incstack = 0
 14700  003D04  C065  F05B         	movff	_DAC_i,_dac_i_low
 14701                           
 14702                           ;ADC_user_functions.h: 125: cmd_dac_i_high = (DAC_i >> 8) & 0b00001111;
 14703  003D08  5066               	movf	_DAC_i+1,w,c
 14704  003D0A  0B0F               	andlw	15
 14705  003D0C  6E5C               	movwf	_cmd_dac_i_high,c
 14706                           
 14707                           ;ADC_user_functions.h: 126: cmd_dac_i_high = cmd_dac_i_high | cmd_dac;
 14708  003D0E  505C               	movf	_cmd_dac_i_high,w,c
 14709  003D10  1067               	iorwf	_cmd_dac,w,c
 14710  003D12  6E5C               	movwf	_cmd_dac_i_high,c
 14711                           
 14712                           ;ADC_user_functions.h: 127: init_dac_SPI();
 14713  003D14  EC46  F01F         	call	i2_init_dac_SPI	;wreg free
 14714                           
 14715                           ;ADC_user_functions.h: 128: LATAbits.LATA7 = 0;
 14716  003D18  9E89               	bcf	3977,7,c	;volatile
 14717                           
 14718                           ;ADC_user_functions.h: 129: __nop(); __nop(); __nop();
 14719  003D1A  F000               	nop	
 14720  003D1C  F000               	nop	
 14721  003D1E  F000               	nop	
 14722                           
 14723                           ;ADC_user_functions.h: 130: WriteSPI(cmd_dac_i_high);
 14724  003D20  505C               	movf	_cmd_dac_i_high,w,c
 14725  003D22  EC6D  F01F         	call	i2_WriteSPI
 14726                           
 14727                           ;ADC_user_functions.h: 131: WriteSPI(dac_i_low);
 14728  003D26  505B               	movf	_dac_i_low,w,c
 14729  003D28  EC6D  F01F         	call	i2_WriteSPI
 14730                           
 14731                           ;ADC_user_functions.h: 132: LATAbits.LATA7 = 1;
 14732  003D2C  8E89               	bsf	3977,7,c	;volatile
 14733                           
 14734                           ;ADC_user_functions.h: 133: (SSPCON1 &=0xDF);
 14735  003D2E  9AC6               	bcf	4038,5,c	;volatile
 14736  003D30  0012               	return		;funcret
 14737  003D32                     __end_ofi2_send_dac_i_spi:
 14738                           	opt stack 0
 14739                           pclatu	equ	0xFFB
 14740                           pclath	equ	0xFFA
 14741                           tblptru	equ	0xFF8
 14742                           tblptrh	equ	0xFF7
 14743                           tblptrl	equ	0xFF6
 14744                           tablat	equ	0xFF5
 14745                           prodh	equ	0xFF4
 14746                           prodl	equ	0xFF3
 14747                           intcon	equ	0xFF2
 14748                           intcon2	equ	0xFF1
 14749                           indf0	equ	0xFEF
 14750                           postinc0	equ	0xFEE
 14751                           fsr0h	equ	0xFEA
 14752                           fsr0l	equ	0xFE9
 14753                           wreg	equ	0xFE8
 14754                           postdec1	equ	0xFE5
 14755                           fsr1h	equ	0xFE2
 14756                           fsr1l	equ	0xFE1
 14757                           indf2	equ	0xFDF
 14758                           postinc2	equ	0xFDE
 14759                           postdec2	equ	0xFDD
 14760                           fsr2h	equ	0xFDA
 14761                           fsr2l	equ	0xFD9
 14762                           status	equ	0xFD8
 14763                           
 14764 ;; *************** function i2_init_dac_SPI *****************
 14765 ;; Defined at:
 14766 ;;		line 101 in file "ADC_user_functions.h"
 14767 ;; Parameters:    Size  Location     Type
 14768 ;;		None
 14769 ;; Auto vars:     Size  Location     Type
 14770 ;;  init_dac_SPI    1    5[COMRAM] unsigned char 
 14771 ;;  init_dac_SPI    1    4[COMRAM] unsigned char 
 14772 ;;  init_dac_SPI    1    3[COMRAM] unsigned char 
 14773 ;; Return value:  Size  Location     Type
 14774 ;;                  1    wreg      void 
 14775 ;; Registers used:
 14776 ;;		wreg, status,2, status,0, cstack
 14777 ;; Tracked objects:
 14778 ;;		On entry : 0/0
 14779 ;;		On exit  : 0/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14783 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14785 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14786 ;;Total ram usage:        3 bytes
 14787 ;; Hardware stack levels used:    1
 14788 ;; Hardware stack levels required when called:    1
 14789 ;; This function calls:
 14790 ;;		i2_OpenSPI
 14791 ;; This function is called by:
 14792 ;;		i2_send_dac_u_spi
 14793 ;;		i2_send_dac_i_spi
 14794 ;; This function uses a non-reentrant model
 14795 ;;
 14796                           
 14797                           	psect	text64
 14798  003E8C                     __ptext64:
 14799                           	opt stack 0
 14800  003E8C                     i2_init_dac_SPI:
 14801                           	opt stack 22
 14802                           
 14803                           ;ADC_user_functions.h: 103: unsigned char config_sync_mode = 0b00000010;
 14804                           
 14805                           ;incstack = 0
 14806  003E8C  0E02               	movlw	2
 14807  003E8E  6E04               	movwf	i2init_dac_SPI@config_sync_mode,c
 14808                           
 14809                           ;ADC_user_functions.h: 104: unsigned char config_bus_mode = 0b00000010;
 14810  003E90  0E02               	movlw	2
 14811  003E92  6E05               	movwf	i2init_dac_SPI@config_bus_mode,c
 14812                           
 14813                           ;ADC_user_functions.h: 105: unsigned char config_smp_phase = 0b00000000;
 14814  003E94  0E00               	movlw	0
 14815  003E96  6E06               	movwf	i2init_dac_SPI@config_smp_phase,c
 14816                           
 14817                           ;ADC_user_functions.h: 107: OpenSPI( config_sync_mode, config_bus_mode, config_smp_phase
      +                          );
 14818  003E98  C005  F001         	movff	i2init_dac_SPI@config_bus_mode,i2OpenSPI@bus_mode
 14819  003E9C  C006  F002         	movff	i2init_dac_SPI@config_smp_phase,i2OpenSPI@smp_phase
 14820  003EA0  5004               	movf	i2init_dac_SPI@config_sync_mode,w,c
 14821  003EA2  ECD9  F01C         	call	i2_OpenSPI
 14822  003EA6  0012               	return		;funcret
 14823  003EA8                     __end_ofi2_init_dac_SPI:
 14824                           	opt stack 0
 14825                           pclatu	equ	0xFFB
 14826                           pclath	equ	0xFFA
 14827                           tblptru	equ	0xFF8
 14828                           tblptrh	equ	0xFF7
 14829                           tblptrl	equ	0xFF6
 14830                           tablat	equ	0xFF5
 14831                           prodh	equ	0xFF4
 14832                           prodl	equ	0xFF3
 14833                           intcon	equ	0xFF2
 14834                           intcon2	equ	0xFF1
 14835                           indf0	equ	0xFEF
 14836                           postinc0	equ	0xFEE
 14837                           fsr0h	equ	0xFEA
 14838                           fsr0l	equ	0xFE9
 14839                           wreg	equ	0xFE8
 14840                           postdec1	equ	0xFE5
 14841                           fsr1h	equ	0xFE2
 14842                           fsr1l	equ	0xFE1
 14843                           indf2	equ	0xFDF
 14844                           postinc2	equ	0xFDE
 14845                           postdec2	equ	0xFDD
 14846                           fsr2h	equ	0xFDA
 14847                           fsr2l	equ	0xFD9
 14848                           status	equ	0xFD8
 14849                           
 14850 ;; *************** function i2_OpenSPI *****************
 14851 ;; Defined at:
 14852 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\SPI\spi_open.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;  sync_mode       1    wreg     unsigned char 
 14855 ;;  bus_mode        1    0[COMRAM] unsigned char 
 14856 ;;  smp_phase       1    1[COMRAM] unsigned char 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  sync_mode       1    2[COMRAM] unsigned char 
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  1    wreg      void 
 14861 ;; Registers used:
 14862 ;;		wreg, status,2, status,0
 14863 ;; Tracked objects:
 14864 ;;		On entry : 0/0
 14865 ;;		On exit  : 0/0
 14866 ;;		Unchanged: 0/0
 14867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14871 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14872 ;;Total ram usage:        3 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; This function calls:
 14875 ;;		Nothing
 14876 ;; This function is called by:
 14877 ;;		i2_init_dac_SPI
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           	psect	text65
 14882  0039B2                     __ptext65:
 14883                           	opt stack 0
 14884  0039B2                     i2_OpenSPI:
 14885                           	opt stack 22
 14886                           
 14887                           ;incstack = 0
 14888                           ;i2OpenSPI@sync_mode stored from wreg
 14889  0039B2  6E03               	movwf	i2OpenSPI@sync_mode,c
 14890  0039B4  0E3F               	movlw	63
 14891  0039B6  16C7               	andwf	4039,f,c	;volatile
 14892  0039B8  0E00               	movlw	0
 14893  0039BA  6EC6               	movwf	4038,c	;volatile
 14894  0039BC  5003               	movf	i2OpenSPI@sync_mode,w,c
 14895  0039BE  12C6               	iorwf	4038,f,c	;volatile
 14896  0039C0  5002               	movf	i2OpenSPI@smp_phase,w,c
 14897  0039C2  12C7               	iorwf	4039,f,c	;volatile
 14898  0039C4  D005               	goto	i2l4438
 14899  0039C6                     i2l743:
 14900  0039C6  8CC7               	bsf	4039,6,c	;volatile
 14901  0039C8  D015               	goto	i2l4442
 14902  0039CA                     i2l745:
 14903  0039CA  8CC7               	bsf	4039,6,c	;volatile
 14904  0039CC                     i2l746:
 14905  0039CC  88C6               	bsf	4038,4,c	;volatile
 14906  0039CE  D012               	goto	i2l4442
 14907  0039D0                     i2l4438:
 14908  0039D0  5001               	movf	i2OpenSPI@bus_mode,w,c
 14909                           
 14910                           ; Switch size 1, requested type "space"
 14911                           ; Number of cases is 3, Range of values is 0 to 3
 14912                           ; switch strategies available:
 14913                           ; Name         Instructions Cycles
 14914                           ; simple_byte           10     6 (average)
 14915                           ;	Chosen strategy is simple_byte
 14916  0039D2  0A00               	xorlw	0	; case 0
 14917  0039D4  B4D8               	btfsc	status,2,c
 14918  0039D6  D7F7               	goto	i2l743
 14919  0039D8  0A02               	xorlw	2	; case 2
 14920  0039DA  B4D8               	btfsc	status,2,c
 14921  0039DC  D7F6               	goto	i2l745
 14922  0039DE  0A01               	xorlw	1	; case 3
 14923  0039E0  B4D8               	btfsc	status,2,c
 14924  0039E2  D7F4               	goto	i2l746
 14925  0039E4  D007               	goto	i2l4442
 14926  0039E6                     i2l749:
 14927  0039E6  8694               	bsf	3988,3,c	;volatile
 14928  0039E8  8A92               	bsf	3986,5,c	;volatile
 14929  0039EA  D00C               	goto	i2l750
 14930  0039EC                     i2l751:
 14931  0039EC  8694               	bsf	3988,3,c	;volatile
 14932  0039EE  D00A               	goto	i2l750
 14933  0039F0                     i2l752:
 14934  0039F0  9694               	bcf	3988,3,c	;volatile
 14935  0039F2  D008               	goto	i2l750
 14936  0039F4                     i2l4442:
 14937  0039F4  5003               	movf	i2OpenSPI@sync_mode,w,c
 14938                           
 14939                           ; Switch size 1, requested type "space"
 14940                           ; Number of cases is 2, Range of values is 4 to 5
 14941                           ; switch strategies available:
 14942                           ; Name         Instructions Cycles
 14943                           ; simple_byte            7     4 (average)
 14944                           ;	Chosen strategy is simple_byte
 14945  0039F6  0A04               	xorlw	4	; case 4
 14946  0039F8  B4D8               	btfsc	status,2,c
 14947  0039FA  D7F5               	goto	i2l749
 14948  0039FC  0A01               	xorlw	1	; case 5
 14949  0039FE  B4D8               	btfsc	status,2,c
 14950  003A00  D7F5               	goto	i2l751
 14951  003A02  D7F6               	goto	i2l752
 14952  003A04                     i2l750:
 14953  003A04  8894               	bsf	3988,4,c	;volatile
 14954  003A06  9A94               	bcf	3988,5,c	;volatile
 14955  003A08  8AC6               	bsf	4038,5,c	;volatile
 14956  003A0A  0012               	return		;funcret
 14957  003A0C                     __end_ofi2_OpenSPI:
 14958                           	opt stack 0
 14959                           pclatu	equ	0xFFB
 14960                           pclath	equ	0xFFA
 14961                           tblptru	equ	0xFF8
 14962                           tblptrh	equ	0xFF7
 14963                           tblptrl	equ	0xFF6
 14964                           tablat	equ	0xFF5
 14965                           prodh	equ	0xFF4
 14966                           prodl	equ	0xFF3
 14967                           intcon	equ	0xFF2
 14968                           intcon2	equ	0xFF1
 14969                           indf0	equ	0xFEF
 14970                           postinc0	equ	0xFEE
 14971                           fsr0h	equ	0xFEA
 14972                           fsr0l	equ	0xFE9
 14973                           wreg	equ	0xFE8
 14974                           postdec1	equ	0xFE5
 14975                           fsr1h	equ	0xFE2
 14976                           fsr1l	equ	0xFE1
 14977                           indf2	equ	0xFDF
 14978                           postinc2	equ	0xFDE
 14979                           postdec2	equ	0xFDD
 14980                           fsr2h	equ	0xFDA
 14981                           fsr2l	equ	0xFD9
 14982                           status	equ	0xFD8
 14983                           
 14984 ;; *************** function i2_WriteSPI *****************
 14985 ;; Defined at:
 14986 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic18\plib\SPI\spi_writ.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;  data_out        1    wreg     unsigned char 
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;  data_out        1    1[COMRAM] unsigned char 
 14991 ;;  WriteSPI        1    0[COMRAM] unsigned char 
 14992 ;; Return value:  Size  Location     Type
 14993 ;;                  1    wreg      char 
 14994 ;; Registers used:
 14995 ;;		wreg
 14996 ;; Tracked objects:
 14997 ;;		On entry : 0/0
 14998 ;;		On exit  : 0/0
 14999 ;;		Unchanged: 0/0
 15000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;Total ram usage:        2 bytes
 15006 ;; Hardware stack levels used:    1
 15007 ;; This function calls:
 15008 ;;		Nothing
 15009 ;; This function is called by:
 15010 ;;		i2_send_dac_u_spi
 15011 ;;		i2_send_dac_i_spi
 15012 ;; This function uses a non-reentrant model
 15013 ;;
 15014                           
 15015                           	psect	text66
 15016  003EDA                     __ptext66:
 15017                           	opt stack 0
 15018  003EDA                     i2_WriteSPI:
 15019                           	opt stack 23
 15020                           
 15021                           ;incstack = 0
 15022                           ;i2WriteSPI@data_out stored from wreg
 15023  003EDA  6E02               	movwf	i2WriteSPI@data_out,c
 15024  003EDC  CFC9 F001          	movff	4041,i2WriteSPI@TempVar	;volatile
 15025  003EE0  969E               	bcf	3998,3,c	;volatile
 15026  003EE2  9EC6               	bcf	4038,7,c	;volatile
 15027  003EE4  C002  FFC9         	movff	i2WriteSPI@data_out,4041	;volatile
 15028  003EE8  BEC6               	btfsc	4038,7,c	;volatile
 15029  003EEA  0012               	return	
 15030  003EEC                     i2l767:
 15031  003EEC  B69E               	btfsc	3998,3,c	;volatile
 15032  003EEE  0012               	return	
 15033  003EF0  D7FD               	goto	i2l767
 15034  003EF2                     __end_ofi2_WriteSPI:
 15035                           	opt stack 0
 15036                           pclatu	equ	0xFFB
 15037                           pclath	equ	0xFFA
 15038                           tblptru	equ	0xFF8
 15039                           tblptrh	equ	0xFF7
 15040                           tblptrl	equ	0xFF6
 15041                           tablat	equ	0xFF5
 15042                           prodh	equ	0xFF4
 15043                           prodl	equ	0xFF3
 15044                           intcon	equ	0xFF2
 15045                           intcon2	equ	0xFF1
 15046                           indf0	equ	0xFEF
 15047                           postinc0	equ	0xFEE
 15048                           fsr0h	equ	0xFEA
 15049                           fsr0l	equ	0xFE9
 15050                           wreg	equ	0xFE8
 15051                           postdec1	equ	0xFE5
 15052                           fsr1h	equ	0xFE2
 15053                           fsr1l	equ	0xFE1
 15054                           indf2	equ	0xFDF
 15055                           postinc2	equ	0xFDE
 15056                           postdec2	equ	0xFDD
 15057                           fsr2h	equ	0xFDA
 15058                           fsr2l	equ	0xFD9
 15059                           status	equ	0xFD8
 15060                           pclatu	equ	0xFFB
 15061                           pclath	equ	0xFFA
 15062                           tblptru	equ	0xFF8
 15063                           tblptrh	equ	0xFF7
 15064                           tblptrl	equ	0xFF6
 15065                           tablat	equ	0xFF5
 15066                           prodh	equ	0xFF4
 15067                           prodl	equ	0xFF3
 15068                           intcon	equ	0xFF2
 15069                           intcon2	equ	0xFF1
 15070                           indf0	equ	0xFEF
 15071                           postinc0	equ	0xFEE
 15072                           fsr0h	equ	0xFEA
 15073                           fsr0l	equ	0xFE9
 15074                           wreg	equ	0xFE8
 15075                           postdec1	equ	0xFE5
 15076                           fsr1h	equ	0xFE2
 15077                           fsr1l	equ	0xFE1
 15078                           indf2	equ	0xFDF
 15079                           postinc2	equ	0xFDE
 15080                           postdec2	equ	0xFDD
 15081                           fsr2h	equ	0xFDA
 15082                           fsr2l	equ	0xFD9
 15083                           status	equ	0xFD8
 15084                           
 15085                           	psect	rparam
 15086  0000                     pclatu	equ	0xFFB
 15087                           pclath	equ	0xFFA
 15088                           tblptru	equ	0xFF8
 15089                           tblptrh	equ	0xFF7
 15090                           tblptrl	equ	0xFF6
 15091                           tablat	equ	0xFF5
 15092                           prodh	equ	0xFF4
 15093                           prodl	equ	0xFF3
 15094                           intcon	equ	0xFF2
 15095                           intcon2	equ	0xFF1
 15096                           indf0	equ	0xFEF
 15097                           postinc0	equ	0xFEE
 15098                           fsr0h	equ	0xFEA
 15099                           fsr0l	equ	0xFE9
 15100                           wreg	equ	0xFE8
 15101                           postdec1	equ	0xFE5
 15102                           fsr1h	equ	0xFE2
 15103                           fsr1l	equ	0xFE1
 15104                           indf2	equ	0xFDF
 15105                           postinc2	equ	0xFDE
 15106                           postdec2	equ	0xFDD
 15107                           fsr2h	equ	0xFDA
 15108                           fsr2l	equ	0xFD9
 15109                           status	equ	0xFD8
 15110                           
 15111                           	psect	temp
 15112  000068                     btemp:
 15113                           	opt stack 0
 15114  000068                     	ds	1
 15115  0000                     int$flags	set	btemp
 15116                           pclatu	equ	0xFFB
 15117                           pclath	equ	0xFFA
 15118                           tblptru	equ	0xFF8
 15119                           tblptrh	equ	0xFF7
 15120                           tblptrl	equ	0xFF6
 15121                           tablat	equ	0xFF5
 15122                           prodh	equ	0xFF4
 15123                           prodl	equ	0xFF3
 15124                           intcon	equ	0xFF2
 15125                           intcon2	equ	0xFF1
 15126                           indf0	equ	0xFEF
 15127                           postinc0	equ	0xFEE
 15128                           fsr0h	equ	0xFEA
 15129                           fsr0l	equ	0xFE9
 15130                           wreg	equ	0xFE8
 15131                           postdec1	equ	0xFE5
 15132                           fsr1h	equ	0xFE2
 15133                           fsr1l	equ	0xFE1
 15134                           indf2	equ	0xFDF
 15135                           postinc2	equ	0xFDE
 15136                           postdec2	equ	0xFDD
 15137                           fsr2h	equ	0xFDA
 15138                           fsr2l	equ	0xFD9
 15139                           status	equ	0xFD8


Data Sizes:
    Strings     308
    Constant    118
    Data        29
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     81     103
    BANK0           128     78     123
    BANK1           256     28      88
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_59(CODE[6]), STR_58(CODE[6]), STR_50(CODE[6]), STR_45(CODE[6]), 
		 -> STR_42(CODE[6]), STR_37(CODE[6]), STR_34(CODE[6]), STR_30(CODE[6]), 
		 -> STR_26(CODE[6]), STR_21(CODE[6]), STR_20(CODE[5]), STR_15(CODE[6]), 
		 -> STR_14(CODE[5]), STR_12(CODE[6]), STR_9(CODE[6]), STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 10
		 -> ResultString_set_u(BANK1[10]), ResultString_brightness_percent(BANK1[5]), ResultString_brightness(BANK1[5]), ResultString_contrast_percent(BANK1[5]), 
		 -> ResultString_contrast(BANK1[5]), ResultString_set_i(BANK1[10]), ResultString_i(BANK1[10]), ResultString_u(BANK1[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 10
		 -> ResultString_set_i(BANK1[10]), ResultString_i(BANK1[10]), ResultString_u(BANK1[10]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_57(CODE[5]), STR_56(CODE[17]), STR_55(CODE[17]), STR_54(CODE[17]), 
		 -> STR_53(CODE[13]), STR_52(CODE[6]), STR_51(CODE[18]), STR_49(CODE[6]), 
		 -> STR_48(CODE[6]), STR_47(CODE[11]), STR_46(CODE[5]), STR_44(CODE[10]), 
		 -> STR_43(CODE[8]), STR_41(CODE[6]), STR_40(CODE[6]), STR_39(CODE[10]), 
		 -> STR_38(CODE[5]), STR_36(CODE[10]), STR_35(CODE[7]), STR_33(CODE[6]), 
		 -> STR_32(CODE[6]), STR_31(CODE[10]), STR_29(CODE[4]), STR_28(CODE[10]), 
		 -> STR_27(CODE[6]), ResultString_set_u(BANK1[10]), STR_25(CODE[2]), STR_24(CODE[9]), 
		 -> STR_23(CODE[17]), STR_22(CODE[17]), ResultString_brightness_percent(BANK1[5]), ResultString_brightness(BANK1[5]), 
		 -> STR_19(CODE[2]), STR_18(CODE[9]), STR_17(CODE[17]), STR_16(CODE[17]), 
		 -> ResultString_contrast_percent(BANK1[5]), ResultString_contrast(BANK1[5]), STR_13(CODE[12]), STR_11(CODE[4]), 
		 -> STR_10(CODE[12]), STR_8(CODE[4]), STR_7(CODE[12]), ResultString_set_i(BANK1[10]), 
		 -> STR_5(CODE[4]), STR_4(CODE[12]), ResultString_i(BANK1[10]), STR_3(CODE[12]), 
		 -> ResultString_u(BANK1[10]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMRAM

    _send_dac_u_spi->_init_dac_SPI
    _send_contrast_spi->_init_dig_pot_SPI
    _send_backlight_spi->_init_dig_pot_SPI
    _init_dig_pot_SPI->_OpenSPI
    _protection_display->_SetDDRamAddr
    _clear_display->_WriteCmdXLCD
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _init_ADC->_OpenADC
    _putsXLCD->_WriteDataXLCD
    _send_dac_i_spi->_init_dac_SPI
    _init_dac_SPI->_OpenSPI
    _sprintf->___lltoft
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___lwtoft
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fttol->___ftdiv
    ___ftsub->___lltoft
    ___ftadd->___lltoft
    ___ftneg->___ftpack
    ___ftge->___lltoft
    ___ftdiv->_scale
    _putrsXLCD->_WriteDataXLCD
    ___lwtoft->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _rotary_encoder in COMRAM

    i2_send_dac_u_spi->i2_init_dac_SPI
    i2_send_dac_i_spi->i2_init_dac_SPI
    i2_init_dac_SPI->i2_OpenSPI

Critical Paths under _main in BANK0

    _main->_voltage_set_display
    _voltage_set_display->_sprintf
    _default_display->_sprintf
    _current_protection_set_display->_sprintf
    _current_limit_set_display->_sprintf
    _current_auto_limit_set_display->_sprintf
    _contrast_display->_sprintf
    _brightness_display->_sprintf
    _sprintf->___ftge
    ___lltoft->___fttol
    ___fttol->___ftdiv
    ___ftsub->___ftadd
    ___ftadd->___lltoft
    ___ftge->___ftadd

Critical Paths under _rotary_encoder in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _voltage_set_display->_sprintf
    _default_display->_sprintf
    _current_protection_set_display->_sprintf
    _current_limit_set_display->_sprintf
    _current_auto_limit_set_display->_sprintf
    _contrast_display->_sprintf
    _brightness_display->_sprintf

Critical Paths under _rotary_encoder in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rotary_encoder in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rotary_encoder in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rotary_encoder in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rotary_encoder in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rotary_encoder in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rotary_encoder in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rotary_encoder in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rotary_encoder in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rotary_encoder in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rotary_encoder in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rotary_encoder in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rotary_encoder in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _rotary_encoder in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _rotary_encoder in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  892645
                                             69 BANK0      9     9      0
                            _BusyADC
                         _ConvertADC
                          _Delay1Sec
                            _ReadADC
                         _SetChanADC
                       _SetDDRamAddr
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                 _brightness_display
                      _clear_display
                   _contrast_display
     _current_auto_limit_set_display
          _current_limit_set_display
     _current_protection_set_display
                    _default_display
                           _init_ADC
                      _init_GPIO_DIR
                          _init_XLCD
                 _protection_display
                          _putrsXLCD
                 _send_backlight_spi
                  _send_contrast_spi
                     _send_dac_i_spi
                     _send_dac_u_spi
                            _sprintf
                _voltage_set_display
 ---------------------------------------------------------------------------------
 (1) _voltage_set_display                                  3     3      0  111074
                                             66 BANK0      3     3      0
                       _SetDDRamAddr
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _send_dac_u_spi                                       0     0      0     484
                           _WriteSPI
                       _init_dac_SPI
 ---------------------------------------------------------------------------------
 (1) _send_contrast_spi                                    0     0      0     484
                           _WriteSPI
                   _init_dig_pot_SPI
 ---------------------------------------------------------------------------------
 (1) _send_backlight_spi                                   0     0      0     484
                           _WriteSPI
                   _init_dig_pot_SPI
 ---------------------------------------------------------------------------------
 (2) _init_dig_pot_SPI                                     3     3      0     461
                                             25 COMRAM     3     3      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (1) _protection_display                                   0     0      0    4281
                       _SetDDRamAddr
                      _clear_display
                          _putrsXLCD
 ---------------------------------------------------------------------------------
 (2) _clear_display                                        0     0      0      44
                           _BusyXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     198
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     154
                                             26 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      44
                                             22 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      22
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO_DIR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_ADC                                             6     6      0     315
                                             27 COMRAM     6     6      0
                           _CloseADC
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     306
                                             22 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _CloseADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _default_display                                      0     0      0  115889
                       _SetDDRamAddr
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                          _putrsXLCD
                           _putsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     469
                                             23 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (1) _current_protection_set_display                       0     0      0  111040
                       _SetDDRamAddr
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _current_limit_set_display                            0     0      0  111040
                       _SetDDRamAddr
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _current_auto_limit_set_display                       0     0      0  115904
                       _SetDDRamAddr
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                          _putrsXLCD
                     _send_dac_i_spi
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _send_dac_i_spi                                       0     0      0     484
                           _WriteSPI
                       _init_dac_SPI
 ---------------------------------------------------------------------------------
 (2) _init_dac_SPI                                         3     3      0     461
                                             25 COMRAM     3     3      0
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (3) _OpenSPI                                              3     1      2     392
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     2      0      23
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _contrast_display                                     0     0      0  101764
                       _SetDDRamAddr
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _brightness_display                                   0     0      0  101764
                       _SetDDRamAddr
                            ___lwdiv
                           ___lwtoft
                             ___wmul
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             47    40      7   89615
                                             53 BANK0     13     6      7
                                              0 BANK1     28    28      0
                            ___awdiv
                            ___awmod
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               10     7      3   17448
                                             67 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13    10      3   17169
                                             67 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    3832
                                             36 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    8261
                                             52 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2233
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    2425
                                             28 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         15     9      6     634
                                             22 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          12     6      6     853
                                             22 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    3325
                                             80 COMRAM     1     1      0
                                             24 BANK0      8     4      4
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8    1492
                                             35 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1321
                                             22 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4    1361
                                              9 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    6534
                                             44 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    6118
                                             32 BANK0     12     6      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                            ___fttol (ARG)
                           ___lltoft (ARG)
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     515
                                             30 COMRAM     3     0      3
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     918
                                             44 BANK0      9     3      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                            ___fttol (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5313
                                             74 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) _putrsXLCD                                            2     0      2    4193
                                             23 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                             22 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3614
                                             49 COMRAM     3     0      3
                           ___ftpack
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2953
                                             22 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                             42 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetDDRamAddr                                         4     4      0      44
                                             22 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      22
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Delay1Sec                                            3     3      0      46
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _rotary_encoder                                      16    16      0     464
                                              6 COMRAM    16    16      0
                   i2_send_dac_i_spi
                   i2_send_dac_u_spi
 ---------------------------------------------------------------------------------
 (7) i2_send_dac_u_spi                                     0     0      0     232
                         i2_WriteSPI
                     i2_init_dac_SPI
 ---------------------------------------------------------------------------------
 (7) i2_send_dac_i_spi                                     0     0      0     232
                         i2_WriteSPI
                     i2_init_dac_SPI
 ---------------------------------------------------------------------------------
 (8) i2_init_dac_SPI                                       3     3      0     209
                                              3 COMRAM     3     3      0
                          i2_OpenSPI
 ---------------------------------------------------------------------------------
 (9) i2_OpenSPI                                            3     1      2     140
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_WriteSPI                                           2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _Delay1Sec
   _ReadADC
   _SetChanADC
   _SetDDRamAddr
     _DelayFor18TCY
   ___ftadd
     ___ftdiv (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___fttol (ARG)
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lltoft (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftpack (ARG)
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
     ___lwdiv (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   _brightness_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _clear_display
     _BusyXLCD
       _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _contrast_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___lwdiv
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _current_auto_limit_set_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___ftpack (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _send_dac_i_spi
       _WriteSPI
       _init_dac_SPI
         _OpenSPI
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _current_limit_set_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _current_protection_set_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _default_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___ftpack (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _putsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _init_ADC
     _CloseADC
     _OpenADC
   _init_GPIO_DIR
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _WriteCmdXLCD
       _DelayFor18TCY
   _protection_display
     _SetDDRamAddr
       _DelayFor18TCY
     _clear_display
       _BusyXLCD
         _DelayFor18TCY
       _WriteCmdXLCD
         _DelayFor18TCY
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
   _putrsXLCD
     _BusyXLCD
       _DelayFor18TCY
     _WriteDataXLCD
       _DelayFor18TCY
   _send_backlight_spi
     _WriteSPI
     _init_dig_pot_SPI
       _OpenSPI
   _send_contrast_spi
     _WriteSPI
     _init_dig_pot_SPI
       _OpenSPI
   _send_dac_i_spi
     _WriteSPI
     _init_dac_SPI
       _OpenSPI
   _send_dac_u_spi
     _WriteSPI
     _init_dac_SPI
       _OpenSPI
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___awmod
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
       ___ftadd (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___ftpack (ARG)
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
     ___fttol
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___fttol (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _voltage_set_display
     _SetDDRamAddr
       _DelayFor18TCY
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
       _WriteDataXLCD
         _DelayFor18TCY
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
         ___ftadd (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___fttol (ARG)
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                       ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                         ___wmul (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___fttol (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
       ___fttol
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftpack (ARG)
         ___fttol (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)

 _rotary_encoder (ROOT)
   i2_send_dac_i_spi
     i2_WriteSPI
     i2_init_dac_SPI
       i2_OpenSPI
   i2_send_dac_u_spi
     i2_WriteSPI
     i2_init_dac_SPI
       i2_OpenSPI

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1C      58       7       34.4%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     4E      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     51      67       1       81.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      34        0.0%
DATA                 0      0     13A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Oct 22 21:58:09 2018

                __size_of_send_dac_i_spi 002E                  __size_of_send_dac_u_spi 002E  
                            _SSPSTATbits 000FC7                             ___awdiv@sign 0022  
                    ___wmul@multiplicand 0027                              __CFG_BORV$3 000000  
                           __CFG_CP0$OFF 000000                               i2_WriteSPI 3EDA  
                           __CFG_CP1$OFF 000000                             __CFG_CP2$OFF 000000  
                      _send_contrast_spi 3D5C                             ___ftadd@exp1 00AB  
                           ___ftadd@exp2 00AA               __end_of_protection_display 3D5C  
                           ___ftadd@sign 00A9                                      l106 3CD4  
                                    l318 1804                                      l610 0A88  
                                    l374 3B9E                                      l714 38F8  
                                    l644 0F54                                      l573 0398  
                                    l574 039C                                      l750 39AA  
                                    l575 0992                                      l751 3992  
                                    l743 396C                                      l752 3996  
                                    l745 3970                                      l594 07B0  
                                    l746 3972                                      l579 040A  
                                    l749 398C                                      l767 3ED4  
                                    l993 2C80                                      _GIE 007F97  
                           __CFG_CPB$OFF 000000                                      _RA2 007C02  
                                    _RA4 007C04                                      _RA5 007C05  
                                    _RA6 007C06                                      _RB5 007C0D  
                                    _RB7 007C0F                                      _RE3 007C23  
                           __CFG_CPD$OFF 000000                       ?_send_contrast_spi 0001  
         i2init_dac_SPI@config_smp_phase 0006                    __size_of_WriteCmdXLCD 003E  
                           ___awmod@sign 001C                                      wreg 000FE8  
                       i2_send_dac_i_spi 3D04                             __CFG_LVP$OFF 000000  
                    _voltage_set_display 27AE                             ___ftdiv@cntr 0083  
                       i2_send_dac_u_spi 3CD6                             ___ftdiv@sign 0088  
                           __CFG_WDT$OFF 000000                                     l1025 3516  
                                   l1122 3DE6                                     l1052 2182  
                    ??_send_contrast_spi 001D                                     l1054 21AA  
                                   l1063 2280                                     l1072 22AA  
                                   l1048 2148                                     l1225 3A54  
                                   l1090 2ACA                                     l1083 2FAA  
                                   l1091 2AF2                                     l1172 36CE  
                                   l1182 388C                                     l1097 2B58  
                                   l4042 3EF4                                     l5102 3BD8  
                                   l5112 3CC0                                     l6000 313C  
                                   l5108 3CB0                                     l5060 3A2A  
                                   l6100 3802                                     l5070 3A4A  
                                   l5062 3A2E                                     l6014 316E  
                                   l4502 3F30                                     l6200 2A90  
                                   l6112 382E                                     l6104 3816  
                                   l6024 3196                                     l5058 3A22  
                                   l6050 35FE                                     l6018 317E  
                                   l3730 3976                                     l7002 269E  
                                   l6300 2C6E                                     l6060 3620  
                                   l6044 35EE                                     l6108 3820  
                                   l6028 31A6                                     l3716 3F44  
                                   l6310 2F00                                     l6302 2C7A  
                                   l6230 2B1E                                     l6134 254E  
                                   l6126 248E                                     l3734 399A  
                                   l5094 3BB8                                     l6240 2B46  
                                   l6056 3614                                     l6072 3646  
                                   l7032 3286                                     l4472 356E  
                                   l4554 3930                                     l6250 2B88  
                                   l6242 2B52                                     l6234 2B2E  
                                   l6058 361C                                     l6154 1C5C  
                                   l7034 3292                                     l7018 2796  
                                   l4490 35B8                                     l4482 3598  
                                   l4474 3578                                     l5098 3BC8  
                                   l4548 38FE                                     l6316 2F32  
                                   l6404 29C0                                     l6076 3654  
                                   l6068 363C                                     l6092 37E8  
                                   l6172 1E50                                     l6148 1BB8  
                                   l4564 3C6A                                     l6422 2A26  
                                   l6414 29F0                                     l6270 2BE8  
                                   l6166 1DAC                                     l6158 1C80  
                                   l6502 0106                                     l7054 3376  
                                   l7118 2DA2                                     l4558 3C4E  
                                   l4494 35C8                                     l4486 35A8  
                                   l4478 3588                                     l7230 15EE  
                                   l7206 14DE                                     l6336 2F80  
                                   l6416 2A00                                     l6408 29D4  
                                   l6432 3680                                     l6256 2BA6  
                                   l6096 37F6                                     l6088 37DC  
                                   l6184 3E2E                                     l6520 0196  
                                   l6512 016A                                     l7056 3382  
                                   l7312 18B8                                     l7304 185E  
                                   l7208 14E2                                     l7216 1504  
                                   l6362 3400                                     l6354 3AD2  
                                   l6418 2A0A                                     l6434 368C  
                                   l6290 2C46                                     l6194 2A64  
                                   l6098 37FE                                     l6602 0592  
                                   l6514 0180                                     l7146 2EC0  
                                   l7090 28E6                                     l7402 1A1E  
                                   l7306 1864                                     l7234 1604  
                                   l6372 3484                                     l6444 36C0  
                                   l6436 3690                                     l6460 387E  
                                   l6452 384A                                     l6532 01EA  
                                   l6524 019E                                     l6508 012E  
                                   l7412 1A30                                     l7316 18BE  
                                   l7236 1608                                     l7244 162A  
                                   l6366 3440                                     l6454 3856  
                                   l6294 2C56                                     l6278 2C18  
                                   l6710 09E8                                     l6614 0654  
                                   l6542 0230                                     l6526 01CE  
                                   l6518 0190                                     l7422 1A3E  
                                   l7350 195A                                     l7334 18FE  
                                   l7318 18CC                                     l6456 385A  
                                   l6800 0E1E                                     l6632 06BC  
                                   l6624 0676                                     l6608 0608  
                                   l7416 1A36                                     l7408 1A2A  
                                   l7424 1A70                                     l7360 1998  
                                   l7344 1918                                     l7272 1728  
                                   l6386 292E                                     l6466 36E6  
                                   l6802 0E32                                     l6730 0B26  
                                   l6722 0A2E                                     l6706 09C2  
                                   l6618 065C                                     l6626 068A  
                                   l6570 037C                                     l6482 0042  
                                   l7418 1A3A                                     l7338 1904  
                                   l7290 17F0                                     l7282 178C  
                                   l7266 1714                                     l5932 2190  
                                   l6468 36F4                                     l6740 0BB6  
                                   l6724 0A58                                     l6660 088E  
                                   l6652 07E0                                     l6572 0390  
                                   l6484 0058                                     l6476 0022  
                                   l7364 19A8                                     l7284 1792  
                                   l7276 172E                                     l5926 2156  
                                   l6902 1228                                     l6830 0F58  
                                   l6806 0E5E                                     l6750 0C46  
                                   l6742 0BE6                                     l6734 0B62  
                                   l6566 034E                                     l6558 02DE  
                                   l6494 0092                                     l7390 1A06  
                                   l7382 19F8                                     l7366 19B2  
                                   l7294 17F6                                     l7198 14AE  
                                   l5880 3498                                     l5960 2238  
                                   l6920 12D6                                     l6824 0F22  
                                   l6808 0E66                                     l6816 0EFA  
                                   l6744 0BFC                                     l6680 08EA  
                                   l6584 03F2                                     l6576 03B8  
                                   l6488 0062                                     l7368 19B8  
                                   l5954 2210                                     l5938 21A0  
                                   l6922 12E0                                     l6914 1294  
                                   l6842 0FDA                                     l6826 0F36  
                                   l6818 0F08                                     l6770 0D3E  
                                   l6754 0C74                                     l6738 0BA0  
                                   l6666 08A8                                     l6658 0880  
                                   l6578 03D8                                     l7386 19FE  
                                   l7298 180A                                     l5892 34E4  
                                   l5884 34A6                                     l5956 221E  
                                   l5948 21E2                                     l6932 1318  
                                   l6916 129E                                     l6908 125C  
                                   l6860 10E8                                     l6852 10C0  
                                   l6764 0CD2                                     l6684 08F8  
                                   l6668 08B4                                     l6596 04FA  
                                   l6588 040E                                     l7396 1A10  
                                   l5894 3502                                     l5886 34B0  
                                   l5974 22D4                                     l5966 2266  
                                   l5958 222C                                     l6942 13D0  
                                   l6926 12F2                                     l6854 10CE  
                                   l6838 0F88                                     l6790 0DFC  
                                   l6782 0D84                                     l6678 08E2  
                                   l6870 1136                                     l5896 350C  
                                   l5888 34CE                                     l5984 2322  
                                   l5968 2274                                     l6944 13D6  
                                   l6880 1184                                     l6864 110E  
                                   l6768 0D38                                     l6696 0968  
                                   l5994 3114                                     l6938 1346  
                                   l6882 118A                                     l6794 0E04  
                                   l6786 0DD4                                     l6954 142C  
                                   l6948 1406                                     l6956 144A  
                                   l6894 11D0                                     l6982 25F6  
                                   l6992 264A                                     l6898 11F8  
                                   STR_1 BFED                                     STR_2 BFE9  
                                   STR_3 BF6D                                     STR_4 BF61  
                                   STR_5 BFF5                                     STR_6 BFC8  
                                   STR_7 BF61                                     STR_8 BFF1  
                                   STR_9 BFC8                                     u3235 3A74  
                                   u6131 2EE2                                     u5501 2114  
                                   u6151 2F14                                     u6231 290A  
                                   _RBIE 007F93                                     u3840 3928  
                                   _RBIF 007F90                                     u3850 3950  
                                   u6250 2954                                     u5701 30FC  
                                   u3847 391E                                     u6255 294A  
                                   u3857 3946                                     u5721 3124  
                                   u4930 3F68                                     u5491 20F6  
                                   u6470 0276                                     u7520 1944  
                                   u6570 0402                                     u6475 026A  
                                   u7540 1986                                     u7607 3EFA  
                                   u7617 3CC6                                     u7570 19C8  
                                   u5971 2A48                                     u5991 2A74  
                                   u7587 1A78                                     u7597 3F46  
                                   u6990 0F4C           i2init_dac_SPI@config_sync_mode 0004  
          _ResultString_contrast_percent 0137                                     _main 1458  
                           ___ftpack@arg 0017                             ___ftpack@exp 001A  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   indf0 000FEF                                     fsr2h 000FDA  
                                   fsr0l 000FE9                                     indf2 000FDF  
                                   fsr1l 000FE1                                     fsr2l 000FD9  
                                   btemp 0068                   __size_of_WriteDataXLCD 003E  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 000E                            __CFG_IESO$OFF 000000  
                           _sprintf$2285 013C                             ___ftmul@cntr 0042  
                           ___param_bank 000000                             ___ftmul@sign 0043  
                        __end_of_BusyADC 3F6C                          __end_of_ReadADC 3F60  
                   ?_voltage_set_display 0001                          __end_of_OpenADC 38FC  
                           ___fttol@exp1 0097                          __end_of_OpenSPI 39B2  
                           ___fttol@lval 0093                __end_of_send_contrast_spi 3D84  
                           _WriteCmdXLCD 3AFC                   __size_of_init_GPIO_DIR 001A  
                            _Delay1KTCYx 3F42                            ?_SetDDRamAddr 0001  
                                  ?_main 0001                          __end_of___awdiv 365E  
                        __end_of___ftadd 2348                                    STR_10 BF61  
                                  STR_11 BFF9                                    STR_12 BFC8  
                                  STR_20 BFE4                                    STR_13 BF61  
                                  STR_21 BFD4                                    STR_30 BFC8  
                                  STR_14 BFE4                                    STR_22 BEFF  
                                  STR_31 BF8E                                    STR_15 BFD4  
                                  STR_23 BF43                                    STR_24 BF98  
                                  STR_40 BFBC                                    STR_32 BFBC  
                                  STR_16 BEDD                                    STR_25 BFFD  
                                  STR_41 BFC2                                    STR_33 BFC2  
                                  STR_17 BF10                                    STR_42 BFC8  
                                  STR_34 BFC8                                    STR_26 BFC8  
                                  STR_50 BFCE                                    STR_18 BF98  
                                  STR_19 BFFD                                    STR_27 BFB6  
                                  STR_35 BFA9                                    STR_43 BFA1  
                                  STR_51 BECB                                    STR_44 BF84  
                                  STR_52 BFB0                                    STR_28 BF8E  
                                  STR_36 BF84                          __end_of___awmod 3838  
                                  STR_29 BFED                                    STR_45 BFC8  
                                  STR_37 BFC8                                    STR_53 BF54  
                                  STR_46 BFDF                                    STR_38 BFDF  
                                  STR_54 BF21                                    STR_39 BF84  
                                  STR_47 BF79                                    STR_55 BF32  
                                  STR_48 BFBC                                    STR_56 BEEE  
                                  STR_49 BFC2                                    STR_57 BFDA  
                                  STR_58 BFCE                                    STR_59 BFCE  
                                  _DAC_i 0065                          __end_of___ftdiv 2FDE  
                                  _DAC_u 0063                                    _CMCON 000FB4  
                        __end_of___ftneg 3DF4                          __end_of___lldiv 36E0  
                        __end_of___ftmul 31E0                          ___awdiv@divisor 001F  
                        __end_of___llmod 389E                          __end_of___ftsub 3AFC  
                        __end_of___fttol 2A38                          __end_of___lwdiv 3A5E  
                                  i2l275 209A                                    i2l299 20A4  
                                  i2l750 3A04                                    i2l751 39EC  
                                  i2l743 39C6                                    i2l752 39F0  
                                  i2l745 39CA                                    i2l746 39CC  
                                  i2l749 39E6                                    i2l767 3EEC  
                        ___awdiv@counter 0021                                    _PORTB 000F81  
                                  _TRISB 000F93                _current_limit_set_display 2DB0  
                  __size_of_Delay10KTCYx 0016                            __CFG_PWRT$OFF 000000  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                             ___lltoft@exp 0051  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
             _display_brightness_percent 0052                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                          __end_of_dpowers BE7D  
                                  _scale 1A84                          __end_of_isdigit 3E36  
                          ___ftpack@sign 001B   __end_of_current_auto_limit_set_display 30EC  
__size_of_current_auto_limit_set_display 010E           _current_auto_limit_set_display 2FDE  
                                  main@i 00CA                               _ConvertADC 3F86  
                         __CFG_BOREN$OFF 000000                                    pclath 000FFA  
                                  tablat 000FF5                       __size_ofi2_OpenSPI 005A  
                                  status 000FD8                          __end_of_sprintf 1458  
              __size_of_init_dig_pot_SPI 001C                         __end_of_CloseADC 3F86  
                         __CFG_MCLRE$OFF 000000                          __initialization 3756  
                  ??_voltage_set_display 0052                             __end_of_main 1A84  
                       __end_of_BusyXLCD 3BB2                       __size_of_Delay1Sec 002E  
                           _Delay10KTCYx 3EF2                    __size_of_DelayPORXLCD 0008  
                         ??_SetDDRamAddr 0017                           _rotary_encoder 0008  
       init_dig_pot_SPI@config_smp_phase 001C                              ?i2_WriteSPI 0001  
                       __end_of_OpenXLCD 35DA                                   ??_main 00C5  
                          ___fttol@sign1 0092                            __activetblptr 000002  
                          _WriteDataXLCD 3B3A                               _SetChanADC 3F08  
                   __size_of__tdiv_to_l_ 0132                            ?_init_dac_SPI 0001  
                                 _ADCON0 000FC2                                   _ADCON1 000FC1  
                                 _ADCON2 000FC0         init_dig_pot_SPI@config_sync_mode 001A  
                       ___llmod@dividend 0024                                   ?_scale 0044  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                       ___awdiv@dividend 001D                         __end_of___ftpack 3536  
                          _init_GPIO_DIR 3EA8                         __end_of_WriteSPI 3EDA  
                       __end_of___lltoft 3756                           _constant_power 00EC  
                                 i2l4442 39F4                                   i2l4438 39D0  
                                 i2l5510 2008                                   i2l5502 1FBE  
                                 i2l5520 2038                                   i2l5512 200E  
                                 i2l5504 1FC2                                   i2l5530 2084  
                                 i2l5526 207E                                   i2l5518 2034  
                                 i2l5470 1EE4                                   i2l5480 1F22  
                                 i2l5474 1F04                                   i2l5494 1F92  
                                 i2l5486 1F48                                   i2l5496 1F98  
                                 i2l5488 1F4C                         __end_of___lwtoft 3E18  
                                 _OSCCON 000FD3                           _cmd_dac_i_high 005C  
                                 _SSPBUF 000FC9                                ??_BusyADC 0017  
                  __end_of_clear_display 3F42                                ??_ReadADC 0019  
                         _cmd_dac_u_high 005A            i2init_dac_SPI@config_bus_mode 0005  
                              ??_OpenADC 0019                             _DelayPORXLCD 3F78  
                              ??_OpenSPI 0019                           __CFG_XINST$OFF 000000  
               _display_contrast_percent 00CE                         __end_of__powers_ BEA4  
                         _send_dac_i_spi 3C7A                                   ___ftge 33C0  
                         _send_dac_u_spi 3C1E                                   ___wmul 3DAA  
                              ??___awdiv 0021                                ??___ftadd 00A6  
                         __CFG_STVREN$ON 000000                                ??___awmod 001B  
                              ??___ftdiv 0080                                ??___ftneg 0022  
                              ??___lldiv 001F                                ??___ftmul 003B  
                              ??___llmod 002C                                ??___ftsub 0052  
                              ??___fttol 008D                   __end_of_rotary_encoder 20E0  
                     _send_backlight_spi 3D84                         __end_of_init_ADC 3C1E  
                                 _i_mode 00E5                                ??___lwdiv 002F  
             __size_of_send_contrast_spi 0028                                   _fround 2348  
                                 clear_0 379C                                   clear_1 37A8  
                                 clear_2 37B4                         ___awdiv@quotient 0023  
                        ___awmod@divisor 0019                        __end_ofi2_OpenSPI 3A0C  
                        ___awmod@counter 001B                          _default_display 258E  
                        WriteSPI@TempVar 0017                           ?_WriteDataXLCD 0001  
                         _step_size_mode 00F9                    ___ftmul@f3_as_product 003F  
                       ??i2_init_dac_SPI 0004                      ?_send_backlight_spi 0001  
                           __pdataCOMRAM 005D                                ??_isdigit 0017  
                           __mediumconst BE54                           ??_init_dac_SPI 001A  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                         __end_of_putsXLCD 3C7A  
                         ?_init_GPIO_DIR 0001                                ??_sprintf 00BC  
                      __end_of_Delay1Sec 3CD6                              ?_ConvertADC 0001  
                             __accesstop 0080                  __end_of__initialization 37BA  
                      ?_contrast_display 0001                          __CFG_PBADEN$OFF 000000  
                             ___ftadd@f1 00A0                               ___ftadd@f2 00A3  
                             ___ftge@ff1 00AC                               ___ftge@ff2 00AF  
                    __size_ofi2_WriteSPI 0018               __end_of_brightness_display 33C0  
                   ??_send_backlight_spi 001D                            ___rparam_used 000001  
               _voltage_set_display$2280 00C2                               ___ftdiv@f1 004B  
                             ___ftdiv@f2 004E                               ___ftdiv@f3 0084  
                     ??_contrast_display 0052                   __end_of_send_dac_i_spi 3CA8  
                             ___ftneg@f1 001F                   __end_of_send_dac_u_spi 3C4C  
                             ___ftmul@f1 0035                               ___ftmul@f2 0038  
                          _voltage_set_i 00D1                            _voltage_set_u 00D4  
                             ___ftsub@f1 00AC                               ___ftsub@f2 00AF  
                        init_ADC@channel 001C                               ___fttol@f1 0089  
                         __pcstackCOMRAM 0001                             __pidataBANK0 3F1E  
                        init_ADC@config1 001F                          init_ADC@config2 0020  
                        init_ADC@config3 001D                 __end_ofi2_send_dac_i_spi 3D32  
                             ___lltoft@c 0098                 __end_ofi2_send_dac_u_spi 3D04  
                        ?_rotary_encoder 0001                            __end_of_scale 1E74  
                             ___lwtoft@c 0032                               __div_to_l_ 2B6A  
                            ?_SetChanADC 0001                        Delay1Sec@cntDelay 0018  
                              ?_CloseADC 0001                          __div_to_l_@exp1 0022  
                        __div_to_l_@cntr 0021                                  ??_scale 0047  
                 __size_of_DelayFor18TCY 001E                          __div_to_l_@quot 001D  
                           sprintf@width 0148                               __pbssBANK0 00CE  
                             __pbssBANK1 0100                       _protection_display 3D32  
                              ?_BusyXLCD 0001       __size_of_current_limit_set_display 011E  
                        WriteCmdXLCD@cmd 0017                            _button_enable 00FA  
                   __end_of_SetDDRamAddr 3AB0                       __size_of_init_XLCD 0038  
                     init_ADC@portconfig 0021             init_dac_SPI@config_smp_phase 001C  
                              ?_OpenXLCD 0001                            __div_to_l_@f1 0017  
                          __div_to_l_@f2 001A                          ?_send_dac_i_spi 0001  
                    ?_protection_display 0001                         _init_dig_pot_SPI 3E54  
                        ?_send_dac_u_spi 0001                  __end_of_default_display 27AE  
                                ?___ftge 00AC                        WriteDataXLCD@data 0017  
                                ?___wmul 0025              init_dac_SPI@config_bus_mode 001B  
           init_dac_SPI@config_sync_mode 001A                          ??_WriteDataXLCD 0017  
                           ?_Delay1KTCYx 0001                                  ?_fround 0044  
                    __size_of_ConvertADC 0004                                ?___ftpack 0017  
                              ?_WriteSPI 0001                                ?___lltoft 0098  
                              ?___lwtoft 0032                     ??_protection_display 001B  
                                _INTCON2 000FF1                          ??_init_GPIO_DIR 0017  
                         _ResultString_i 0114                           _ResultString_u 011E  
                             ??_CloseADC 0017                                  _SSPCON1 000FC6  
                                _SSPSTAT 000FC7                       __size_of_putrsXLCD 005C  
                             ??_BusyXLCD 0017                                ?_init_ADC 0001  
                     _display_brightness 005F                                  _BusyADC 3F60  
                                _ReadADC 3F52        __end_of_current_limit_set_display 2ECE  
                 _raw_adc_offset_voltage 00EF                               ??_OpenXLCD 001B  
                              _ADCResult 00E3                                  _OpenADC 389E  
                  _step_size_mode_enable 00F8                        __end_of__npowers_ BECB  
                                _OpenSPI 3958                                  __Hparam 0000  
                    __size_of_SetChanADC 0016                               _scale$2284 0047  
                                __Lparam 0000                     __end_of_init_dac_SPI 3E8C  
                        __size_of___ftge 00C8                                  ___awdiv 35DA  
                          _DelayFor18TCY 3E36                                  ___ftadd 20E0  
                                ___awmod 37C8                                  ___ftdiv 2ECE  
                                ___ftneg 3DD0                                  ___lldiv 365E  
                        __size_of___wmul 0026                                  ___ftmul 30EC  
                                ___llmod 3838                                  ___ftsub 3AB0  
                                ___fttol 28F4                                ?_putsXLCD 0018  
                                ___lwdiv 3A0C                                  __pcinit 3756  
                                _cmd_dac 0067                               ??___ftpack 001C  
                        putrsXLCD@buffer 0018                          __size_of_fround 0246  
                           ??i2_WriteSPI 0001                                  __ramtop 1000  
                             ??_WriteSPI 0017                               ??___lltoft 009C  
                                __ptext0 1458                                  __ptext1 27AE  
                                __ptext2 3C1E                                  __ptext3 3D5C  
                                __ptext4 3D84                                  __ptext5 3E54  
                                __ptext6 3D32                                  __ptext7 3F30  
                                __ptext8 3BB2                                  __ptext9 3536  
                      __end_of_init_XLCD 3BEA                               ??___lwtoft 0035  
                            ?__div_to_l_ 0017                                  _dpowers BE55  
                      i2OpenSPI@bus_mode 0001                                  _isdigit 3E18  
                       ___awmod@dividend 0017                           OpenADC@config2 0017  
                                _sprintf 0012                           __pintcode_body 1E74  
                   end_of_initialization 37BA                               ??_init_ADC 001C  
                          __Lmediumconst BE54                                  int_func 1E74  
            __end_of_voltage_set_display 28F4                       __end_ofi2_WriteSPI 3EF2  
                        ___lldiv@divisor 001B                          ___lldiv@counter 0023  
                         ?_DelayFor18TCY 0001                         ?_default_display 0001  
                                postdec1 000FE5                                  postdec2 000FDD  
                       WriteSPI@data_out 0018                                  postinc0 000FEE  
                                postinc2 000FDE                               ??_putsXLCD 001A  
                         __tdiv_to_l_@f1 0017                           __tdiv_to_l_@f2 001A  
                      __end_of_putrsXLCD 3958                            ??__tdiv_to_l_ 001D  
                           _display_mode 0056                                i2_OpenSPI 39B2  
                              _TRISAbits 000F92                                _TRISBbits 000F93  
                              _TRISCbits 000F94                    __size_of_SetDDRamAddr 0052  
                           ??_ConvertADC 0017                              ___ftdiv@exp 0087  
                              _Delay1Sec 3CA8                         ??_rotary_encoder 0007  
                    __size_of__div_to_l_ 0128                               _voltage_in 00E9  
                            ___ftmul@exp 003E                        ?i2_send_dac_i_spi 0001  
                         __end_of___ftge 3488                        ?i2_send_dac_u_spi 0001  
                         __end_of___wmul 3DD0                __size_of_contrast_display 00F0  
                          __pidataCOMRAM 3F6C                       _brightness_display 32D0  
                     ??i2_send_dac_i_spi 0007                       __end_of_ConvertADC 3F8A  
                     ??i2_send_dac_u_spi 0007                           __end_of_fround 258E  
                       OpenSPI@smp_phase 0018                             _SetDDRamAddr 3A5E  
                   __size_of_Delay1KTCYx 0010                             ??_SetChanADC 0017  
                     SetDDRamAddr@DDaddr 001A                   __size_of_clear_display 0012  
               __end_of_init_dig_pot_SPI 3E70                      start_initialization 3756  
                             ?i2_OpenSPI 0001           _return_default_display_counter 00DD  
                    ?_brightness_display 0001                      __end_of__tdiv_to_l_ 2B6A  
                       OpenSPI@sync_mode 0019                        __size_of_CloseADC 0006  
                       ??_send_dac_i_spi 001D                  _ResultString_brightness 012D  
                       ??_send_dac_u_spi 001D                    __size_of_init_dac_SPI 001C  
                             ?_Delay1Sec 0001                          ___llmod@divisor 0028  
                       __CFG_OSC$INTIO67 000000                        __size_of_BusyXLCD 003A  
                        ___llmod@counter 002C              __size_of_send_backlight_spi 0026  
                        ??_DelayFor18TCY 0017                     ??_brightness_display 0052  
                       _rotary_direction 0055                       __end_of_SetChanADC 3F1E  
                      __size_of_OpenXLCD 00A4                                 ??___ftge 00B2  
                               ??___wmul 0029                            ?_WriteCmdXLCD 0001  
                      _main_loop_counter 00E1                              __pdataBANK0 00E9  
                       __CFG_LPT1OSC$OFF 000000                                 ??_fround 0047  
                          sprintf@tmpval 0144                               fround@prec 004D  
                      __size_of___ftpack 00AE                        __size_of_WriteSPI 0018  
                      __size_of___lltoft 0076                              __pbssCOMRAM 0052  
                      __size_of___lwtoft 0024                            __pcstackBANK0 0080  
                          __pcstackBANK1 013C                             _init_dac_SPI 3E70  
                           _isdigit$1890 0018                                _dac_i_low 005B  
                        Delay1KTCYx@unit 0017                                _dac_u_low 0059  
                __size_ofi2_init_dac_SPI 001C                              sprintf@flag 014E  
                            sprintf@fval 0152                              sprintf@prec 0155  
                            sprintf@temp 013F                              _cmd_dig_pot 0058  
                               ?_BusyADC 0001                                 ?_ReadADC 0017  
                      __size_of_init_ADC 0034                     _button_delay_counter 00DF  
                          _clear_display 3F30                        OpenADC@portconfig 0018  
                               ?_OpenADC 0017                                 ?_OpenSPI 0017  
                              _main$2281 00C7                           putsXLCD@buffer 0018  
                       ___lwdiv@dividend 002B                        __CFG_CCP2MX$PORTC 000000  
                              __pintcode 0008                            __pmediumconst BE54  
                         ??_WriteCmdXLCD 0017    _return_default_display_counter_enable 00E6  
                               ?___awdiv 001D                                 ?___ftadd 00A0  
                               ?___awmod 0017                                 ?___ftdiv 004B  
                               ?___ftneg 001F                                 ?___lldiv 0017  
                               ?___ftmul 0035                                 ?___llmod 0024  
                               ?___ftsub 00AC                                __npowers_ BEA4  
                               ?___fttol 0089                            ?_Delay10KTCYx 0001  
                               ?___lwdiv 002B                              __tdiv_to_l_ 2A38  
                      __size_of_putsXLCD 002E                    __end_of_WriteDataXLCD 3B78  
                           ??__div_to_l_ 001D         ??_current_protection_set_display 0052  
        ?_current_protection_set_display 0001                                 ?_isdigit 0001  
            __size_of_protection_display 002A                              ??i2_OpenSPI 0003  
                               _ADC_vRef 00F5                                _init_XLCD 3BB2  
                               _DAC_vRef 00F2                         ___lwdiv@quotient 002F  
                  __end_of_init_GPIO_DIR 3EC2                                 ?_sprintf 00B5  
                         __size_of_scale 03F0                           ___wmul@product 0029  
                          OpenADC@config 001B                                 _LATAbits 000F89  
                               _LATBbits 000F8A                              ??_Delay1Sec 0017  
                               _LATCbits 000F8B                           ?_clear_display 0001  
                               _PIE1bits 000F9D                            ?_DelayPORXLCD 0001  
                              _send_byte 0057               ?_current_limit_set_display 0001  
                               _PIR1bits 000F9E                          OpenXLCD@lcdtype 001B  
                     __end_of__div_to_l_ 2C92                                 i2u497_40 1EEC  
                               i2u497_42 1EEE                                 i2u498_40 1EF8  
                               i2u498_42 1EFA                                 i2u762_47 1F0E  
                               _RCONbits 000FD0                         __CFG_WDTPS$32768 000000  
                         ??_Delay10KTCYx 0017                         _contrast_display 31E0  
                        OpenSPI@bus_mode 0017                               _ADCON0bits 000FC2  
                              main@i_556 00CC                        ___wmul@multiplier 0025  
        init_dig_pot_SPI@config_bus_mode 001B                                _step_size 005D  
                              _putrsXLCD 38FC                         Delay10KTCYx@unit 0018  
                              _voltage_i 00D7                                _voltage_u 00DA  
                             ?_init_XLCD 0001                                 _CloseADC 3F80  
                              copy_data0 376A                                copy_data1 378A  
                               _BusyXLCD 3B78                                init_ADC@i 001E  
                         ??_DelayPORXLCD 0018                                 _OpenXLCD 3536  
                       __size_of_BusyADC 000C                         __size_of_ReadADC 000E  
                               __Hrparam 0000                         __size_of_OpenADC 005E  
                               __Lrparam 0000                         __size_of_OpenSPI 005A  
           __size_of_voltage_set_display 0146                         __size_of___awdiv 0084  
                       __size_of___ftadd 0268                         __size_of___awmod 0070  
                       __size_of___ftdiv 0110                         __size_of___ftneg 0024  
                       __size_of___lldiv 0082                         __size_of___ftmul 00F4  
                       __size_of___llmod 0066                         __size_of___ftsub 004C  
                       __size_of___fttol 0144         ??_current_auto_limit_set_display 0052  
        ?_current_auto_limit_set_display 0001                         __size_of___lwdiv 0052  
                               ___ftpack 3488                                 _WriteSPI 3EC2  
                            _fround$2282 004A                              _fround$2283 0047  
                               ___lltoft 36E0                       i2WriteSPI@data_out 0002  
                               ___lwtoft 3DF4                 __size_of_default_display 0220  
                             sprintf@exp 0150                               sprintf@val 014A  
                             ?_putrsXLCD 0018                         __size_of_isdigit 001E  
                      ?_init_dig_pot_SPI 0001                          ___lwdiv@divisor 002D  
                        ___lwdiv@counter 0031                                 __ptext10 3AFC  
                               __ptext11 3F78                                 __ptext20 2C92  
                               __ptext12 3F42                                 __ptext21 2DB0  
                               __ptext13 3EF2                                 __ptext30 1A84  
                               __ptext22 2FDE                                 __ptext14 3EA8  
                               __ptext31 3E18                                 __ptext23 3C7A  
                               __ptext15 3BEA                                 __ptext40 3838  
                               __ptext32 2348                                 __ptext24 3E70  
                               __ptext16 389E                                 __ptext41 365E  
                               __ptext33 3DAA                                 __ptext25 3958  
                               __ptext17 3F80                                 __ptext50 3B78  
                               __ptext42 28F4                                 __ptext34 30EC  
                               __ptext26 3EC2                                 __ptext18 258E  
                               __ptext51 3DF4                                 __ptext43 3AB0  
                               __ptext35 37C8                                 __ptext27 31E0  
                               __ptext19 3C4C                                 __ptext60 3F60  
                               __ptext52 3488                                 __ptext44 20E0  
                               __ptext36 35DA                                 __ptext28 32D0  
                               __ptext53 3A0C                                 __ptext45 3DD0  
                               __ptext37 2A38                                 __ptext29 0012  
                               __ptext62 3CD6                                 __ptext54 3A5E  
                               __ptext46 33C0                                 __ptext38 2B6A  
                               __ptext63 3D04                                 __ptext55 3E36  
                               __ptext47 2ECE                                 __ptext39 36E0  
                               __ptext64 3E8C                                 __ptext56 3F08  
                               __ptext48 38FC                                 __ptext65 39B2  
                               __ptext57 3F52                                 __ptext49 3B3A  
                               __ptext66 3EDA                                 __ptext58 3CA8  
                               __ptext59 3F86                __size_ofi2_send_dac_i_spi 002E  
                               __powers_ BE7D                       ??_init_dig_pot_SPI 001A  
                   __end_of_WriteCmdXLCD 3B3A                __size_ofi2_send_dac_u_spi 002E  
                       __size_of_sprintf 1446                           i2_init_dac_SPI 3E8C  
                        ??_clear_display 0018                                 _init_ADC 3BEA  
                       _display_contrast 0061                            __size_of_main 062C  
                           _set_contrast 00E8                       _ResultString_set_i 0100  
                     _ResultString_set_u 010A                                 int$flags 0068  
                               _putsXLCD 3C4C                            ??_Delay1KTCYx 0017  
                             _INTCONbits 000FF2                        i2WriteSPI@TempVar 0001  
                            ??_init_XLCD 001C                    _ResultString_contrast 0132  
                               isdigit@c 0019                       i2OpenSPI@smp_phase 0002  
                 __end_ofi2_init_dac_SPI 3EA8                                 scale@scl 004A  
                   __end_of_Delay10KTCYx 3F08                                 intlevel2 0000  
                              sprintf@ap 0142                         __tdiv_to_l_@exp1 0025  
                       __tdiv_to_l_@cntr 0024                                sprintf@sp 00B5  
                       __tdiv_to_l_@quot 0020               __end_of_send_backlight_spi 3DAA  
        _ResultString_brightness_percent 0128                         ___lldiv@dividend 0017  
            _button_delay_counter_enable 00E7                        SetChanADC@channel 0018  
                     i2OpenSPI@sync_mode 0003              __size_of_brightness_display 00F0  
                  __end_of_DelayFor18TCY 3E54                             ?__tdiv_to_l_ 0017  
                __size_of_rotary_encoder 20D8                                 sprintf@c 0157  
                               sprintf@f 00B7                     __end_of_DelayPORXLCD 3F80  
                            ??_putrsXLCD 001A                         ___lldiv@quotient 001F  
                    __end_of_Delay1KTCYx 3F52                              _SSPCON1bits 000FC6  
                        ?i2_init_dac_SPI 0001                        ??_default_display 0052  
               __end_of_contrast_display 32D0   __end_of_current_protection_set_display 2DB0  
__size_of_current_protection_set_display 011E           _current_protection_set_display 2C92  
            ??_current_limit_set_display 0052  
